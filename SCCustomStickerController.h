//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCScribbleViewDelegate-Protocol.h"

@class NSString, SCScribbleView, UIImage, UILabel;
@protocol SCCustomStickerControllerDelegate, SCDownloadableContentManaging, SCPerforming;

@interface SCCustomStickerController : NSObject <SCScribbleViewDelegate>
{
    _Bool _shouldFadeInAndOut;
    long long _imageSizeLimit;
    UIImage *_capturedImage;
    id <SCPerforming> _dispatchPerformer;
    UILabel *_cutAlertLabel;
    struct unique_ptr<SnapCutExt, std::__1::default_delete<SnapCutExt>> _snapCut;
    id <SCDownloadableContentManaging> _downloadableContentManager;
    _Bool _isOpen;
    _Bool _isCutting;
    id <SCCustomStickerControllerDelegate> _delegate;
    SCScribbleView *_scribbleView;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_fadeOutCutAlertLabel;
- (void)_loadSnapCutModelCompletion:(CDUnknownBlockType)arg1;
- (void)_runGrabCut:(id)arg1;
- (void)_setSnapCutModelIfNecessary;
- (void)_showCutAlertLabel:(id)arg1;
- (void)_showTooltip:(id)arg1;
- (void)close;
@property(nonatomic) __weak id <SCCustomStickerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)initWithImageSizeLimit:(long long)arg1 shouldFadeInAndOut:(_Bool)arg2 downloadableContentManager:(id)arg3;
@property(readonly, nonatomic) _Bool isCutting; // @synthesize isCutting=_isCutting;
@property(readonly, nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
- (void)openCustomStickerScribbleView;
- (void)scribbleBegan;
- (void)scribbleEnded:(id)arg1;
@property(readonly, nonatomic) SCScribbleView *scribbleView; // @synthesize scribbleView=_scribbleView;
- (void)setCapturedImage:(id)arg1;
- (void)showMaxLimitHitTooltip;
- (void)showOnboardingTooltip;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

