//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "MGLVectorStyleLayer.h"

@class MGLStyleValue;

@interface MGLSymbolStyleLayer : MGLVectorStyleLayer
{
}

@property(retain, nonatomic) MGLStyleValue *iconAllowOverlap;
@property(retain, nonatomic) MGLStyleValue *iconAllowsOverlap;
@property(retain, nonatomic) MGLStyleValue *iconAnchor;
@property(retain, nonatomic) MGLStyleValue *iconColor;
@property(nonatomic) struct MGLTransition iconColorTransition;
@property(retain, nonatomic) MGLStyleValue *iconHaloBlur;
@property(nonatomic) struct MGLTransition iconHaloBlurTransition;
@property(retain, nonatomic) MGLStyleValue *iconHaloColor;
@property(nonatomic) struct MGLTransition iconHaloColorTransition;
@property(retain, nonatomic) MGLStyleValue *iconHaloWidth;
@property(nonatomic) struct MGLTransition iconHaloWidthTransition;
@property(retain, nonatomic) MGLStyleValue *iconIgnorePlacement;
@property(retain, nonatomic) MGLStyleValue *iconIgnoresPlacement;
@property(retain, nonatomic) MGLStyleValue *iconImage;
@property(retain, nonatomic) MGLStyleValue *iconImageName;
@property(retain, nonatomic) MGLStyleValue *iconKeepUpright;
@property(retain, nonatomic) MGLStyleValue *iconOffset;
@property(retain, nonatomic) MGLStyleValue *iconOpacity;
@property(nonatomic) struct MGLTransition iconOpacityTransition;
@property(retain, nonatomic) MGLStyleValue *iconPadding;
@property(retain, nonatomic) MGLStyleValue *iconPitchAlignment;
@property(retain, nonatomic) MGLStyleValue *iconRotate;
@property(retain, nonatomic) MGLStyleValue *iconRotation;
@property(retain, nonatomic) MGLStyleValue *iconRotationAlignment;
@property(retain, nonatomic) MGLStyleValue *iconScale;
@property(retain, nonatomic) MGLStyleValue *iconSize;
@property(retain, nonatomic) MGLStyleValue *iconTextFit;
@property(retain, nonatomic) MGLStyleValue *iconTextFitPadding;
@property(retain, nonatomic) MGLStyleValue *iconTranslate;
@property(retain, nonatomic) MGLStyleValue *iconTranslateAnchor;
@property(retain, nonatomic) MGLStyleValue *iconTranslation;
@property(retain, nonatomic) MGLStyleValue *iconTranslationAnchor;
@property(nonatomic) struct MGLTransition iconTranslationTransition;
- (id)initWithIdentifier:(id)arg1 source:(id)arg2;
@property(retain, nonatomic, getter=isIconOptional) MGLStyleValue *iconOptional;
@property(retain, nonatomic, getter=isTextOptional) MGLStyleValue *textOptional;
@property(retain, nonatomic) MGLStyleValue *keepsIconUpright;
@property(retain, nonatomic) MGLStyleValue *keepsTextUpright;
@property(retain, nonatomic) MGLStyleValue *maximumTextAngle;
@property(retain, nonatomic) MGLStyleValue *maximumTextWidth;
- (id)predicate;
@property(readonly, nonatomic) struct SymbolLayer *rawLayer;
- (void)setPredicate:(id)arg1;
- (void)setSourceLayerIdentifier:(id)arg1;
@property(retain, nonatomic) MGLStyleValue *symbolAvoidEdges;
@property(retain, nonatomic) MGLStyleValue *symbolAvoidsEdges;
@property(retain, nonatomic) MGLStyleValue *symbolPlacement;
@property(retain, nonatomic) MGLStyleValue *symbolSpacing;
@property(retain, nonatomic) MGLStyleValue *text;
@property(retain, nonatomic) MGLStyleValue *textAllowOverlap;
@property(retain, nonatomic) MGLStyleValue *textAllowsOverlap;
@property(retain, nonatomic) MGLStyleValue *textAnchor;
@property(retain, nonatomic) MGLStyleValue *textColor;
@property(nonatomic) struct MGLTransition textColorTransition;
@property(retain, nonatomic) MGLStyleValue *textField;
@property(retain, nonatomic) MGLStyleValue *textFont;
@property(retain, nonatomic) MGLStyleValue *textFontNames;
@property(retain, nonatomic) MGLStyleValue *textFontSize;
@property(retain, nonatomic) MGLStyleValue *textHaloBlur;
@property(nonatomic) struct MGLTransition textHaloBlurTransition;
@property(retain, nonatomic) MGLStyleValue *textHaloColor;
@property(nonatomic) struct MGLTransition textHaloColorTransition;
@property(retain, nonatomic) MGLStyleValue *textHaloWidth;
@property(nonatomic) struct MGLTransition textHaloWidthTransition;
@property(retain, nonatomic) MGLStyleValue *textIgnorePlacement;
@property(retain, nonatomic) MGLStyleValue *textIgnoresPlacement;
@property(retain, nonatomic) MGLStyleValue *textJustification;
@property(retain, nonatomic) MGLStyleValue *textJustify;
@property(retain, nonatomic) MGLStyleValue *textKeepUpright;
@property(retain, nonatomic) MGLStyleValue *textLetterSpacing;
@property(retain, nonatomic) MGLStyleValue *textLineHeight;
@property(retain, nonatomic) MGLStyleValue *textMaxAngle;
@property(retain, nonatomic) MGLStyleValue *textMaxWidth;
@property(retain, nonatomic) MGLStyleValue *textOffset;
@property(retain, nonatomic) MGLStyleValue *textOpacity;
@property(nonatomic) struct MGLTransition textOpacityTransition;
@property(retain, nonatomic) MGLStyleValue *textPadding;
@property(retain, nonatomic) MGLStyleValue *textPitchAlignment;
@property(retain, nonatomic) MGLStyleValue *textRotate;
@property(retain, nonatomic) MGLStyleValue *textRotation;
@property(retain, nonatomic) MGLStyleValue *textRotationAlignment;
@property(retain, nonatomic) MGLStyleValue *textSize;
@property(retain, nonatomic) MGLStyleValue *textTransform;
@property(retain, nonatomic) MGLStyleValue *textTranslate;
@property(retain, nonatomic) MGLStyleValue *textTranslateAnchor;
@property(retain, nonatomic) MGLStyleValue *textTranslation;
@property(retain, nonatomic) MGLStyleValue *textTranslationAnchor;
@property(nonatomic) struct MGLTransition textTranslationTransition;
- (id)sourceIdentifier;
- (id)sourceLayerIdentifier;

@end

