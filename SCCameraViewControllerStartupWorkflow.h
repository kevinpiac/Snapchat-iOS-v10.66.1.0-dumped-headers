//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCViewControllerStructuredStartupWorkflow.h"

@class SCQueuePerformer;

@interface SCCameraViewControllerStartupWorkflow : SCViewControllerStructuredStartupWorkflow
{
    SCQueuePerformer *_backgroundPerformer;
}

- (void).cxx_destruct;
- (void)_addObservers:(id)arg1;
- (void)_handleSkippedRecoveryAttempt:(id)arg1 skipReason:(long long)arg2 isBatchCapture:(_Bool)arg3;
- (id)_navBarGradientView:(id)arg1;
- (void)_preloadPreviewAssetsOnce:(id)arg1;
- (void)_recoverCameraFeatures:(id)arg1;
- (void)_resetFlipCount:(id)arg1;
- (void)_setNavigationItemsYOffset:(id)arg1 offset:(double)arg2;
- (void)_setupVerticalToolbar:(id)arg1;
- (id)_tabBarGradientView:(id)arg1;
@property(retain, nonatomic) SCQueuePerformer *backgroundPerformer; // @synthesize backgroundPerformer=_backgroundPerformer;
- (void)cameraSetupAfterStart:(id)arg1;
- (void)configureFeatureDelegates:(id)arg1;
- (void)didSetupVideoPreviewAfterStartingCamera:(id)arg1;
- (void)enableCameraOverlayIfNeeded:(id)arg1;
- (void)hidePrivacyView:(id)arg1;
- (void)initFeatureCoordinator:(id)arg1;
- (void)initNavigationBarButtonItems:(id)arg1;
- (void)logPageViewAndStartCameraWhenViewAppears:(id)arg1;
- (void)performApplicationWillEnterForeground:(id)arg1 notification:(id)arg2;
- (void)performInitialization:(id)arg1;
- (void)performLoadView:(id)arg1;
- (void)performViewDidAppear:(id)arg1 animated:(_Bool)arg2;
- (void)performViewDidLayoutSubviews:(id)arg1;
- (void)performViewDidLoad:(id)arg1;
- (void)performViewWillAppear:(id)arg1 animated:(_Bool)arg2;
- (void)resetButtons:(id)arg1;
- (void)resetCameraTimer:(id)arg1;
- (void)resetEffectiveScale:(id)arg1;
- (void)resetView:(id)arg1;
- (void)setNavigationItemsAlpha:(id)arg1 alpha:(double)arg2;
- (void)setNavigationItemsHidden:(id)arg1 hidden:(_Bool)arg2 includingAlwaysShowItems:(_Bool)arg3 withOffset:(_Bool)arg4;
- (void)setRightSwipeGestureRecognizerEnabled:(id)arg1;
- (void)setupCaptureVideoPreviewView:(id)arg1;
- (_Bool)shouldHandleVolumeButtonEvents:(id)arg1;
- (void)showPrivacyView:(id)arg1;
- (void)startCamera:(id)arg1 context:(id)arg2;
- (void)startCamera:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)startDeviceMotionUpdates:(id)arg1;
- (void)startHandlingVolumeButtonEvents:(id)arg1;
- (void)startHandlingVolumeButtonEventsIfNeeded:(id)arg1;

@end

