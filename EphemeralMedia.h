//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MediaCacheInfoDataSource-Protocol.h"
#import "MediaDataSource-Protocol.h"
#import "MediaDelegate-Protocol.h"
#import "MediaImageProcessingDelegate-Protocol.h"
#import "MediaUploadDelegate-Protocol.h"
#import "NSCoding-Protocol.h"
#import "SnapVideoFilterDelegate-Protocol.h"

@class CLLocation, EphemeralMediaDelegateAnnouncer, Media, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSURL, SCCameraDeepLinkMetadata, SCContextContextHint, SCR2StorySnapClientMetadata, SCSnapCommonLoggingParameters, SCSnapVideoFilterState, SOJUMultiSnapMetadata, SnapVideoFilter;

@interface EphemeralMedia : NSObject <SnapVideoFilterDelegate, MediaDataSource, MediaDelegate, MediaCacheInfoDataSource, MediaImageProcessingDelegate, NSCoding, MediaUploadDelegate>
{
    _Bool _infiniteDuration;
    _Bool _isLastLoopableStorySnap;
    _Bool _cameraFrontFacing;
    _Bool _forceTranscodeOnServer;
    _Bool _shouldIncludeLocationData;
    Media *_media;
    Media *_thumbnailMedia;
    NSURL *_mediaUploadURL;
    NSString *__id;
    NSString *_captionText;
    NSString *_attachmentUrl;
    long long _animatedSnapType;
    NSString *_clientId;
    NSString *_venueId;
    long long _ephemeralMediaState;
    NSDate *_firstPostDate;
    NSString *_geoFilterId;
    NSString *_encryptedGeoData;
    NSArray *_unlockablesVendorTags;
    NSArray *_allGeoFilterIds;
    NSString *_storyFilterId;
    NSString *_storyLensId;
    long long _geoFilterImpressions;
    CLLocation *_postLocation;
    CLLocation *_captureLocation;
    NSArray *_captureLocationHistory;
    NSString *_placeID;
    unsigned long long _numberOfTimesReloaded;
    double _time;
    double _timeLeft;
    double _timeStartedViewing;
    long long _type;
    SnapVideoFilter *_videoFilter;
    double _videoTimeSoFar;
    NSDate *_viewedTimestamp;
    long long _orientation;
    NSString *_ephemeralMediaKey;
    NSString *_ephemeralMediaIv;
    NSString *_gallerySnapId;
    EphemeralMediaDelegateAnnouncer *_delegateAnnouncer;
    NSString *_mediaChecksum;
    SCSnapCommonLoggingParameters *_commonLoggingParameters;
    SCContextContextHint *_contextHint;
    NSArray *_notifiedUsernames;
    NSDictionary *_userTaggingInfo;
    SOJUMultiSnapMetadata *_multiSnapMetadata;
    SCR2StorySnapClientMetadata *_storySnapClientMetadata;
    NSData *_lensMetadata;
    NSString *_unlockablesSnapInfo;
    long long _sendSource;
    NSDate *_captureDate;
    long long _snapSource;
    SCCameraDeepLinkMetadata *_deepLinkMetadata;
    NSMutableDictionary *_secretShareLoggingParams;
    NSMutableDictionary *_shareLoggingParams;
    NSMutableDictionary *_eventLoggingParams;
    NSMutableArray *_viewingTimestamps;
    SCSnapVideoFilterState *_videoFilterState;
    NSString *_encryptedVenueId;
}

+ (unsigned long long *)fasterCodingKeys;
+ (unsigned long long)fasterCodingVersion;
- (void).cxx_destruct;
- (void)_ephemeralMediaDidDecodeObject;
- (void)_ephemeralMediaWillEncodeObject;
@property(retain, nonatomic) NSString *_id; // @synthesize _id=__id;
- (void)addEventLoggingParameters:(id)arg1;
- (void)addSecretShareLoggingParameters:(id)arg1;
- (void)addShareLoggingParameters:(id)arg1;
@property(retain, nonatomic) NSArray *allGeoFilterIds; // @synthesize allGeoFilterIds=_allGeoFilterIds;
@property(nonatomic) long long animatedSnapType; // @synthesize animatedSnapType=_animatedSnapType;
@property(copy, nonatomic) NSString *attachmentUrl; // @synthesize attachmentUrl=_attachmentUrl;
@property(nonatomic) _Bool cameraFrontFacing; // @synthesize cameraFrontFacing=_cameraFrontFacing;
@property(retain, nonatomic) NSString *captionText; // @synthesize captionText=_captionText;
@property(copy, nonatomic) NSDate *captureDate; // @synthesize captureDate=_captureDate;
@property(retain, nonatomic) CLLocation *captureLocation; // @synthesize captureLocation=_captureLocation;
@property(copy, nonatomic) NSArray *captureLocationHistory; // @synthesize captureLocationHistory=_captureLocationHistory;
@property(retain, nonatomic) NSString *clientId; // @synthesize clientId=_clientId;
@property(copy, nonatomic) SCSnapCommonLoggingParameters *commonLoggingParameters; // @synthesize commonLoggingParameters=_commonLoggingParameters;
@property(retain, nonatomic) SCContextContextHint *contextHint; // @synthesize contextHint=_contextHint;
- (void)decodeWithFasterDecoder:(id)arg1;
- (id)decryptData:(id)arg1 forMedia:(id)arg2;
@property(copy, nonatomic) SCCameraDeepLinkMetadata *deepLinkMetadata; // @synthesize deepLinkMetadata=_deepLinkMetadata;
@property(retain, nonatomic) EphemeralMediaDelegateAnnouncer *delegateAnnouncer; // @synthesize delegateAnnouncer=_delegateAnnouncer;
- (void)didDecodeObject;
- (void)encodeWithCoder:(id)arg1;
- (void)encodeWithFasterCoder:(id)arg1;
- (_Bool)encrypt;
@property(retain, nonatomic) NSString *encryptedGeoData; // @synthesize encryptedGeoData=_encryptedGeoData;
- (id)encryptedMediaDataToUpload:(id)arg1;
@property(copy, nonatomic) NSString *encryptedVenueId; // @synthesize encryptedVenueId=_encryptedVenueId;
- (id)encryptionDictionaryForMedia:(id)arg1;
- (id)encryptionIvForMedia:(id)arg1;
- (id)encryptionKeyForMedia:(id)arg1;
- (id)endpointForMedia:(id)arg1;
- (id)endpointParamsForMedia:(id)arg1;
@property(retain, nonatomic) NSString *ephemeralMediaIv; // @synthesize ephemeralMediaIv=_ephemeralMediaIv;
@property(retain, nonatomic) NSString *ephemeralMediaKey; // @synthesize ephemeralMediaKey=_ephemeralMediaKey;
@property(nonatomic) long long ephemeralMediaState; // @synthesize ephemeralMediaState=_ephemeralMediaState;
- (id)eventLoggingParameters;
@property(retain, nonatomic) NSMutableDictionary *eventLoggingParams; // @synthesize eventLoggingParams=_eventLoggingParams;
- (id)expirationForMedia:(id)arg1;
- (void)fallbackToSendAsImageWithFilter:(id)arg1 error:(id)arg2;
@property(retain, nonatomic) NSDate *firstPostDate; // @synthesize firstPostDate=_firstPostDate;
@property(nonatomic) _Bool forceTranscodeOnServer; // @synthesize forceTranscodeOnServer=_forceTranscodeOnServer;
@property(readonly, copy, nonatomic) NSString *gallerySnapId; // @synthesize gallerySnapId=_gallerySnapId;
@property(retain, nonatomic) NSString *geoFilterId; // @synthesize geoFilterId=_geoFilterId;
@property(nonatomic) long long geoFilterImpressions; // @synthesize geoFilterImpressions=_geoFilterImpressions;
- (void)imageProcessingDidSucceedForMedia:(id)arg1;
@property(nonatomic) _Bool infiniteDuration; // @synthesize infiniteDuration=_infiniteDuration;
- (id)initWithClientId;
- (id)initWithCoder:(id)arg1;
- (id)initWithGallerySnap:(id)arg1;
- (id)initWithGallerySnap:(id)arg1 clientId:(id)arg2;
- (id)initWithJSONDictionary:(id)arg1;
- (_Bool)isAudioStitch;
- (_Bool)isImage;
@property(nonatomic) _Bool isLastLoopableStorySnap; // @synthesize isLastLoopableStorySnap=_isLastLoopableStorySnap;
- (_Bool)isMediaAlreadyEncrypted:(id)arg1;
- (_Bool)isPsychomantis;
- (_Bool)isSpectaclesVideo;
- (_Bool)isVideo;
- (_Bool)isVideoStreaming;
- (_Bool)isVideoWithNoSound;
- (_Bool)isVideoWithSound;
@property(copy, nonatomic) NSData *lensMetadata; // @synthesize lensMetadata=_lensMetadata;
- (void)logEvent:(id)arg1;
- (id)logId;
- (id)loggingParametersForEvent:(id)arg1;
- (void)markViewingTimestamp;
@property(retain, nonatomic) Media *media; // @synthesize media=_media;
@property(retain, nonatomic) NSString *mediaChecksum; // @synthesize mediaChecksum=_mediaChecksum;
- (id)mediaIdForMedia:(id)arg1;
- (void)mediaUploadDidFailForMedia:(id)arg1;
- (void)mediaUploadDidStart:(id)arg1;
- (void)mediaUploadDidSucceedForMedia:(id)arg1;
@property(retain, nonatomic) NSURL *mediaUploadURL; // @synthesize mediaUploadURL=_mediaUploadURL;
@property(retain, nonatomic) SOJUMultiSnapMetadata *multiSnapMetadata; // @synthesize multiSnapMetadata=_multiSnapMetadata;
- (_Bool)needsAuthToFetch;
@property(retain, nonatomic) NSArray *notifiedUsernames; // @synthesize notifiedUsernames=_notifiedUsernames;
@property(nonatomic) unsigned long long numberOfTimesReloaded; // @synthesize numberOfTimesReloaded=_numberOfTimesReloaded;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
- (_Bool)persist;
@property(copy, nonatomic) NSString *placeID; // @synthesize placeID=_placeID;
- (void)postFailToSendNotification;
@property(retain, nonatomic) CLLocation *postLocation; // @synthesize postLocation=_postLocation;
- (_Bool)preferFasterCoding;
- (id)requestContexts;
- (id)requestKeyWithIds;
- (id)secretShareLoggingParameters;
@property(retain, nonatomic) NSMutableDictionary *secretShareLoggingParams; // @synthesize secretShareLoggingParams=_secretShareLoggingParams;
@property(nonatomic) long long sendSource; // @synthesize sendSource=_sendSource;
- (void)setBool:(_Bool)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setFloat64:(double)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setLoggingParameters:(id)arg1 forEvent:(id)arg2;
- (void)setMentionedUserIds:(id)arg1 usernames:(id)arg2;
- (void)setObject:(id)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setSInt32:(int)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setSInt64:(long long)arg1 forUInt64Key:(unsigned long long)arg2;
@property(retain, nonatomic) NSMutableDictionary *shareLoggingParams; // @synthesize shareLoggingParams=_shareLoggingParams;
@property(nonatomic) _Bool shouldIncludeLocationData; // @synthesize shouldIncludeLocationData=_shouldIncludeLocationData;
@property(nonatomic) long long snapSource; // @synthesize snapSource=_snapSource;
@property(retain, nonatomic) NSString *storyFilterId; // @synthesize storyFilterId=_storyFilterId;
@property(retain, nonatomic) NSString *storyLensId; // @synthesize storyLensId=_storyLensId;
@property(copy, nonatomic) SCR2StorySnapClientMetadata *storySnapClientMetadata; // @synthesize storySnapClientMetadata=_storySnapClientMetadata;
@property(retain, nonatomic) Media *thumbnailMedia; // @synthesize thumbnailMedia=_thumbnailMedia;
@property(nonatomic) double time; // @synthesize time=_time;
@property(nonatomic) double timeLeft; // @synthesize timeLeft=_timeLeft;
@property(nonatomic) double timeStartedViewing; // @synthesize timeStartedViewing=_timeStartedViewing;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void)setUInt64:(unsigned long long)arg1 forUInt64Key:(unsigned long long)arg2;
@property(copy, nonatomic) NSString *unlockablesSnapInfo; // @synthesize unlockablesSnapInfo=_unlockablesSnapInfo;
@property(retain, nonatomic) NSArray *unlockablesVendorTags; // @synthesize unlockablesVendorTags=_unlockablesVendorTags;
@property(retain, nonatomic) NSDictionary *userTaggingInfo; // @synthesize userTaggingInfo=_userTaggingInfo;
@property(copy, nonatomic) NSString *venueId; // @synthesize venueId=_venueId;
@property(retain, nonatomic) SnapVideoFilter *videoFilter; // @synthesize videoFilter=_videoFilter;
@property(copy, nonatomic) SCSnapVideoFilterState *videoFilterState; // @synthesize videoFilterState=_videoFilterState;
@property(nonatomic) double videoTimeSoFar; // @synthesize videoTimeSoFar=_videoTimeSoFar;
@property(retain, nonatomic) NSDate *viewedTimestamp; // @synthesize viewedTimestamp=_viewedTimestamp;
@property(retain, nonatomic) NSMutableArray *viewingTimestamps; // @synthesize viewingTimestamps=_viewingTimestamps;
- (id)shareLoggingParameters;
- (_Bool)shouldEncryptOnDiskForMedia:(id)arg1;
- (_Bool)shouldPostFailToSendNotification;
- (void)targetSetVideoFilter:(id)arg1;
- (_Bool)timeToSendHasExpired;
- (id)typeParams;
- (CDUnknownBlockType)uploadFailureBlock;
- (void)uploadMedia;
- (id)uploadMediaIdForMedia:(id)arg1;
- (long long)uploadMediaTypeForMedia:(id)arg1;
- (id)uploadParametersWithData:(_Bool)arg1 unencryptedData:(id)arg2;
- (id)uploadRequestKeyForMedia:(id)arg1;
- (CDUnknownBlockType)uploadSuccessBlock;
- (id)username;
- (void)videoProcessingDidFailForSnapVideoFilter:(id)arg1 error:(id)arg2;
- (void)videoProcessingDidFinishMultiSnapOverlay:(id)arg1;
- (void)videoProcessingDidSucceedForSnapVideoFilter:(id)arg1 data:(id)arg2;
- (void)willEncodeObject;
- (_Bool)withAnimatedForODP;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

