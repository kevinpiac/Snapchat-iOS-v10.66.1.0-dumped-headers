//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AVAsset, NSArray, NSError, NSMutableArray, NSString, NSURL, SCBatchCaptureConfiguration, SCBatchCaptureSegmentExportSession, SCMultiSnapVideoSegmentedExportSession, SCSentinel, SCUserSession;

@interface SCPreviewEphemeralMediaList : NSObject
{
    _Bool _isMultiSnap;
    NSURL *_videoURL;
    SCMultiSnapVideoSegmentedExportSession *_segmentedExportSession;
    _Bool _isFromCamera;
    _Bool _videoExportFinished;
    _Bool _shouldCacheSnapsToGalleryStore;
    unsigned long long _count;
    AVAsset *_videoAsset;
    NSArray *_timeRanges;
    SCUserSession *_userSession;
    NSArray *_ephemeralMediaList;
    NSArray *_snapVideoFilterList;
    SCSentinel *_cancelTranscodingSentinel;
    CDUnknownBlockType _cameraRollSaveHandler;
    NSMutableArray *_cameraRollSaveInputVideos;
    NSString *_captureSessionID;
    SCBatchCaptureConfiguration *_batchCaptureConfiguration;
    SCBatchCaptureSegmentExportSession *_batchCaptureSegmentExportSession;
    NSError *_batchCaptureSavingError;
    NSArray *_batchCaptureSegmentsToTranscode;
    NSArray *_gallerySnapOverlays;
}

- (void).cxx_destruct;
- (void)_cacheAllSnapsToGalleryStore;
- (void)_cacheBatchCaptureStorySnapsToGalleryStore;
- (void)_cancelMultiSnapTranscoding;
- (void)_exportBatchCaptureMediaAtIndex:(unsigned long long)arg1 totalCount:(unsigned long long)arg2;
- (void)_exportBatchCaptureSegment:(id)arg1 toVideoMediaAtIndex:(unsigned long long)arg2 totalCount:(unsigned long long)arg3;
- (void)_exportImageMediaAtIndex:(unsigned long long)arg1 totalCount:(unsigned long long)arg2;
- (void)_exportSegmentAtIndex:(unsigned long long)arg1 count:(unsigned long long)arg2;
- (long long)_generateSnapVideoFilterList:(id)arg1 atIndex:(long long)arg2 forBatchCaptureSegment:(id)arg3 userSendStartTimestamp:(double)arg4;
- (id)_saveInputVideosToCameraRoll:(id)arg1;
- (void)_setIsBatchCapture:(_Bool)arg1;
- (_Bool)_shouldSaveVideoAfterTranscodingSegment:(id)arg1 toMediaAtIndex:(unsigned long long)arg2;
- (void)_startMultiSnapTranscoding;
- (void)_transcodeBatchCaptureSegment:(id)arg1 toMediaAtIndex:(unsigned long long)arg2 count:(unsigned long long)arg3;
- (void)_transcodeSegmentAtIndex:(unsigned long long)arg1 count:(unsigned long long)arg2;
- (void)addShareLoggingParameters:(id)arg1;
@property(retain, nonatomic) SCBatchCaptureConfiguration *batchCaptureConfiguration; // @synthesize batchCaptureConfiguration=_batchCaptureConfiguration;
- (id)batchCaptureSavingConfiguration;
@property(retain, nonatomic) NSError *batchCaptureSavingError; // @synthesize batchCaptureSavingError=_batchCaptureSavingError;
@property(retain, nonatomic) SCBatchCaptureSegmentExportSession *batchCaptureSegmentExportSession; // @synthesize batchCaptureSegmentExportSession=_batchCaptureSegmentExportSession;
@property(copy, nonatomic) NSArray *batchCaptureSegmentsToTranscode; // @synthesize batchCaptureSegmentsToTranscode=_batchCaptureSegmentsToTranscode;
@property(copy, nonatomic) CDUnknownBlockType cameraRollSaveHandler; // @synthesize cameraRollSaveHandler=_cameraRollSaveHandler;
@property(retain, nonatomic) NSMutableArray *cameraRollSaveInputVideos; // @synthesize cameraRollSaveInputVideos=_cameraRollSaveInputVideos;
- (void)cancelBatchCaptureTranscoding;
- (void)cancelTranscoding;
@property(retain, nonatomic) SCSentinel *cancelTranscodingSentinel; // @synthesize cancelTranscodingSentinel=_cancelTranscodingSentinel;
@property(copy, nonatomic) NSString *captureSessionID; // @synthesize captureSessionID=_captureSessionID;
- (void)configureBatchCaptureWithStateHandler:(id)arg1 configuration:(id)arg2 drawingCache:(id)arg3;
- (void)configureMultiSnapWithStateHandler:(id)arg1 configuration:(id)arg2 drawingCache:(id)arg3;
- (void)configureMultiSnapWithVideoPlaybackRate:(double)arg1;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)dealloc;
- (void)enableCachingToGalleryStoryForBatchCaptureWithGallerySnapOverlays:(id)arg1;
- (void)enableCachingToGalleryStoryWithGallerySnapOverlays:(id)arg1;
- (id)ephemeraMediaAtIndex:(unsigned long long)arg1;
@property(copy, nonatomic) NSArray *ephemeralMediaList; // @synthesize ephemeralMediaList=_ephemeralMediaList;
- (id)firstEphemeralMedia;
- (id)firstSnapVideoFilter;
@property(retain, nonatomic) NSArray *gallerySnapOverlays; // @synthesize gallerySnapOverlays=_gallerySnapOverlays;
- (void)generateBatchCaptureSnapVideoFilterListWithUserSendStartTimestamp:(double)arg1;
- (void)generateEphemeralMediaListWithGallerySnap:(id)arg1 shouldUseDirectUpload:(_Bool)arg2;
- (void)generateEphemeralMediaListWithShouldUseDirectUpload:(_Bool)arg1;
- (void)generateSnapVideoFilterListWithUserSendStartTimestamp:(double)arg1;
- (id)initMultiSnapWithVideoProvider:(id)arg1 timeRanges:(id)arg2 userSession:(id)arg3 captureSessionID:(id)arg4;
- (id)initWithBatchCaptureConfiguration:(id)arg1 userSession:(id)arg2 captureSessionID:(id)arg3;
- (id)initWithCount:(unsigned long long)arg1 userSession:(id)arg2;
- (id)initWithEphemeralMediaList:(id)arg1 userSession:(id)arg2;
- (id)initWithUserSession:(id)arg1;
- (_Bool)isBatchCapture;
@property(nonatomic) _Bool isFromCamera; // @synthesize isFromCamera=_isFromCamera;
- (_Bool)isMultiMedia;
- (_Bool)isMultiSnap;
- (_Bool)multiSnapV2AnySnapTrimmed;
- (void)setAllGeoFilterIds:(id)arg1;
- (void)setAttachmentUrl:(id)arg1;
- (void)setAudioEnabled:(_Bool)arg1;
- (void)setAudioState:(id)arg1;
- (void)setBatchCaptureSavingConfiguration:(id)arg1;
- (void)setCameraDirection:(int)arg1;
- (void)setCameraFrontFacing:(_Bool)arg1;
- (void)setCaptionText:(id)arg1;
- (void)setCaptureLocation:(id)arg1;
- (void)setCaptureLocationHistory:(id)arg1;
- (void)setCommonLoggingParameters:(id)arg1;
- (void)setContextHint:(id)arg1;
- (void)setCroppingState:(id)arg1;
- (void)setDeepLinkMetadata:(id)arg1;
- (void)setEncryptedGeoData:(id)arg1;
- (void)setFilterName:(id)arg1;
- (void)setFrameHealthChecker:(id)arg1;
- (void)setGameMetadataWithGameId:(id)arg1;
- (void)setGeoFilterId:(id)arg1;
- (void)setGeoFilterImpressions:(long long)arg1;
- (void)setGroupInviteWithGroupId:(id)arg1 inviteId:(id)arg2;
- (void)setHighQuality:(_Bool)arg1;
- (void)setInfiniteDuration:(_Bool)arg1;
- (void)setLensMetadata:(id)arg1;
- (void)setLoggingParameters:(id)arg1 forEvent:(id)arg2;
- (void)setMentionedUserIds:(id)arg1 usernames:(id)arg2;
- (void)setNotifiedUsernames:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOverlayDataToUpload:(id)arg1;
- (void)setOverlayImage:(id)arg1;
- (void)setOverlayImageFileSizeBits:(long long)arg1;
- (void)setOverlayImageForThumbnail:(id)arg1;
- (void)setOverlayPresent:(_Bool)arg1;
- (void)setOverridingAudioData:(id)arg1;
- (void)setPlaceID:(id)arg1;
- (void)setPostLocation:(id)arg1;
- (void)setPublisherId:(id)arg1;
- (void)setSavesToCameraRoll:(_Bool)arg1;
@property(nonatomic) _Bool shouldCacheSnapsToGalleryStore; // @synthesize shouldCacheSnapsToGalleryStore=_shouldCacheSnapsToGalleryStore;
- (void)setShouldIncludeLocationData:(_Bool)arg1;
- (void)setSnapPageSource:(long long)arg1;
- (void)setSnapRequestInfo:(id)arg1 rawRequestId:(id)arg2;
- (void)setSnapSource:(long long)arg1;
@property(copy, nonatomic) NSArray *snapVideoFilterList; // @synthesize snapVideoFilterList=_snapVideoFilterList;
- (void)setStoryCaptionInfo:(id)arg1;
- (void)setStorySnapClientMetadata:(id)arg1;
- (void)setThumbnailOrientation:(long long)arg1;
- (void)setTime:(double)arg1;
@property(copy, nonatomic) NSArray *timeRanges; // @synthesize timeRanges=_timeRanges;
- (void)setType:(long long)arg1;
- (void)setUnlockablesSnapInfo:(id)arg1;
- (void)setUseOverlayImageAsMask:(_Bool)arg1;
@property(retain, nonatomic) SCUserSession *userSession; // @synthesize userSession=_userSession;
- (void)setUserTaggingInfo:(id)arg1;
- (void)setVenueId:(id)arg1;
@property(nonatomic) _Bool videoExportFinished; // @synthesize videoExportFinished=_videoExportFinished;
- (void)setVideoPlaybackRate:(double)arg1;
- (void)setVideoProvider:(id)arg1;
- (void)setVideoTargetAspectRatio:(double)arg1;
- (void)setVideoTrackedImages:(id)arg1;
- (id)snapVideoFilterAtIndex:(unsigned long long)arg1;
- (void)startBatchCaptureTranscoding;
- (void)startTranscoding;
- (void)useOnlyForCameraRollExportTranscodingCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) AVAsset *videoAsset; // @synthesize videoAsset=_videoAsset;

@end

