//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SCDelegatedPresentingDelegate-Protocol.h"
#import "SCLocationShareWithFriendControllerShareFlowDelegate-Protocol.h"
#import "SCLocationSharingPreferencesListener-Protocol.h"
#import "SCMapActionSheetPresenterDelegate-Protocol.h"
#import "SCMapBitmojiLayerControllerDelegate-Protocol.h"
#import "SCMapCarouselContainerViewDelegate-Protocol.h"
#import "SCMapCarouselPersonActionDelegate-Protocol.h"
#import "SCMapCarouselPersonRowControllerDelegate-Protocol.h"
#import "SCMapChromeDelegate-Protocol.h"
#import "SCMapDestinationVisitor-Protocol.h"
#import "SCMapErrorViewManagerDelegate-Protocol.h"
#import "SCMapExploreViewControllerDelegate-Protocol.h"
#import "SCMapFriendsListDelegate-Protocol.h"
#import "SCMapGroupCarouselPageDelegate-Protocol.h"
#import "SCMapLinkBitmojiCarouselItemViewDelegate-Protocol.h"
#import "SCMapLoadingStateListener-Protocol.h"
#import "SCMapLoadingTrackerDelegate-Protocol.h"
#import "SCMapMarkerCarouselViewControllerDelegate-Protocol.h"
#import "SCMapMarkerControllerDelegate-Protocol.h"
#import "SCMapPeopleCarouselViewControllerDelegate-Protocol.h"
#import "SCMapPersonLocationsListener-Protocol.h"
#import "SCMapProfilePresenterDelegate-Protocol.h"
#import "SCMapRequestLocationViewControllerDelegate-Protocol.h"
#import "SCMapScreenshotOverlayViewsProvider-Protocol.h"
#import "SCMapSearchPresenterDelegate-Protocol.h"
#import "SCMapSearchTileSetIdProviding-Protocol.h"
#import "SCMapStatusCreationPresenterDelegate-Protocol.h"
#import "SCMapStatusFetcherListener-Protocol.h"
#import "SCMapStoryPresenterDelegate-Protocol.h"
#import "SCMapTimeAndWeatherControllerDelegate-Protocol.h"
#import "SCMapTouchResponderPresentationDelegate-Protocol.h"
#import "SCMapUnlockablePOIControllerDelegate-Protocol.h"
#import "SCMapViewportListener-Protocol.h"
#import "SCMapWantsGroupChatDelegate-Protocol.h"
#import "SCPageNameLogging-Protocol.h"
#import "SCPassthroughDataSource-Protocol.h"
#import "SCShakeToReportDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"
#import "SCXRenderLayerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CLLocation, NSArray, NSString, NSTimer, SCCameraTimerCollapsedView, SCContextV2Manager, SCDelegatedTransitioningDelegate, SCDoubleTapZoomGestureRecognizer, SCExperimentManager, SCFeatureSettingsManager, SCLazy, SCLocationSharingPreferencesV1, SCMTFriendLocation, SCMapAltitudeSliderController, SCMapBasePersonLocationsProvider, SCMapBitmojiAvatarGenerator, SCMapBitmojiLayerController, SCMapCamera, SCMapCarouselContainerView, SCMapCompassButtonController, SCMapErrorViewManager, SCMapExploreButtonController, SCMapGameScoreView, SCMapGameStateDataStore, SCMapGestureLogger, SCMapLoadingTracker, SCMapLocalityNameController, SCMapLoggerSession, SCMapLongPressShareController, SCMapMarkerCarouselViewController, SCMapMarkerController, SCMapOnDemandContentManager, SCMapPeopleCarouselViewController, SCMapPinSpriteManager, SCMapRequestLocationViewController, SCMapServerService, SCMapSnapTokenService, SCMapStatusStore, SCMapTapToPlayLogger, SCMapTimeAndWeatherController, SCMapUnlockablePOIController, SCMapUserPreferences, SCMapViewLogger, SCMapZoomAwarePersonLocationClustersProvider, SCPassthroughView, SCPreviewTooltipBalloon, SCXBitmojiLayer, SCXRenderLayer, SCXRenderLock, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIView;
@protocol NavigationDelegate, SCBitmojiSettingsPresenting, SCCheckInOptionFetcher, SCContextV2DependencyProvider, SCCurrentPageTracker, SCImageDownloading, SCLocationProvider, SCLocationSharingService, SCLocationSharingSettingsPresenting, SCMapActionSheetPresenter, SCMapCameraPresenting, SCMapChatPresenter, SCMapChrome, SCMapConfiguration, SCMapCustomGLRenderer, SCMapDeepLinkHandling, SCMapDestination, SCMapGamePresenting, SCMapInstance, SCMapInstanceProvider, SCMapLoadingState, SCMapNotificationPresenting, SCMapPeopleFriendsProvider, SCMapPeopleGroupsProvider, SCMapProfilePresenter, SCMapReplyMessageSender, SCMapScreenshotPresenter, SCMapScreenshotProvider, SCMapSearchPresenter, SCMapStatusCreationPresenting, SCMapStoryPresenting, SCMapTapToPlayResponder, SCMapTapToPlayResponderProvider, SCMapViewControllerDelegate, SCMapViewLoggerTooltipState, SCMapViewport, SCMapViewportMetadataProvider, SCPageViewLogging, SCShakeToReportPresenting;

@interface SCMapViewController : UIViewController <SCDelegatedPresentingDelegate, SCMapPersonLocationsListener, SCMapPeopleCarouselViewControllerDelegate, SCMapStatusFetcherListener, UIGestureRecognizerDelegate, SCMapSearchPresenterDelegate, SCMapRequestLocationViewControllerDelegate, SCTraceEnabled, SCMapErrorViewManagerDelegate, SCXRenderLayerDelegate, SCMapTouchResponderPresentationDelegate, SCMapSearchTileSetIdProviding, SCMapStoryPresenterDelegate, SCMapExploreViewControllerDelegate, SCMapCarouselContainerViewDelegate, SCMapGroupCarouselPageDelegate, SCMapMarkerControllerDelegate, SCMapScreenshotOverlayViewsProvider, SCMapTimeAndWeatherControllerDelegate, SCMapCarouselPersonActionDelegate, SCMapStatusCreationPresenterDelegate, SCLocationSharingPreferencesListener, SCMapCarouselPersonRowControllerDelegate, SCMapLinkBitmojiCarouselItemViewDelegate, SCMapWantsGroupChatDelegate, SCShakeToReportDelegate, SCMapLoadingTrackerDelegate, SCLocationShareWithFriendControllerShareFlowDelegate, SCMapFriendsListDelegate, SCMapMarkerCarouselViewControllerDelegate, SCMapBitmojiLayerControllerDelegate, SCMapLoadingStateListener, SCMapViewportListener, SCMapActionSheetPresenterDelegate, SCMapProfilePresenterDelegate, SCPassthroughDataSource, SCMapChromeDelegate, SCMapUnlockablePOIControllerDelegate, SCMapDestinationVisitor, SCPageNameLogging>
{
    id <SCBitmojiSettingsPresenting> _bitmojiSettingsPresenter;
    id <SCCheckInOptionFetcher> _checkInOptionFetcher;
    id <SCContextV2DependencyProvider> _contextDependencyProvider;
    SCContextV2Manager *_contextV2Manager;
    SCExperimentManager *_experimentManager;
    id <SCImageDownloading> _imageDownloader;
    id <SCLocationProvider> _locationProvider;
    SCLazy *_locationShareWithFriendController;
    SCLocationSharingPreferencesV1 *_locationSharingPreferences;
    id <SCLocationSharingService> _locationSharingService;
    id <SCLocationSharingSettingsPresenting> _locationSharingSettingsPresenter;
    SCMapBasePersonLocationsProvider *_mapBasePersonLocationsProvider;
    SCMapBitmojiAvatarGenerator *_mapBitmojiAvatarGenerator;
    id <SCMapCameraPresenting> _mapCameraPresenter;
    id <SCMapChatPresenter> _mapChatPresenter;
    id <SCMapDeepLinkHandling> _mapDeepLinkHandler;
    id <SCMapGamePresenting> _mapGamePresenter;
    SCMapGameStateDataStore *_mapGameStateDataStore;
    id <SCMapInstanceProvider> _mapInstanceProvider;
    SCMapLoggerSession *_mapLoggerSession;
    id <SCMapNotificationPresenting> _mapNotificationPresenter;
    id <SCMapPeopleFriendsProvider> _mapPeopleFriendsProvider;
    id <SCMapPeopleGroupsProvider> _mapPeopleGroupsProvider;
    id <SCMapActionSheetPresenter> _mapActionSheetPresenter;
    id <SCMapProfilePresenter> _mapProfilePresenter;
    id <SCMapReplyMessageSender> _mapReplyMessageSender;
    id <SCMapScreenshotPresenter> _mapScreenshotPresenter;
    id <SCMapSearchPresenter> _mapSearchPresenter;
    SCMapServerService *_mapServerService;
    SCMapSnapTokenService *_mapSnapTokenService;
    id <SCShakeToReportPresenting> _mapShakeToReportPresenter;
    id <SCMapStatusCreationPresenting> _mapStatusCreationPresenter;
    SCMapStatusStore *_mapStatusStore;
    id <SCMapStoryPresenting> _mapStoryPresenter;
    id <SCMapTapToPlayResponderProvider> _mapTapToPlayResponderProvider;
    SCMapUserPreferences *_mapUserPreferences;
    id <SCMapViewLoggerTooltipState> _mapViewLoggerTooltipStateProvider;
    id <NavigationDelegate> _navigationDelegate;
    NSString *_currentUserId;
    SCFeatureSettingsManager *_featureSettingsManager;
    id <SCPageViewLogging> _pageViewLogger;
    SCLazy *_sharingPreferencesMutator;
    SCLazy *_sharingPreferencesProvider;
    id <SCCurrentPageTracker> _currentPageTracker;
    SCPassthroughView *_cameraButton;
    SCCameraTimerCollapsedView *_simpleSnapCameraView;
    SCXBitmojiLayer *_bitmojiLayer;
    SCMapPeopleCarouselViewController *_peopleCarouselViewController;
    SCMapCarouselContainerView *_groupCarouselView;
    SCMapMarkerCarouselViewController *_mapMarkerCarouselViewController;
    NSString *_selectedUserIdBeforeEnteringExplore;
    SCMapErrorViewManager *_errorViewManager;
    UIView *_errorViewManagerBaseView;
    SCMapOnDemandContentManager *_onDemandContentManager;
    SCMapGameScoreView *_mapGameScoreView;
    _Bool _isDisplayingGameStartDialog;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UILongPressGestureRecognizer *_touchDownGestureRecognizer;
    SCDoubleTapZoomGestureRecognizer *_doubleTapZoomGestureRecognizer;
    struct CGPoint _startedDepressionPoint;
    double _startingDoubleTapZoom;
    struct CLLocationCoordinate2D _startingDoubleTapZoomCoordinate;
    _Bool _didAttachGestureRecognizers;
    UIPanGestureRecognizer *_slingshotGestureRecognizer;
    UIViewController *_presentedSearchViewController;
    NSString *_searchPoi;
    struct SCMapCoordinateBounds _searchCoordinateBounds;
    _Bool _shouldContinueCenterMapOnUserRegion;
    _Bool _mapIsCurrentlyFullyVisible;
    _Bool _preparedForDismissal;
    _Bool _shouldRefreshPeopleCarouselOnNextLocationSharingPreferencesUpdate;
    CLLocation *_lastUserLocation;
    SCMapCamera *_cameraForDeselection;
    double _lastDidEnterBackgroundTime;
    SCXRenderLock *_renderLock;
    UIView *_requestLocationViewSnapshot;
    SCMapRequestLocationViewController *_requestLocationViewController;
    SCDelegatedTransitioningDelegate *_requestLocationTransitioningDelegate;
    SCPreviewTooltipBalloon *_visibleLocationSettingsTooltip;
    NSTimer *_contentLoadCheckTimer;
    int _lastHandledLocationSharingPreferencesUpdateCounter;
    SCMTFriendLocation *_lastSeenFriendLocationForCurrentUser;
    SCMapGestureLogger *_gestureLogger;
    id <SCMapConfiguration> _mapConfiguration;
    id <SCMapCustomGLRenderer> _mapCustomGLRenderer;
    id <SCMapLoadingState> _mapLoadingState;
    id <SCMapViewport> _mapViewport;
    id <SCMapScreenshotProvider> _mapScreenshotProvider;
    SCMapAltitudeSliderController *_altitudeSliderController;
    SCMapCompassButtonController *_compassButtonController;
    SCMapTimeAndWeatherController *_timeAndWeatherController;
    SCMapLocalityNameController *_localityLabelController;
    id <SCMapViewportMetadataProvider> _viewportMetadataProvider;
    _Bool _shouldCenterMapOnUserRegion;
    _Bool _shouldDismissMapWhenDismissingExplore;
    _Bool _cameraButtonHidden;
    id <SCMapViewControllerDelegate> _delegate;
    id <SCMapDestination> _destination;
    long long _openType;
    long long _openSource;
    long long _closeType;
    SCMapBitmojiLayerController *_bitmojiLayerController;
    SCMapZoomAwarePersonLocationClustersProvider *_zoomAwareClustersProvider;
    id <SCMapTapToPlayResponder> _ttpPoiController;
    id <SCMapTapToPlayResponder> _ttpDiscoverPoiController;
    SCMapUnlockablePOIController *_unlockablePoiController;
    id <SCMapTapToPlayResponder> _ttpAnywhereController;
    SCMapViewLogger *_logger;
    SCMapLoadingTracker *_loadingTracker;
    SCMapTapToPlayLogger *_tapToPlayLogger;
    SCXRenderLayer *_mapRenderLayer;
    SCMapPinSpriteManager *_pinSpriteManager;
    SCMapMarkerController *_mapMarkerController;
    SCMapLongPressShareController *_longPressShareController;
    SCMapExploreButtonController *_exploreButtonController;
    NSArray *_touchResponders;
    UIView *_originalCameraTimer;
    UIView<SCMapInstance> *_mapView;
    UIView<SCMapChrome> *_mapChrome;
}

- (void).cxx_destruct;
- (void)_acquireRenderLockWithType:(long long)arg1;
- (void)_activelyCenterMapOnUserRegionAnimated:(_Bool)arg1;
- (void)_attachGestureRecognizersIfNecessary;
- (void)_cancelAllMapViewGestures;
- (void)_cancelTouchDown:(id)arg1;
- (void)_centerCameraAndSelectUserId:(id)arg1 source:(long long)arg2 actionType:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_centerCameraOnVisiblePersonsWithEdgeInsets:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2;
- (void)_centerMapOnUserRegionAnimated:(_Bool)arg1;
- (void)_checkIfMapIsFullyVisible;
- (void)_clearRenderLock;
- (void)_clearSearch;
- (CDUnknownBlockType)_clusteredPersonLocationComparator;
- (void)_deregisterForNotificationCenter;
- (struct CGRect)_desiredCarouselViewFrame;
- (void)_didTapOnBackButton;
- (void)_didTapOnCompassButton;
- (void)_didTouchCameraButton;
- (void)_dismissExploreFromItem:(id)arg1 exitEvent:(long long)arg2 resetMapViewport:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_dismissOnForegroundIfNecessary;
- (void)_dismissPresentedElements;
- (void)_displayChatForPeople:(id)arg1 source:(long long)arg2 subpageName:(id)arg3;
- (void)_displayChatForUsername:(id)arg1 deepLinkURL:(id)arg2 notification:(id)arg3 source:(long long)arg4 subpageName:(id)arg5;
- (void)_enterGhostModeAfterDeselectingAll;
- (void)_flyToCurrentUserLocationIfInViewport;
- (void)_flyToSearchCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 pinDescriptor:(id)arg3 nonCollidingPoiId:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_flyToSearchCoordinateBounds:(struct SCMapCoordinateBounds)arg1 pinDescriptor:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_gameStateDidChangeNotification:(id)arg1;
- (void)_handleCurrentLocationSharingPreferences;
- (void)_hideGroupCarouselViewWithCompletion:(CDUnknownBlockType)arg1;
- (void)_hideMapMarkersCarousel;
- (void)_hidePeopleCarouselView;
- (_Bool)_isMapFullyVisible;
- (void)_mapBecameFullyVisible;
- (void)_mapStoppedBeingFullyVisible;
- (_Bool)_mapViewHasActiveGesture;
- (void)_maybeClearSearch;
- (void)_maybeDisplayContentLoadError;
- (void)_maybeDisplayGameStartDialogIfNeeded;
- (void)_maybeFlyToDestination;
- (void)_onDoubleTapZoomRecognized:(id)arg1;
- (void)_onLongPress:(id)arg1;
- (void)_onPan:(id)arg1;
- (void)_onSlingshotGestureAction:(id)arg1;
- (void)_onTouchDownAction:(id)arg1;
- (void)_onZoom:(id)arg1;
- (void)_prepareRequestLocationVC;
- (_Bool)_prepareRequestLocationVCIfNecessary;
- (void)_presentBitmojiSettingsViewController;
- (void)_presentExploreIfNecessaryWithItem:(id)arg1 selectedUserId:(id)arg2;
- (void)_presentLeaderboard;
- (void)_presentMapFriendChooserFromShareLocationCarousel;
- (void)_presentRequestLocationVC;
- (void)_presentRequestLocationVCIfNecessary;
- (void)_presentStatusCreationView;
- (id)_presentedExploreViewController;
- (id)_presentedRequestLocationViewController;
- (void)_processResultFromShareLocation:(unsigned long long)arg1 forPerson:(id)arg2;
- (void)_registerForNotificationCenter;
- (void)_requestDismissalWithDestination:(long long)arg1;
- (void)_requestLocationViewControllerDidDismiss;
- (_Bool)_responderShouldReceiveEvents:(id)arg1;
- (void)_selectedClusterDidUpdate;
- (void)_sendDidPanMapToResponders;
- (void)_sendDidZoomMapToResponders;
- (void)_sendLongPressOnMapAtPointToResponders:(struct CGPoint)arg1;
- (_Bool)_sendToTouchRepondersWithBlock:(CDUnknownBlockType)arg1;
- (void)_sendTouchCanceledOnMapToRespondersWithReason:(id)arg1;
- (void)_sendTouchDownOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_sendTouchUpOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_setToolbarVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_showCarouselForUserId:(id)arg1;
- (void)_showFriendUnifiedActionSheetWithPerson:(id)arg1;
- (void)_showLocationSettingsTooltipWithDuration:(double)arg1 delay:(double)arg2 text:(id)arg3 textColor:(id)arg4 backgroundColor:(id)arg5;
- (void)_showMiniProfileForPerson:(id)arg1;
- (void)_showMiniProfileForPerson:(id)arg1 fromMap:(_Bool)arg2;
- (void)_showNotSharingLocationTooltipIfNecessary;
- (id)_sortedCarouselClustersWithStartCoordinate:(struct CLLocationCoordinate2D)arg1;
- (id)_sortedPoisUsingS2CellId:(id)arg1;
- (id)_topMostPresentedViewController;
- (void)_updateCarouselForced:(_Bool)arg1;
- (void)_updateErrorViewVisibility;
- (void)_updateIdleTimerDisabled;
- (void)_updateScoreViewVisibility;
- (void)_userDidTakeScreenshot:(id)arg1;
- (id)_usersToCenterMapOn;
- (id)_visibleViewController;
- (id)activeTTPController;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (id)baseViewControllerForFocusingPersonRowController:(id)arg1;
@property(retain, nonatomic) SCMapBitmojiLayerController *bitmojiLayerController; // @synthesize bitmojiLayerController=_bitmojiLayerController;
@property(readonly, nonatomic) UIView *cameraButton; // @synthesize cameraButton=_cameraButton;
@property(nonatomic) _Bool cameraButtonHidden; // @synthesize cameraButtonHidden=_cameraButtonHidden;
- (void)carouselDidLongPressProfileForPerson:(id)arg1;
- (void)carouselDidTapExploreForPerson:(id)arg1;
- (void)carouselDidTapShareLocationToPerson:(id)arg1;
- (void)carouselDidTapStoryForPerson:(id)arg1 sourceView:(id)arg2;
- (void)carouselWantsToShowChatForPerson:(id)arg1;
@property(nonatomic) long long closeType; // @synthesize closeType=_closeType;
- (void)dealloc;
@property(nonatomic) __weak id <SCMapViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <SCMapDestination> destination; // @synthesize destination=_destination;
- (void)dismissingAnimationForTransitionDelegate:(id)arg1;
- (void)displayChatForGroupConversation:(id)arg1;
- (void)displayChatForGroupConversation:(id)arg1 fromNotification:(id)arg2 source:(long long)arg3 subpageName:(id)arg4;
- (void)displayChatForUsername:(id)arg1 fromNotification:(id)arg2;
- (void)errorViewManagerDidStartShowingError:(id)arg1;
- (void)errorViewManagerDidStopShowingError:(id)arg1;
- (void)errorViewManagerWantsToExitToCamera:(id)arg1;
@property(retain, nonatomic) SCMapExploreButtonController *exploreButtonController; // @synthesize exploreButtonController=_exploreButtonController;
- (void)friendsListUserDidTapDoneButton:(id)arg1;
- (void)friendsListWantsToSaveChanges:(id)arg1;
@property(retain, nonatomic) SCMapGestureLogger *gestureLogger; // @synthesize gestureLogger=_gestureLogger;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 forPassthroughView:(id)arg2;
- (id)initWithBitmojiSettingsPresenter:(id)arg1 checkInOptionFetcher:(id)arg2 contextDependencyProvider:(id)arg3 contextV2Manager:(id)arg4 experimentManager:(id)arg5 featureSettingsManager:(id)arg6 imageDownloader:(id)arg7 locationProvider:(id)arg8 locationShareWithFriendController:(id)arg9 locationSharingPreferences:(id)arg10 locationSharingService:(id)arg11 locationSharingSettingsPresenter:(id)arg12 mapActionSheetPresenter:(id)arg13 mapBasePersonLocationsProvider:(id)arg14 mapBitmojiAvatarGenerator:(id)arg15 mapCameraPresenter:(id)arg16 mapChatPresenter:(id)arg17 mapDeepLinkHandler:(id)arg18 mapFriendFinderDataProvider:(id)arg19 mapGamePresenter:(id)arg20 mapGameStateDataStore:(id)arg21 mapInstanceProvider:(id)arg22 mapLoggerSession:(id)arg23 mapNotificationPresenter:(id)arg24 mapPeopleFriendsProvider:(id)arg25 mapPeopleGroupsProvider:(id)arg26 mapProfilePresenter:(id)arg27 mapReplyMessageSender:(id)arg28 mapScreenshotPresenter:(id)arg29 mapSearchPresenter:(id)arg30 mapServerService:(id)arg31 mapShakeToReportPresenter:(id)arg32 mapSnapTokenService:(id)arg33 mapStatusCreationPresenter:(id)arg34 mapStatusStore:(id)arg35 mapStoryPresenter:(id)arg36 mapTapToPlayResponderProvider:(id)arg37 mapUserPreferences:(id)arg38 mapViewLoggerTooltipStateProvider:(id)arg39 navigationDelegate:(id)arg40 pageViewLogger:(id)arg41 sharingPreferencesMutator:(id)arg42 sharingPreferencesProvider:(id)arg43 currentPageTracker:(id)arg44 userId:(id)arg45;
- (id)initWithUserSession:(id)arg1 navigationDelegate:(id)arg2;
- (_Bool)isEngagedInBackgroundActivity;
- (_Bool)isInOnboardingForTouchResponder:(id)arg1;
- (_Bool)isMapBitmojiLayerControllerAtMaximumZoomLevel:(id)arg1;
- (_Bool)isPresentingStory;
- (void)linkBitmojiCarouselItemViewDidTapLinkBitmoji:(id)arg1;
@property(retain, nonatomic) SCMapLoadingTracker *loadingTracker; // @synthesize loadingTracker=_loadingTracker;
- (void)locationShareWithFriendController:(id)arg1 wantsToPresentViewController:(id)arg2;
- (void)locationSharingPreferencesUpdated:(id)arg1;
@property(retain, nonatomic) SCMapViewLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SCMapLongPressShareController *longPressShareController; // @synthesize longPressShareController=_longPressShareController;
- (void)mapActionSheetPresenter:(id)arg1 wantsChatForUsername:(id)arg2 deeplinkURL:(id)arg3;
- (void)mapBitmojiLayerController:(id)arg1 didLongPressUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didPanOrZoomToDeselectUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didTapPersonLocationClusters:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 didTapToDeselectUserId:(id)arg2;
- (void)mapBitmojiLayerController:(id)arg1 wantsToSelectUserId:(id)arg2;
- (void)mapCarouselContainerWantsDismissal:(id)arg1;
@property(readonly, nonatomic) UIView<SCMapChrome> *mapChrome; // @synthesize mapChrome=_mapChrome;
- (void)mapChrome:(id)arg1 wantsToBeginSearchWithSourceView:(id)arg2;
- (void)mapChromeDidTapBackButton:(id)arg1;
- (void)mapChromeDidTapExploreButton:(id)arg1;
- (void)mapChromeDidTapLocationSettingsButton:(id)arg1;
- (void)mapChromeDidTapStatusButton:(id)arg1;
- (id)mapExploreViewController:(id)arg1 screenshotGeneratorForUserId:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToBeDismissedFromItem:(id)arg2 exitEvent:(long long)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToDisplayChatForPeople:(id)arg2 subpageName:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToNavigateToURL:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToPlayMapStoryWithPoiId:(id)arg2 fromSourceView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToPresentStoryForPerson:(id)arg2 fromBaseView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToShowAllSprites:(_Bool)arg2 animated:(_Bool)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToShowMiniProfileForPerson:(id)arg2;
- (void)mapExploreViewController:(id)arg1 willShowItem:(id)arg2;
- (id)mapExploreViewControllerExternalHeaderView:(id)arg1;
- (void)mapExploreViewControllerWantsToPresentLocationSettings:(id)arg1;
- (void)mapGroupCarouselPage:(id)arg1 didTapStoryForGroup:(id)arg2 sourceView:(id)arg3;
- (void)mapGroupCarouselPage:(id)arg1 wantsChatForGroup:(id)arg2;
- (void)mapGroupCarouselPageWantsToUpdateCurrentStatus:(id)arg1;
- (void)mapLoadingState:(id)arg1 didFailLoadingWithError:(id)arg2;
- (void)mapLoadingStateDidFinishLoading:(id)arg1;
- (void)mapLoadingStateDidFinishLoadingStyle:(id)arg1;
- (void)mapLoadingStateDidFinishRenderingFrame:(id)arg1 fullyRendered:(_Bool)arg2;
- (void)mapLoadingStateDidStartLoading:(id)arg1;
- (void)mapLoadingTrackerDidFinishLoading:(id)arg1;
- (void)mapMarkerCarouselViewController:(id)arg1 didFinishInitialCardLoadWithResult:(long long)arg2;
- (void)mapMarkerCarouselViewControllerWantsToBeDismissed:(id)arg1;
@property(retain, nonatomic) SCMapMarkerController *mapMarkerController; // @synthesize mapMarkerController=_mapMarkerController;
- (void)mapMarkerController:(id)arg1 showContextCardsForMarker:(id)arg2;
- (void)mapMarkerControllerDidSelectMarker:(id)arg1;
- (void)mapMarkerControllerHideCardsView:(id)arg1;
- (void)mapPeopleCarouselViewController:(id)arg1 didShowPerson:(id)arg2 actionType:(long long)arg3;
- (void)mapPeopleCarouselViewControllerWantsToBeDismissed:(id)arg1;
- (void)mapProfilePresenter:(id)arg1 wantsChatForUsername:(id)arg2 deeplinkURL:(id)arg3;
- (void)mapProfilePresenter:(id)arg1 wantsMapForUserId:(id)arg2;
@property(retain, nonatomic) SCXRenderLayer *mapRenderLayer; // @synthesize mapRenderLayer=_mapRenderLayer;
- (void)mapRestoreAfterScreenshotRendered;
- (id)mapScreenshotOverlayViews;
- (void)mapSearchPresenter:(id)arg1 wantsChatForUsername:(id)arg2;
- (void)mapSearchPresenter:(id)arg1 wantsLocationForUserId:(id)arg2;
- (void)mapSearchPresenter:(id)arg1 wantsProfileForPerson:(id)arg2;
- (void)mapSearchPresenter:(id)arg1 wantsToGoToCoordinate:(struct CLLocationCoordinate2D)arg2 atZoomLevel:(double)arg3 coordinateBounds:(struct SCMapCoordinateBounds)arg4 useCoordinateBounds:(_Bool)arg5 withTitle:(id)arg6 dropPin:(_Bool)arg7 poiId:(id)arg8;
- (void)mapSearchPresenter:(id)arg1 willCloseWithQueryText:(id)arg2;
- (void)mapStatusCreationPresenter:(id)arg1 didSetStatusWithSticker:(id)arg2 speechText:(id)arg3 statusId:(id)arg4;
- (void)mapStatusCreationPresenter:(id)arg1 wantsToPresentStoryForUserId:(id)arg2 fromBaseView:(id)arg3;
- (void)mapStatusCreationPresenter:(id)arg1 wantsToShowProfileForUserId:(id)arg2;
- (void)mapStatusCreationPresenterDidDeleteMostRecentStatus:(id)arg1;
- (void)mapStatusCreationPresenterWantsToDismiss:(id)arg1;
- (void)mapStatusFetcherDidLoadMyStatus:(id)arg1;
- (void)mapStatusFetcherDidLoadStatuses:(id)arg1;
@property(readonly, nonatomic) UIView<SCMapInstance> *mapView; // @synthesize mapView=_mapView;
- (void)mapViewport:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapViewportDidChangeFollowingUserLocation:(id)arg1 animated:(_Bool)arg2;
- (void)mapViewportDidChangeTarget:(id)arg1;
- (id)navigationDelegateForTouchResponder:(id)arg1;
@property(nonatomic) long long openSource; // @synthesize openSource=_openSource;
@property(nonatomic) long long openType; // @synthesize openType=_openType;
@property(nonatomic) __weak UIView *originalCameraTimer; // @synthesize originalCameraTimer=_originalCameraTimer;
- (id)pageViewName;
- (void)personCarouselRow:(id)arg1 wantsToSendMapReplyMessage:(id)arg2;
- (void)personCarouselRowDidFocus:(id)arg1;
- (void)personCarouselRowDidLongPressProfile:(id)arg1;
- (void)personCarouselRowDidTapDismissShareLocation:(id)arg1;
- (void)personCarouselRowDidTapExplore:(id)arg1;
- (void)personCarouselRowDidTapProfile:(id)arg1;
- (void)personCarouselRowDidTapShareLocation:(id)arg1;
- (void)personCarouselRowDidTapStory:(id)arg1 sourceView:(id)arg2;
- (void)personCarouselRowDidTapUpdateStatus:(id)arg1;
- (void)personCarouselRowWantsToOpenChat:(id)arg1;
- (void)personCarouselRowWantsToPresentReplyCamera:(id)arg1;
- (void)personLocationsProviderDidUpdate:(id)arg1;
@property(retain, nonatomic) SCMapPinSpriteManager *pinSpriteManager; // @synthesize pinSpriteManager=_pinSpriteManager;
- (id)poiTileSetId;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (void)prepareViewForDismissal;
- (void)prepareViewForPresentation;
- (void)presentLocationSettings;
- (void)presentationStateDidChangeForTouchResponder:(id)arg1;
- (void)presentingAnimationForTransitionDelegate:(id)arg1;
- (id)presentingViewControllerForTouchResponder:(id)arg1;
- (id)presentingViewControllerForUnlockablePOIController:(id)arg1;
- (void)requestLocationViewControllerDidCancel:(id)arg1;
- (void)requestLocationViewControllerDidGetLocationAccess:(id)arg1;
- (id)screenshotGeneratorForPerson:(id)arg1;
@property(nonatomic) _Bool shouldCenterMapOnUserRegion; // @synthesize shouldCenterMapOnUserRegion=_shouldCenterMapOnUserRegion;
@property(nonatomic) _Bool shouldDismissMapWhenDismissingExplore; // @synthesize shouldDismissMapWhenDismissingExplore=_shouldDismissMapWhenDismissingExplore;
@property(retain, nonatomic) SCMapTapToPlayLogger *tapToPlayLogger; // @synthesize tapToPlayLogger=_tapToPlayLogger;
@property(copy, nonatomic) NSArray *touchResponders; // @synthesize touchResponders=_touchResponders;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpAnywhereController; // @synthesize ttpAnywhereController=_ttpAnywhereController;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpDiscoverPoiController; // @synthesize ttpDiscoverPoiController=_ttpDiscoverPoiController;
@property(retain, nonatomic) id <SCMapTapToPlayResponder> ttpPoiController; // @synthesize ttpPoiController=_ttpPoiController;
@property(retain, nonatomic) SCMapUnlockablePOIController *unlockablePoiController; // @synthesize unlockablePoiController=_unlockablePoiController;
@property(retain, nonatomic) SCMapZoomAwarePersonLocationClustersProvider *zoomAwareClustersProvider; // @synthesize zoomAwareClustersProvider=_zoomAwareClustersProvider;
- (_Bool)shouldAutorotate;
- (void)storyPresenterDidStartPresenting:(id)arg1;
- (void)storyPresenterDidStopPresenting:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)timeAndWeatherControllerShouldShowParticleEffects:(id)arg1;
- (void)travelToCoordinate:(id)arg1;
- (void)travelToDefaultViewport:(id)arg1;
- (void)travelToExploreStatus:(id)arg1;
- (void)travelToFriend:(id)arg1;
- (void)travelToGroup:(id)arg1;
- (void)travelToPoi:(id)arg1;
- (void)unlockablePOIControllerDidSelectLockedPOI:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)wantsGroupChatForPeople:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

