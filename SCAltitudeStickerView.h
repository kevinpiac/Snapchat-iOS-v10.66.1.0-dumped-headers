//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCInfoStickerView.h"

#import "SCPreviewStickerViewCycleable-Protocol.h"

@class NSString, SCAltitude, UIImageView, UILabel, UIView;
@protocol SCAltitudeStickerViewDelegate;

@interface SCAltitudeStickerView : SCInfoStickerView <SCPreviewStickerViewCycleable>
{
    SCAltitude *_altitudeInfo;
    double _altitudeInMeters;
    double _gaugeSize;
    double _altTextLeftOffset;
    UIView *_altitudeGaugeView;
    UIView *_altitudeNumberView;
    UIImageView *_gaugeBackground;
    UIImageView *_needleTenThousands;
    UIImageView *_needleThousands;
    UIImageView *_needleHundreds;
    UIImageView *_decimal;
    UILabel *_altitudeGaugeValueLabel;
    UILabel *_altitudeGaugeUnitsLabel;
    UILabel *_altitudeNumberViewLabel;
    UILabel *_altitudeNumberViewUnitsLabel;
    UILabel *_altTextLabel;
    unsigned long long _initialUnit;
    _Bool _isPreviewSticker;
    unsigned long long _unit;
    unsigned long long _viewType;
    id <SCAltitudeStickerViewDelegate> _delegate;
}

- (void).cxx_destruct;
- (double)_correctedAltitudeValue;
- (void)_setAltitudeNeedlePoisitons:(double)arg1;
- (void)_setAltitudeNumberView;
- (void)_setAltitudeToDisplayGauge;
- (void)_switchNextAltitudeViewMode;
- (id)_unitString;
- (id)_unitString:(unsigned long long)arg1;
- (void)_updateAltitudeView;
- (void)cycleStickerToNextStyle;
@property(nonatomic) __weak id <SCAltitudeStickerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (id)initWithPickerFrame:(struct CGRect)arg1 altitude:(id)arg2;
- (id)initWithPreviewFrame:(struct CGRect)arg1 altitude:(id)arg2;
- (_Bool)shouldRespondToTap:(id)arg1;
@property(readonly, nonatomic) unsigned long long unit; // @synthesize unit=_unit;
@property(readonly, nonatomic) unsigned long long viewType; // @synthesize viewType=_viewType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

