//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCGroupManager-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString, SCArchiveLoader, SCArroyoGroupDataFetcher, SCDataCoordinatorListenerAnnouncer, SCGroupLeaveStateTracker, SCGroupManagerListenerAnnouncer, SCGroupSyncStateTracker, SCLazy, SCPreferences, SCQueuePerformer, SCSessionRequestManager;
@protocol SCGroupManagerAPI, SCGroupsStorageV3;

@interface SCGroupManager : NSObject <SCTraceEnabled, SCGroupManager>
{
    SCArroyoGroupDataFetcher *_arroyoGroupDataFetcher;
    id <SCGroupsStorageV3> _groupStorage;
    id <SCGroupManagerAPI> _managerAPI;
    SCLazy *_groupLogger;
    SCArchiveLoader *_loader;
    SCQueuePerformer *_performer;
    SCSessionRequestManager *_requestManager;
    SCLazy *_arroyoConversationIdsManager;
    SCDataCoordinatorListenerAnnouncer *_eventAnnouncer;
    NSMutableDictionary *_updatingGroupNames;
    SCGroupSyncStateTracker *_syncStateTracker;
    SCGroupLeaveStateTracker *_leaveStateTracker;
    long long _dataDiskSyncSources;
    SCPreferences *_userPreferences;
    NSString *_userId;
    NSString *_username;
    SCGroupManagerListenerAnnouncer *_announcer;
    NSDictionary *_groupsSnapshot;
}

+ (id)dataCoordinatorIdentifier;
+ (double)estimatedMainLabelWidthWithGroupMoji;
- (void).cxx_destruct;
- (id)DEPRECATED_mostRecentGroupByParticipantsIncludingSelf:(id)arg1;
- (id)DEPRECATED_updateGroup:(id)arg1 groupMetadata:(id)arg2 interactionTimestamp:(id)arg3;
- (id)DEPRECATED_updateGroupsWithSOJUGroup:(id)arg1;
- (id)_DEPRECATED_updateGroupsWithGroup:(id)arg1 oldGroup:(id)arg2;
- (id)_constructCreateGroupsRequestWithGroups:(id)arg1 groupStoryRequest:(id)arg2 disableMinimumGroupSize:(_Bool)arg3 source:(long long)arg4;
- (void)_correctNewGroupStatesAfterCreation:(id)arg1 oldGroup:(id)arg2;
- (void)_createGroupsOnServerIfNecessary:(id)arg1 source:(long long)arg2 groupStoryRequest:(id)arg3 disableMinimumGroupSize:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_createLocalGroupWithFriends:(id)arg1 creationSource:(long long)arg2 completion:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;
- (void)_didLoadGroupsFromDisk:(id)arg1;
- (id)_getGroupsByIds:(id)arg1;
- (id)_groupById:(id)arg1;
- (void)_handleUpdateGroupCompletion:(_Bool)arg1 shouldAnnounceUpdate:(_Bool)arg2 existingGroup:(id)arg3 group:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_logUpdatingGroup:(id)arg1 oldGroup:(id)arg2;
- (void)_makeCreateGroupInviteRequestWithGroupInviteId:(id)arg1 groupInviteType:(long long)arg2 groupId:(id)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_makeCreateGroupsRequestWithGroups:(id)arg1 groupStoryRequest:(id)arg2 source:(long long)arg3 disableMinimumGroupSize:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_makeDeleteGroupInvitesRequestWithGroupId:(id)arg1 groupInviteType:(long long)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_makeJoinGroupByGroupInviteRequestWithGroupInviteId:(id)arg1 groupId:(id)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_makeLeaveGroupRequestWithGroupId:(id)arg1 groupToLeave:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_makeRenameRequestWithGroupId:(id)arg1 oldName:(id)arg2 newName:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_notifyGroupsDidFinishLoadingFromDiskWithSource:(long long)arg1;
- (void)_performDidLoadGroupsFromDisk:(id)arg1;
- (void)_takeSnapshot;
- (void)_updateGroupNameAndCreateOnServer:(id)arg1 groupName:(id)arg2 source:(long long)arg3 disableMinimumGroupSize:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_updateGroupNameWithGroup:(id)arg1 oldGroup:(id)arg2 groupName:(id)arg3 completion:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5;
- (void)_updateGroupNameWithId:(id)arg1 groupName:(id)arg2 completion:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;
- (void)_updateGroupsWithGroup:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateGroupsWithGroup:(id)arg1 shouldAnnounceUpdate:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addDataUpdateListener:(id)arg1;
- (void)addGroupIfItDoesntExist:(id)arg1 completion:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (void)addToGroupWithId:(id)arg1 friends:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) SCGroupManagerListenerAnnouncer *announcer; // @synthesize announcer=_announcer;
- (void)checkIfGroupIsInLeavingState:(id)arg1 completion:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (void)clear;
- (void)clearTemporaryGroups;
- (void)clearTemporaryGroupsExcludingGroupIds:(id)arg1;
- (void)createDolphinGroupWithUserAsFriend:(id)arg1 groupName:(id)arg2 creationSource:(long long)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)createEmptyGroupsOnServerIfNecessary:(id)arg1 source:(long long)arg2 groupStoryRequest:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createGroupInviteOnServerWithGroupInviteId:(id)arg1 groupInviteType:(long long)arg2 groupId:(id)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)createGroupWithName:(id)arg1 recipients:(id)arg2 creationSource:(long long)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)createGroupsOnServerIfNecessary:(id)arg1 source:(long long)arg2 groupStoryRequest:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createLocalGroupWithFriends:(id)arg1 creationSource:(long long)arg2 completion:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;
- (void)deleteGroupInvitesWithGroupId:(id)arg1 groupInviteType:(long long)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (id)getAllGroups;
- (id)getAllGroupsDict;
- (void)getAllGroupsWithCompletion:(CDUnknownBlockType)arg1 callbackQueue:(id)arg2;
- (void)getGroupById:(id)arg1 completion:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (void)getGroupByParticipants:(id)arg1 completion:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (id)getGroupWithId:(id)arg1;
- (id)getNewGroups;
- (id)getRecentGroups;
- (void)grantGroupExemptBlockedUsersWithId:(id)arg1 newBlockedParticipantExceptions:(id)arg2 completion:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4;
- (id)groupsDataPersistedTimestamp;
@property(retain) NSDictionary *groupsSnapshot; // @synthesize groupsSnapshot=_groupsSnapshot;
- (void)handleDataRequest:(id)arg1;
- (id)initWithSelfUserId:(id)arg1 selfUsername:(id)arg2 arroyoConversationIdsManager:(id)arg3 docObjectContext:(id)arg4 groupLogger:(id)arg5 groupManagerAPI:(id)arg6 groupsDataTracker:(id)arg7 nativeSessionManager:(id)arg8 sessionRequestManager:(id)arg9 snapchattersDataFetcher:(id)arg10 snapchatterUserInfoProvider:(id)arg11 snapchatterPublicInfoFetcher:(id)arg12 userPreferences:(id)arg13 feedClearDataManager:(id)arg14;
- (_Bool)isLoaded;
- (void)joinGroupWithGroupInviteId:(id)arg1 groupId:(id)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)leaveGroupWithId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)loadFromDiskAsync:(_Bool)arg1;
- (void)markAsLoadedWithoutLoadingFromDisk;
- (void)mergeWithLocal:(id)arg1;
- (void)notifyDidJoinGroup:(id)arg1;
- (void)notifyGroupDidBeginLeaving:(id)arg1;
- (void)notifyGroupDidGetCreatedOnServer:(id)arg1 initialSOJUMischief:(id)arg2;
- (void)notifyGroupInfoDidChangeForGroup:(id)arg1;
- (void)notifyGroupsDidFinishLoading;
- (void)removeDataUpdateListener:(id)arg1;
- (_Bool)saveState;
- (_Bool)shouldLoadFromDiskImmediately;
- (void)syncGroupsWithConversationGroups:(id)arg1;
- (void)updateGroupMentionNotificationWithId:(id)arg1 notificationsOn:(_Bool)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)updateGroupMuteStateWithId:(id)arg1 isMuted:(_Bool)arg2 shouldLog:(_Bool)arg3 completion:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5;
- (void)updateGroupNameWithId:(id)arg1 groupName:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateGroupNotificationWithId:(id)arg1 notificationOn:(_Bool)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)updateGroupParticipantLastContentWithId:(id)arg1 participantLastContent:(id)arg2;
- (void)updateGroupVideoChatParamsWithId:(id)arg1 videoChatParams:(id)arg2;
- (void)updateGroupWithId:(id)arg1 groupMetadata:(id)arg2 interactionTimestamp:(id)arg3;
- (void)updateGroupWithId:(id)arg1 lastInteractionTimestamp:(id)arg2;
- (void)updateGroupsWithSOJUGroups:(id)arg1;
- (void)willSendToGroupIds:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

