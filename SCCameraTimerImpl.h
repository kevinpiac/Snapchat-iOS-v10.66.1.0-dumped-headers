//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "CAAnimationDelegate-Protocol.h"
#import "SCCameraTimer-Protocol.h"

@class CAShapeLayer, NSString, SCCameraTimerTooltipManager, SCCameraTimerWhiteAndRedBorderLayer, SCShapeView, SCSnappablesPlayButton, UIImageView;
@protocol SCCameraTimerTooltipManaging;

@interface SCCameraTimerImpl : UIView <CAAnimationDelegate, SCCameraTimer>
{
    UIView *_containerView;
    UIImageView *_overlayIcon;
    CAShapeLayer *_recordingLayer;
    double _dimAlpha;
    SCCameraTimerTooltipManager *_tooltipManager;
    _Bool _hasPressedTransparentAppearance;
    CDUnknownBlockType _handsFreeStateTransitionDelayedAnimationBlock;
    _Bool _pressingCameraButton;
    _Bool _shouldDisplayVideoHelp;
    _Bool _useLightPreviewTransitionBehavior;
    _Bool _animating;
    double _maximumRecordingLength;
    SCSnappablesPlayButton *_snappablesPlayButton;
    long long _state;
    double _initialCircleWidth;
    double _deltaCircleWidth;
    UIImageView *_lensImageView;
    UIView *_outterBlackBorderView;
    UIView *_innerBlackBorderView;
    UIView *_borderView;
    SCShapeView *_redCircleView;
    SCShapeView *_recordingView;
    SCCameraTimerWhiteAndRedBorderLayer *_whiteAndRedBorderLayer;
}

- (void).cxx_destruct;
- (void)_animateBorder:(id)arg1 withBounds:(struct CGRect)arg2 center:(struct CGPoint)arg3 duration:(double)arg4;
- (void)_animateCameraButton:(id)arg1 fromPosition:(struct CGPoint)arg2 toPosition:(struct CGPoint)arg3 duration:(double)arg4 xTimingFunction:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)_animateRecordingLayer:(id)arg1 withPath:(id)arg2 duration:(double)arg3;
- (void)_animateToCameraTargetView:(id)arg1 targetPosition:(struct CGPoint)arg2 alongWithAnimation:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_animateToCapturePreviewForMediaType:(unsigned long long)arg1 targetView:(id)arg2 targetPosition:(struct CGPoint)arg3 alongWithAnimation:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_animateToCapturedForMediaType:(unsigned long long)arg1 targetPosition:(struct CGPoint)arg2 scale:(double)arg3;
- (void)_animateToReadyWithTargetPosition:(struct CGPoint)arg1;
- (id)_createAnimationWithKeyPath:(id)arg1 duration:(double)arg2;
- (id)_createProgressStrokeEndAnimationWithDuration:(double)arg1;
- (void)_removeAllCameraTimerAnimations;
- (void)_updateBorder:(id)arg1 withBounds:(struct CGRect)arg2 center:(struct CGPoint)arg3;
- (void)_updateRecordingLayer:(id)arg1 withPath:(id)arg2;
- (struct CGPoint)accessibilityActivationPoint;
- (id)accessibilityElements;
- (unsigned long long)accessibilityTraits;
@property(readonly) long long actionType;
- (void)animateToCameraTargetView:(id)arg1 targetPosition:(struct CGPoint)arg2 alongWithAnimation:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)animateToCapturePreviewForMediaType:(unsigned long long)arg1 targetView:(id)arg2 targetPosition:(struct CGPoint)arg3 alongWithAnimation:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)beginRecordingAnimation;
@property(readonly, nonatomic) struct CGRect borderFrame;
@property(retain, nonatomic) UIView *borderView; // @synthesize borderView=_borderView;
@property(readonly) long long cameraUIItem;
- (void)copyStateFromCameraTimer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) double deltaCircleWidth; // @synthesize deltaCircleWidth=_deltaCircleWidth;
- (void)didSelectLens:(id)arg1;
- (void)handsFreeViewStateDidChange:(unsigned long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1 maximumRecordingLength:(double)arg2;
@property(readonly, nonatomic) double initialCircleWidth; // @synthesize initialCircleWidth=_initialCircleWidth;
@property(retain, nonatomic) UIView *innerBlackBorderView; // @synthesize innerBlackBorderView=_innerBlackBorderView;
@property(readonly, nonatomic, getter=isAnimating) _Bool animating; // @synthesize animating=_animating;
@property(readonly, nonatomic) UIImageView *lensImageView; // @synthesize lensImageView=_lensImageView;
@property(nonatomic) double maximumRecordingLength; // @synthesize maximumRecordingLength=_maximumRecordingLength;
@property(retain, nonatomic) UIView *outterBlackBorderView; // @synthesize outterBlackBorderView=_outterBlackBorderView;
- (void)prepareLayers;
- (void)prepareLensImageView;
@property(nonatomic) _Bool pressingCameraButton; // @synthesize pressingCameraButton=_pressingCameraButton;
@property(retain, nonatomic) SCShapeView *recordingView; // @synthesize recordingView=_recordingView;
@property(retain, nonatomic) SCShapeView *redCircleView; // @synthesize redCircleView=_redCircleView;
- (void)removeOverlayIcon:(id)arg1;
- (void)removeRecordingAnimation;
- (void)setAlpha:(double)arg1;
- (void)setCameraTimerState:(long long)arg1 animated:(_Bool)arg2;
- (void)setLensImage:(id)arg1;
- (void)setOverlayIcon:(id)arg1;
- (void)setRecordingFillScale:(double)arg1 speed:(double)arg2 bounciness:(double)arg3;
- (void)setRecordingRadiusScale:(double)arg1 duration:(double)arg2;
@property(nonatomic) _Bool shouldDisplayVideoHelp; // @synthesize shouldDisplayVideoHelp=_shouldDisplayVideoHelp;
@property(retain, nonatomic) SCSnappablesPlayButton *snappablesPlayButton; // @synthesize snappablesPlayButton=_snappablesPlayButton;
- (void)setSublayersHidden:(_Bool)arg1;
@property(nonatomic) _Bool useLightPreviewTransitionBehavior; // @synthesize useLightPreviewTransitionBehavior=_useLightPreviewTransitionBehavior;
@property(retain, nonatomic) SCCameraTimerWhiteAndRedBorderLayer *whiteAndRedBorderLayer; // @synthesize whiteAndRedBorderLayer=_whiteAndRedBorderLayer;
- (void)startAnimationWithShortTime:(double)arg1 wasInitiatedByLens:(_Bool)arg2;
- (void)startAnimationWithShortTime:(double)arg1 wasInitiatedByLens:(_Bool)arg2 redCircleGrowthRate:(double)arg3 redCirlceFactor:(double)arg4;
- (void)startProgressAnimationWithShortTime:(double)arg1;
- (void)startRedCircleAnimationWithGrowthRate:(double)arg1 redCircleFactor:(double)arg2;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
- (void)stopAnimationAndSaveState:(_Bool)arg1;
- (void)stopRecordingAnimation;
@property(readonly, nonatomic) id <SCCameraTimerTooltipManaging> tooltipManager;
- (void)transitionToLockAppearance;
- (void)willOpenLensCarousel:(_Bool)arg1;
- (void)willUpdateHovaCameraItemVisibility:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

