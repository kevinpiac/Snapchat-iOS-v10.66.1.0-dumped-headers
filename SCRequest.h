//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSDictionary, NSString, NSURLSessionTask, SCAPIRequestInfo, SCAPIURLSession, SCDisplayContext, SCNNetworkTypesUrlResponseInfo, SCRequestInfoContainer, SCRequestSchedulingStateListenerAnnouncer, SCRequestTrackingInfo;
@protocol SCRequestParser;

@interface SCRequest : NSObject
{
    SCRequestSchedulingStateListenerAnnouncer *_schedulingStateAnnouncer;
    _Bool _userInitiated;
    _Bool _isUIAssetRequest;
    _Bool _isWifiOnlyRequest;
    _Bool _isStreamingRequest;
    _Bool _isBigSizeMedia;
    _Bool _shouldTrace;
    _Bool _isBackgroundRequest;
    _Bool _isResumable;
    _Bool _authenticated;
    _Bool _isUserBlocking;
    _Bool _isUserVisible;
    _Bool _willUseBackgroundSession;
    float _URLSessionTaskPriority;
    SCAPIURLSession *_session;
    NSString *_key;
    SCDisplayContext *_displayContext;
    SCDisplayContext *_currentDisplayContext;
    long long _fallbackPriority;
    long long _priority;
    long long _connectivity;
    unsigned long long _index;
    NSString *_requestBatchId;
    NSString *_streamingId;
    long long _estimatedResponseSizeBytes;
    long long _contextPriority;
    unsigned long long _contextScore;
    NSString *_requestId;
    long long _requestType;
    long long _method;
    double _requestTimestamp;
    SCRequestTrackingInfo *_trackingInfo;
    unsigned long long _maxNumOfRequestAttempts;
    NSDictionary *_networkStats;
    unsigned long long _schedulingState;
    unsigned long long _concurrencyControlPriority;
    NSURLSessionTask *_task;
    id <SCRequestParser> _requestParser;
    SCRequestInfoContainer *_requestInfoContainer;
    SCAPIRequestInfo *_info;
    NSString *_taskId;
    long long _queuingLatency;
    long long _accumulatedUserInitiatedQueuingLatency;
    double _lastUserInitiatedTime;
    long long _estimatedRequestSize;
    NSDate *_enqueueTime;
    NSDate *_userInitiatedDate;
    SCNNetworkTypesUrlResponseInfo *_urlResponseInfo;
}

+ (unsigned long long)computeContextScoreWithContexts:(id)arg1 currentContexts:(id)arg2;
+ (id)createBackgroundRequestWithURL:(id)arg1 parameters:(id)arg2 uploadFileURL:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 requestType:(long long)arg7 method:(long long)arg8;
+ (id)createPostRequestWithEndpoint:(id)arg1 postData:(id)arg2 additionalHTTPHeaders:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 fallbackPriority:(long long)arg7 connectivity:(long long)arg8 requestType:(long long)arg9 authenticated:(_Bool)arg10;
+ (id)createProtoRequestWithEndpoint:(id)arg1 proto:(id)arg2 additionalHeaders:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 requestType:(long long)arg7 authenticated:(_Bool)arg8;
+ (id)createProtoRequestWithURL:(id)arg1 proto:(id)arg2 additionalHeaders:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 requestType:(long long)arg7 authenticated:(_Bool)arg8;
+ (id)createRequestFromGtqNetworkRequest:(id)arg1;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHttpHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 requestParser:(id)arg7 priority:(long long)arg8 fallbackPriority:(long long)arg9 connectivity:(long long)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHttpHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 requestParser:(id)arg7 priority:(long long)arg8 fallbackPriority:(long long)arg9 connectivity:(long long)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13 readTimeoutInterval:(double)arg14 useGzipRequestCompression:(_Bool)arg15;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHttpHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 requestParser:(id)arg7 priority:(long long)arg8 fallbackPriority:(long long)arg9 connectivity:(long long)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13 useGzipRequestCompression:(_Bool)arg14;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 fallbackPriority:(long long)arg7 connectivity:(long long)arg8 requestType:(long long)arg9 method:(long long)arg10 authenticated:(_Bool)arg11;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 fallbackPriority:(long long)arg7 connectivity:(long long)arg8 requestType:(long long)arg9 method:(long long)arg10 authenticated:(_Bool)arg11 readTimeoutInterval:(double)arg12;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 key:(id)arg4 contexts:(id)arg5 requestParser:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 authenticated:(_Bool)arg12;
+ (id)createRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 key:(id)arg4 contexts:(id)arg5 requestParser:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 authenticated:(_Bool)arg12 useGzipRequestCompression:(_Bool)arg13;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestParser:(id)arg10 requestType:(long long)arg11 method:(long long)arg12;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestParser:(id)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13 readTimeoutInterval:(double)arg14 useGzipRequestCompression:(_Bool)arg15;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestParser:(id)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13 useGzipRequestCompression:(_Bool)arg14;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 authenticated:(_Bool)arg12;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 authenticated:(_Bool)arg12 useGzipRequestCompression:(_Bool)arg13;
+ (id)createRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 readTimeoutInterval:(double)arg12;
+ (id)createStreamingRequestWithEndpoint:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHttpHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 requestParser:(id)arg7 priority:(long long)arg8 fallbackPriority:(long long)arg9 connectivity:(long long)arg10 requestType:(long long)arg11 method:(long long)arg12 authenticated:(_Bool)arg13 streamingId:(id)arg14 estimatedSizeBytes:(long long)arg15;
+ (id)createStreamingRequestWithURL:(id)arg1 parameters:(id)arg2 uploadData:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11 authenticated:(_Bool)arg12 streamingId:(id)arg13 estimatedSizeBytes:(long long)arg14;
+ (id)createUploadRequestWithURL:(id)arg1 parameters:(id)arg2 uploadFileURL:(id)arg3 additionalHTTPHeaders:(id)arg4 key:(id)arg5 contexts:(id)arg6 priority:(long long)arg7 fallbackPriority:(long long)arg8 connectivity:(long long)arg9 requestType:(long long)arg10 method:(long long)arg11;
+ (unsigned long long)mainPageScoreWithDisplayContext:(id)arg1;
+ (unsigned long long)perfectMatchScoreWithDisplayContext:(id)arg1;
+ (void)performProtoRequestWithEndpoint:(id)arg1 proto:(id)arg2 additionalHeaders:(id)arg3 key:(id)arg4 contexts:(id)arg5 priority:(long long)arg6 requestType:(long long)arg7 authenticated:(_Bool)arg8 userSession:(id)arg9 responseClass:(Class)arg10 completionQueue:(id)arg11 completion:(CDUnknownBlockType)arg12;
- (void).cxx_destruct;
@property(nonatomic) float URLSessionTaskPriority; // @synthesize URLSessionTaskPriority=_URLSessionTaskPriority;
- (void)_updateContextPriority;
@property(readonly, nonatomic) long long accumulatedUserInitiatedQueuingLatency; // @synthesize accumulatedUserInitiatedQueuingLatency=_accumulatedUserInitiatedQueuingLatency;
- (void)addListener:(id)arg1;
- (void)addRequestConcurrencyObserver:(id)arg1;
- (unsigned long long)approximateRequestSize;
@property(readonly, nonatomic) _Bool authenticated; // @synthesize authenticated=_authenticated;
- (void)cancel;
- (void)cleanUp;
@property(nonatomic) unsigned long long concurrencyControlPriority; // @synthesize concurrencyControlPriority=_concurrencyControlPriority;
@property(nonatomic) long long connectivity; // @synthesize connectivity=_connectivity;
@property(readonly, nonatomic) long long contextPriority; // @synthesize contextPriority=_contextPriority;
@property(readonly, nonatomic) unsigned long long contextScore; // @synthesize contextScore=_contextScore;
@property(retain, nonatomic) SCDisplayContext *currentDisplayContext; // @synthesize currentDisplayContext=_currentDisplayContext;
- (id)description;
- (void)didComplete;
- (void)didEnqueue;
- (void)didExecute;
@property(retain, nonatomic) SCDisplayContext *displayContext; // @synthesize displayContext=_displayContext;
- (long long)domainType;
- (id)domainTypeString;
- (id)downloadProgress;
@property(retain, nonatomic) NSDate *enqueueTime; // @synthesize enqueueTime=_enqueueTime;
@property(nonatomic) long long estimatedRequestSize; // @synthesize estimatedRequestSize=_estimatedRequestSize;
@property(readonly, nonatomic) long long estimatedResponseSizeBytes; // @synthesize estimatedResponseSizeBytes=_estimatedResponseSizeBytes;
- (void)executeWithAuthenticator:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(nonatomic) long long fallbackPriority; // @synthesize fallbackPriority=_fallbackPriority;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
@property(retain, nonatomic) SCAPIRequestInfo *info; // @synthesize info=_info;
- (id)initWithKey:(id)arg1 contexts:(id)arg2 priority:(long long)arg3 fallbackPriority:(long long)arg4 connectivity:(long long)arg5 requestType:(long long)arg6 requestParser:(id)arg7 method:(long long)arg8 authenticated:(_Bool)arg9 requestTimestamp:(double)arg10 streamingId:(id)arg11 estimatedResponseSizeBytes:(long long)arg12;
- (void)initializeURLRequestWithAuthenticator:(id)arg1;
@property(readonly, nonatomic) _Bool isBackgroundRequest; // @synthesize isBackgroundRequest=_isBackgroundRequest;
@property(nonatomic) _Bool isBigSizeMedia; // @synthesize isBigSizeMedia=_isBigSizeMedia;
@property(nonatomic) _Bool isResumable; // @synthesize isResumable=_isResumable;
@property(nonatomic) _Bool isStreamingRequest; // @synthesize isStreamingRequest=_isStreamingRequest;
@property(nonatomic) _Bool isUIAssetRequest; // @synthesize isUIAssetRequest=_isUIAssetRequest;
@property(readonly, nonatomic) _Bool isUserBlocking; // @synthesize isUserBlocking=_isUserBlocking;
@property(readonly, nonatomic) _Bool isUserVisible; // @synthesize isUserVisible=_isUserVisible;
@property(nonatomic) _Bool isWifiOnlyRequest; // @synthesize isWifiOnlyRequest=_isWifiOnlyRequest;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(readonly, nonatomic) double lastUserInitiatedTime; // @synthesize lastUserInitiatedTime=_lastUserInitiatedTime;
- (id)logId;
@property(nonatomic) unsigned long long maxNumOfRequestAttempts; // @synthesize maxNumOfRequestAttempts=_maxNumOfRequestAttempts;
@property(readonly, nonatomic) long long method; // @synthesize method=_method;
- (void)monitorDownloadProgressWithCallback:(CDUnknownBlockType)arg1;
- (void)monitorDownloadProgressWithQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)monitorUploadProgressWithCallback:(CDUnknownBlockType)arg1;
@property(copy) NSDictionary *networkStats; // @synthesize networkStats=_networkStats;
- (id)path;
- (void)pause;
@property(readonly, nonatomic) unsigned long long payloadSize;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
- (void)progressiveUpdateWithQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)queueType;
@property(nonatomic) long long queuingLatency; // @synthesize queuingLatency=_queuingLatency;
- (void)removeDownloadProgressMonitoring;
- (void)removeListener:(id)arg1;
@property(copy, nonatomic) NSString *requestBatchId; // @synthesize requestBatchId=_requestBatchId;
@property(readonly, copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(retain, nonatomic) SCRequestInfoContainer *requestInfoContainer; // @synthesize requestInfoContainer=_requestInfoContainer;
@property(retain, nonatomic) id <SCRequestParser> requestParser; // @synthesize requestParser=_requestParser;
@property(readonly, nonatomic) double requestTimestamp; // @synthesize requestTimestamp=_requestTimestamp;
@property(readonly, nonatomic) long long requestType; // @synthesize requestType=_requestType;
- (id)requestTypeStr;
- (id)resumableDownloadedData;
- (void)resumeWithCompletionQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) unsigned long long schedulingState; // @synthesize schedulingState=_schedulingState;
@property(readonly, nonatomic) SCAPIURLSession *session; // @synthesize session=_session;
- (double)sessionTimeoutInterval;
- (void)setRequestId;
@property(nonatomic) _Bool shouldTrace; // @synthesize shouldTrace=_shouldTrace;
@property(retain, nonatomic) NSURLSessionTask *task; // @synthesize task=_task;
@property(copy, nonatomic) NSString *taskId; // @synthesize taskId=_taskId;
- (void)setTimeoutInterval:(double)arg1;
@property(retain, nonatomic) SCRequestTrackingInfo *trackingInfo; // @synthesize trackingInfo=_trackingInfo;
- (void)setTrackingInfoWithId:(id)arg1 mediaId:(id)arg2 type:(id)arg3 mediaType:(id)arg4 expirationInDays:(unsigned long long)arg5;
- (void)setTrackingInfoWithId:(id)arg1 type:(id)arg2 mediaType:(id)arg3 expirationInDays:(unsigned long long)arg4;
@property(retain, nonatomic) SCNNetworkTypesUrlResponseInfo *urlResponseInfo; // @synthesize urlResponseInfo=_urlResponseInfo;
@property(nonatomic) _Bool userInitiated; // @synthesize userInitiated=_userInitiated;
@property(nonatomic) _Bool willUseBackgroundSession; // @synthesize willUseBackgroundSession=_willUseBackgroundSession;
@property(readonly, copy, nonatomic) NSString *streamingId; // @synthesize streamingId=_streamingId;
- (double)timeoutInterval;
- (void)updateRequestContext;
- (void)updateWithRequest:(id)arg1;
- (id)uploadProgress;
- (id)url;
- (id)urlRequest;
@property(readonly, nonatomic) NSDate *userInitiatedDate; // @synthesize userInitiatedDate=_userInitiatedDate;

@end

