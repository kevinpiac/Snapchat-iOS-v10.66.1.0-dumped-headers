//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "NavigationDelegate-Protocol.h"
#import "SCAddToGroupViewControllerDelegate-Protocol.h"
#import "SCChatMainViewControllerStateDelegate-Protocol.h"
#import "SCChatViewControllerConversationStateProtocol-Protocol.h"
#import "SCCognacNotificationHandling-Protocol.h"
#import "SCCommerceOperaPresenterDelegate-Protocol.h"
#import "SCReplyDelegate-Protocol.h"
#import "SCStartChatDelegate-Protocol.h"
#import "SCSwipeViewParentDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSMutableSet, NSString, SCAddToGroupViewController, SCChatMainViewController, SCCommerceOperaPresenter, SCLazy, SCUserSession, UIImage, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIView;
@protocol SCReplyDelegate, SCStartChatDelegate;

@interface SCModalChatRootViewController : UIViewController <NavigationDelegate, SCChatMainViewControllerStateDelegate, SCSwipeViewParentDelegate, SCAddToGroupViewControllerDelegate, SCStartChatDelegate, SCReplyDelegate, SCCommerceOperaPresenterDelegate, SCTraceEnabled, SCChatViewControllerConversationStateProtocol, SCCognacNotificationHandling>
{
    SCUserSession *_userSession;
    UIView *_containerView;
    _Bool _viewIsSwipedIn;
    SCChatMainViewController *_chatViewController;
    SCAddToGroupViewController *_addToGroupViewController;
    SCCommerceOperaPresenter *_commercePresenter;
    long long _sourceType;
    SCLazy *_groupsDataCreator;
    SCLazy *_groupsDataMutator;
    id <SCStartChatDelegate> _chatDelegate;
    id <SCReplyDelegate> _replyDelegate;
    UIImage *_dismissButtonImage;
    NSMutableSet *_lockScrollRequestIds;
}

- (void).cxx_destruct;
- (void)_maybeAddChatViewController;
- (void)_maybeAddGroupViewController;
- (void)_setGroupConversationById:(id)arg1;
- (id)activeCognacAppSessionId;
- (id)activeConversationId;
@property(retain, nonatomic) SCAddToGroupViewController *addToGroupViewController; // @synthesize addToGroupViewController=_addToGroupViewController;
- (void)attachFeedToChatTapDectionViewWithCurrentTapLocation:(struct CGPoint)arg1 delegate:(id)arg2;
- (_Bool)canPerformNavigation;
- (void)cancelScroll;
@property(nonatomic) __weak id <SCStartChatDelegate> chatDelegate; // @synthesize chatDelegate=_chatDelegate;
- (id)chatHeader;
- (id)chatHeaderView;
@property(readonly, nonatomic) SCChatMainViewController *chatViewController;
- (_Bool)cognacHandleNotificationDismissed:(id)arg1;
- (_Bool)cognacHandleNotificationPressed:(id)arg1;
- (void)commerceOperaViewerDidDisappear:(id)arg1 unlockedLens:(id)arg2 additionalInfo:(id)arg3 wasBackgrounded:(_Bool)arg4;
- (void)didBecomeFullChat;
- (void)didFollowThrough;
- (void)didHideFullscreenSubview;
- (void)didPressMischiefConfirmationButton:(id)arg1 viewController:(id)arg2 groupName:(id)arg3;
- (void)didSwipeOut;
@property(retain, nonatomic) UIImage *dismissButtonImage; // @synthesize dismissButtonImage=_dismissButtonImage;
- (void)dismissViewControllerAnimated:(_Bool)arg1 viewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithUserSession:(id)arg1 groupsDataCreator:(id)arg2 groupsDataMutator:(id)arg3;
- (_Bool)isAnimatingScroll;
- (_Bool)isAtFarLeft;
- (_Bool)isFrameInVisibleBounds:(id)arg1;
- (_Bool)isFullyVisible:(id)arg1;
- (_Bool)isLeftOfViewController:(id)arg1;
- (_Bool)isPartiallyVisible:(id)arg1;
- (_Bool)isPlayingMedia;
- (_Bool)isRightOfViewController:(id)arg1;
- (_Bool)isScrollingLocked;
- (_Bool)isVisibleViewControllerAndCapableOfPlayingSnaps;
@property(retain, nonatomic) NSMutableSet *lockScrollRequestIds; // @synthesize lockScrollRequestIds=_lockScrollRequestIds;
- (void)lockScrollWithRequestId:(id)arg1;
- (void)navigateToChatView;
- (void)navigateToChatViewAnimated:(_Bool)arg1;
- (void)navigateToChatViewAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)navigateToChatViewWithFriend:(id)arg1 deepLinkURL:(id)arg2 viewController:(id)arg3;
- (void)navigateToChatViewWithGroupId:(id)arg1;
- (id)otherParticipant;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (long long)preferredStatusBarStyle;
- (void)presentFarLeftVCAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)presentLeftVCAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)presentMiddleVCAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)presentOnCurrentVCAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)presentRightVCAnimated:(_Bool)arg1 deepLinkURL:(id)arg2 additionalInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)presentedModally;
- (id)profileTransitionCoordinator;
- (id)recipientBar;
- (void)removeFeedToChatTapDectionView;
@property(nonatomic) __weak id <SCReplyDelegate> replyDelegate; // @synthesize replyDelegate=_replyDelegate;
- (void)replyWithParameter:(id)arg1;
- (_Bool)replyingToStoryWithChat;
- (id)rightButtonImage;
- (void)rightButtonPressed;
- (void)setConversationByChatIdentifier:(id)arg1 deepLinkURL:(id)arg2 chatPageSource:(long long)arg3 navigationAction:(long long)arg4 subpageName:(id)arg5;
- (void)setConversationByChatIdentifier:(id)arg1 deeplinkType:(unsigned long long)arg2 isFromNotification:(_Bool)arg3 chatPageSource:(long long)arg4 navigationAction:(long long)arg5 chatSubpageName:(id)arg6;
- (void)setGroupCreationWithRecipientUserIds:(id)arg1 source:(long long)arg2;
- (void)setScrollEnabled:(_Bool)arg1;
- (void)unlockScrollWithRequestId:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

