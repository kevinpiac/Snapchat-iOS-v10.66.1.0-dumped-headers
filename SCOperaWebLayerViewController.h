//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCOperaLayerViewController.h"

#import "SCOperaPageableViewControllerDelegate-Protocol.h"
#import "SCOperaRemoteVideoControllerDelegate-Protocol.h"
#import "SCOperaWebLayerVideoGestureRecognizer-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, SCOperaInlineVideo, SCOperaRemoteVideoViewProvider, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol UIViewControllerTransitioningDelegate;

@interface SCOperaWebLayerViewController : SCOperaLayerViewController <SCOperaWebLayerVideoGestureRecognizer, UIGestureRecognizerDelegate, SCOperaRemoteVideoControllerDelegate, SCOperaPageableViewControllerDelegate, UIScrollViewDelegate>
{
    UITapGestureRecognizer *_tapGesture;
    SCOperaRemoteVideoViewProvider *_inlineVideoViewController;
    UITapGestureRecognizer *_tapToOpenInlineVideoRecognizer;
    _Bool _shouldPresentInlineVideoWhenInlineVideoDidDisappear;
    NSMutableDictionary *_inlineVideosProgress;
    NSMutableArray *_inlineVideos;
    SCOperaInlineVideo *_lastVideoPlayed;
    NSMutableDictionary *_videoFirstFrameKeyToImageView;
    id <UIViewControllerTransitioningDelegate> _inlineVideoTransitioningDelegate;
    UIView *_screenshotHidingView;
    _Bool _isScrolling;
    _Bool _scrollViewIsAtTopBoundary;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
}

- (void).cxx_destruct;
- (void)_didTap:(id)arg1;
- (void)_scrollViewDidEndScrolling;
- (void)_sendSubviewScrollViewIsAtTopBoundaryEvent:(_Bool)arg1;
- (void)_sendSubviewScrollViewStopEvent;
- (void)_setUpTapToOpenInlineVideoRecognizer;
- (void)_setupTapGesture;
- (void)addInlineVideoWithParameters:(id)arg1;
- (id)addVideoParams:(id)arg1;
- (void)didReceiveInlineVideoFirstFrameImageData:(id)arg1 forKey:(id)arg2 fromURL:(id)arg3;
- (void)didResetWebView;
- (void)didTapToOpenInlineVideo:(id)arg1;
- (void)didTapVideo:(id)arg1;
- (void)expandInlineVideo:(id)arg1;
- (void)fetchInlineVideoFirstFrameImage:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)initInstanceVars;
- (id)initWithConfiguration:(id)arg1 eventAnnouncer:(id)arg2 sharedResourceManager:(id)arg3;
- (unsigned long long)inlineVideoCount;
- (_Bool)isPresentingInlineVideo;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
- (_Bool)pageIsFullyVisible:(id)arg1;
- (_Bool)pageIsPartiallyVisible:(id)arg1;
- (void)pause;
- (void)playInlineVideo:(id)arg1;
- (void)playProperVideoIfAvailable;
- (unsigned long long)relativePositionForPageId:(id)arg1;
- (void)remoteVideoViewControllerDidDisappear:(_Bool)arg1;
- (void)remoteVideoViewControllerDidFinishPlaying;
- (void)remoteVideoViewControllerDidPressExitButton;
- (void)remoteVideoViewControllerDidPressShowActionMenuButton;
- (void)remoteVideoViewControllerDidRotateToLandscape:(_Bool)arg1;
- (void)remoteVideoViewControllerWasPresented;
- (void)replacePreviousInlineVideoWithScreenshot;
- (void)reset;
- (void)resume;
- (id)scrollView;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setImageForBackdrop:(id)arg1;
- (void)setVolume:(double)arg1;
- (void)setupScreenshotHidingViewForVideo:(id)arg1;
- (void)setupTapGestureRecognizers;
- (void)tearDownCurrentInlineInlineVideo;
- (void)tearDownInlineVideos;
- (void)teardown;
- (void)updateCurrentInlineVideoScreenshot;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidFullyAppear;
- (void)viewDidFullyDisappear;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

