//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLensUriServiceProviderRouteHandler-Protocol.h"
#import "SCSnappablesFutureProvider-Protocol.h"

@class NSLock, NSString, SCFuture, SCPromise;
@protocol SCSnappableLoggingState;

@interface SCLensUriServiceSnappablesHandler : NSObject <SCLensUriServiceProviderRouteHandler, SCSnappablesFutureProvider>
{
    id <SCSnappableLoggingState> _lensLogger;
    SCPromise *_dataPromise;
    NSLock *_dataPromiseLock;
    _Bool _dataProvidingBlocked;
}

+ (_Bool)_isWithinSizeLimitOfPayloadData:(id)arg1;
+ (id)_snappablesUriServiceErrorWithCode:(long long)arg1;
+ (long long)maxSnappablesMetadataSize;
- (void).cxx_destruct;
- (void)_completeSessionWithError:(id)arg1;
- (void)_completeSessionWithValue:(id)arg1;
- (void)_forceCompleteSession;
- (void)_forceResetDataPromiseWithNewPromise:(id)arg1;
- (id)_handleInitRequest:(id)arg1 defaultResponse:(id)arg2;
- (id)_handleSendRequest:(id)arg1 andCompleteSessionWithData:(id)arg2 message:(id)arg3;
- (id)_handleSendRequest:(id)arg1 andCompleteSessionWithErrorCode:(long long)arg2;
- (id)_handleSendRequest:(id)arg1 defaultResponse:(id)arg2;
- (void)_initSession;
- (_Bool)_isSessionComplete;
- (void)_resetDataPromiseWithNewPromise:(id)arg1 completeOldPromiseBlock:(CDUnknownBlockType)arg2;
- (void)_resetDataPromiseWithNewPromise:(id)arg1 completeOldPromiseError:(id)arg2;
- (void)_setSessionProvidingBlocked:(_Bool)arg1;
- (id)_snappablesResultPromise;
- (id)_snappablesResultPromiseForProviding;
- (void)dealloc;
- (void)endSession;
- (void)handleRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithLensLogger:(id)arg1;
@property(readonly, nonatomic) SCFuture *snappablesResultFuture;
- (void)startSession;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

