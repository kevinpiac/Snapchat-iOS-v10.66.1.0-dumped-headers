//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLensDataFetcherListener-Protocol.h"
#import "SCLensDataFetchingMediatorProtocol-Protocol.h"
#import "SCTokenizedLensDataUpdateRegistry-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSArray, NSMutableSet, NSString;
@protocol SCLensDataFetcher, SCLensDataFetcherListener, SCLensDataFetchingMediatorDelegate, SCLensDataPrefetcher;

@interface SCLensDataFetchingMediator : NSObject <SCLensDataFetcherListener, SCTraceEnabled, SCLensDataFetchingMediatorProtocol, SCTokenizedLensDataUpdateRegistry>
{
    id <SCLensDataFetcher> _lensDataFetcher;
    id <SCLensDataPrefetcher> _lensDataPrefetcher;
    id <SCLensDataFetcherListener> _lensThumbnailLogger;
    NSMutableSet *_tokens;
    NSMutableSet *_lensIdsWithInvalidContent;
    NSMutableSet *_lensIdsForLoadingImages;
    NSMutableSet *_lensIdsForLoadingContent;
    NSMutableSet *_lensIdsForLoadingFilterOverlays;
    NSMutableSet *_lensIdsForLoadingAssets;
    NSMutableSet *_lensIdsForLoadedAssets;
    id <SCLensDataFetchingMediatorDelegate> _delegate;
    NSArray *_downloadableLenses;
}

- (void).cxx_destruct;
- (void)addFetcherListeners;
- (void)addToken:(id)arg1;
- (void)dealloc;
@property(nonatomic) __weak id <SCLensDataFetchingMediatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didUpdateContentForLens:(id)arg1;
- (void)didUpdateContentForLens:(id)arg1 contentUpdateType:(long long)arg2;
@property(retain, nonatomic) NSArray *downloadableLenses; // @synthesize downloadableLenses=_downloadableLenses;
- (void)fetchDownloadableLenses;
- (void)fetchLens:(id)arg1;
- (void)fetchLensesIfNeeded;
- (id)initWitLensDataFetcher:(id)arg1 lensDataPrefetcher:(id)arg2 lensThumbnailLogger:(id)arg3 delegate:(id)arg4;
- (_Bool)isFetchingLens:(id)arg1;
- (_Bool)isLensWithInvalidContent:(id)arg1;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingContentForAsset:(id)arg2 content:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingContentForLens:(id)arg2 contentPath:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingFilterOverlayImageForLens:(id)arg2 imagePath:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingImageForLens:(id)arg2 image:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 willStartLoadingAsset:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingContentForLens:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingFilterOverlayImagePathForLens:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingImageForLens:(id)arg2;
- (void)reachabilityStatusChangedNotification:(id)arg1;
- (void)removeFetcherListeners;
- (void)removeToken:(id)arg1;
- (id)startUpdatingLensData;
- (void)stopUpdatingLensDataWithToken:(id)arg1;
@property(readonly, nonatomic) _Bool updating;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

