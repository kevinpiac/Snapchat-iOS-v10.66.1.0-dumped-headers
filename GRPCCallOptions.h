//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "NSMutableCopying-Protocol.h"

@class NSDictionary, NSString;
@protocol GRPCAuthorizationProtocol, NSObject;

@interface GRPCCallOptions : NSObject <NSCopying, NSMutableCopying>
{
    NSString *_serverAuthority;
    double _timeout;
    NSString *_oauth2AccessToken;
    id <GRPCAuthorizationProtocol> _authTokenProvider;
    NSDictionary *_initialMetadata;
    NSString *_userAgentPrefix;
    unsigned long long _responseSizeLimit;
    unsigned long long _compressionAlgorithm;
    _Bool _retryEnabled;
    double _keepaliveInterval;
    double _keepaliveTimeout;
    double _connectMinTimeout;
    double _connectInitialBackoff;
    double _connectMaxBackoff;
    NSDictionary *_additionalChannelArgs;
    NSString *_PEMRootCertificates;
    NSString *_PEMPrivateKey;
    NSString *_PEMCertificateChain;
    unsigned long long _transportType;
    NSString *_hostNameOverride;
    id <NSObject> _logContext;
    NSString *_channelPoolDomain;
    unsigned long long _channelID;
}

- (void).cxx_destruct;
@property(readonly, copy) NSString *PEMCertificateChain; // @synthesize PEMCertificateChain=_PEMCertificateChain;
@property(readonly, copy) NSString *PEMPrivateKey; // @synthesize PEMPrivateKey=_PEMPrivateKey;
@property(readonly, copy) NSString *PEMRootCertificates; // @synthesize PEMRootCertificates=_PEMRootCertificates;
@property(readonly, copy) NSDictionary *additionalChannelArgs; // @synthesize additionalChannelArgs=_additionalChannelArgs;
@property(readonly) id <GRPCAuthorizationProtocol> authTokenProvider; // @synthesize authTokenProvider=_authTokenProvider;
@property(readonly) unsigned long long channelID; // @synthesize channelID=_channelID;
@property(readonly) unsigned long long channelOptionsHash;
@property(readonly, copy) NSString *channelPoolDomain; // @synthesize channelPoolDomain=_channelPoolDomain;
@property(readonly) unsigned long long compressionAlgorithm; // @synthesize compressionAlgorithm=_compressionAlgorithm;
@property(readonly) double connectInitialBackoff; // @synthesize connectInitialBackoff=_connectInitialBackoff;
@property(readonly) double connectMaxBackoff; // @synthesize connectMaxBackoff=_connectMaxBackoff;
@property(readonly) double connectMinTimeout; // @synthesize connectMinTimeout=_connectMinTimeout;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)hasChannelOptionsEqualTo:(id)arg1;
@property(readonly, copy) NSString *hostNameOverride; // @synthesize hostNameOverride=_hostNameOverride;
- (id)init;
- (id)initWithServerAuthority:(id)arg1 timeout:(double)arg2 oauth2AccessToken:(id)arg3 authTokenProvider:(id)arg4 initialMetadata:(id)arg5 userAgentPrefix:(id)arg6 responseSizeLimit:(unsigned long long)arg7 compressionAlgorithm:(unsigned long long)arg8 retryEnabled:(_Bool)arg9 keepaliveInterval:(double)arg10 keepaliveTimeout:(double)arg11 connectMinTimeout:(double)arg12 connectInitialBackoff:(double)arg13 connectMaxBackoff:(double)arg14 additionalChannelArgs:(id)arg15 PEMRootCertificates:(id)arg16 PEMPrivateKey:(id)arg17 PEMCertificateChain:(id)arg18 transportType:(unsigned long long)arg19 hostNameOverride:(id)arg20 logContext:(id)arg21 channelPoolDomain:(id)arg22 channelID:(unsigned long long)arg23;
@property(readonly, copy) NSDictionary *initialMetadata; // @synthesize initialMetadata=_initialMetadata;
@property(readonly) double keepaliveInterval; // @synthesize keepaliveInterval=_keepaliveInterval;
@property(readonly) double keepaliveTimeout; // @synthesize keepaliveTimeout=_keepaliveTimeout;
@property(readonly) id logContext; // @synthesize logContext=_logContext;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *oauth2AccessToken; // @synthesize oauth2AccessToken=_oauth2AccessToken;
@property(readonly) unsigned long long responseSizeLimit; // @synthesize responseSizeLimit=_responseSizeLimit;
@property(readonly) _Bool retryEnabled; // @synthesize retryEnabled=_retryEnabled;
@property(readonly, copy) NSString *serverAuthority; // @synthesize serverAuthority=_serverAuthority;
@property(readonly) double timeout; // @synthesize timeout=_timeout;
@property(readonly) unsigned long long transportType; // @synthesize transportType=_transportType;
@property(readonly, copy) NSString *userAgentPrefix; // @synthesize userAgentPrefix=_userAgentPrefix;

@end

