//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSLock, NSMutableArray, NSMutableDictionary;

@interface SCFideliusLogger : NSObject
{
    NSMutableArray *_fideliusEvents;
    NSMutableDictionary *_eventStartTime;
    NSLock *_lock;
}

+ (id)shared;
- (void).cxx_destruct;
- (void)addToFileEvent:(id)arg1 parameters:(id)arg2;
- (id)filePath;
- (void)flushAllEvents;
- (void)flushOldEvents;
- (long long)getDuration:(id)arg1 uniqueId:(id)arg2;
- (id)init;
- (void)logAckRetry:(long long)arg1 withBackground:(_Bool)arg2 withRetryInClear:(_Bool)arg3 source:(id)arg4 failureReason:(id)arg5 uniqueId:(id)arg6;
- (void)logAppInvalidation:(id)arg1;
- (void)logAppOpen:(_Bool)arg1 failureReason:(id)arg2 source:(id)arg3 withIdentityLoaded:(_Bool)arg4;
- (void)logClientRetryInit:(id)arg1;
- (void)logClientSnapSuppressed:(id)arg1 source:(id)arg2 myBeta:(id)arg3 cleartext:(_Bool)arg4;
- (void)logCreateUserDbTablesFailure:(id)arg1;
- (void)logDBSize:(long long)arg1 totalDbSizeByte:(long long)arg2 numDbs:(long long)arg3;
- (void)logDatabaseError:(id)arg1 type:(id)arg2 code:(int)arg3 message:(id)arg4 statement:(id)arg5 path:(id)arg6;
- (void)logDbCloseError;
- (void)logDbIntegrityCheckError:(id)arg1;
- (void)logDbOperation:(long long)arg1 result:(id)arg2 table:(id)arg3 databaseType:(id)arg4 errorCode:(long long)arg5 statement:(id)arg6 source:(id)arg7 errorMessage:(id)arg8 freeDiskSpaceMb:(id)arg9 totalDiskSpaceMb:(id)arg10 freeNodes:(id)arg11 totalNodes:(id)arg12 withNewDb:(_Bool)arg13 withIdentityMissing:(_Bool)arg14 dbSizeByte:(long long)arg15 totalDbSizeByte:(long long)arg16 numDbs:(long long)arg17;
- (void)logDeleteDatabase:(id)arg1 source:(id)arg2;
- (void)logDeviceRemoved:(id)arg1;
- (void)logEventStartTime:(id)arg1 uniqueId:(id)arg2;
- (void)logFriendAdded:(id)arg1 currentDeviceCount:(long long)arg2 previousDeviceCount:(long long)arg3;
- (void)logFriendBatchProcessed:(long long)arg1 friendModifiedCount:(long long)arg2 deviceUpdatedCount:(long long)arg3 deviceDeletedCount:(long long)arg4;
- (void)logGeneralError:(long long)arg1 failureReason:(id)arg2 source:(id)arg3;
- (void)logGeneralError:(long long)arg1 failureReason:(id)arg2 source:(id)arg3 file:(id)arg4 freeDiskSpaceMb:(id)arg5 totalDiskSpaceMb:(id)arg6 freeNodes:(id)arg7 totalNodes:(id)arg8;
- (void)logGraphRead:(_Bool)arg1 failureReason:(id)arg2 source:(id)arg3;
- (void)logIdentityInit:(long long)arg1 success:(_Bool)arg2 failureReason:(id)arg3 message:(id)arg4 source:(id)arg5 uniqueId:(id)arg6;
- (void)logIdentityRestored:(_Bool)arg1;
- (void)logInversePhi:(_Bool)arg1 dataReady:(_Bool)arg2 retried:(_Bool)arg3 cleartext:(_Bool)arg4 failureReason:(id)arg5 message:(id)arg6 uniqueId:(id)arg7;
- (void)logKeyPropagation:(long long)arg1 withSuccess:(_Bool)arg2 source:(id)arg3 numKeys:(long long)arg4 numFriendsWithKeysRequested:(long long)arg5 numFriendsWithKeysReceived:(long long)arg6 statusCode:(long long)arg7;
- (void)logKeysReceive:(id)arg1;
- (void)logNotReady:(long long)arg1 action:(id)arg2 withUserSession:(_Bool)arg3 withIdentity:(_Bool)arg4 withDatabaseManager:(_Bool)arg5 loadingStatus:(id)arg6;
- (void)logOpsLatency:(long long)arg1 uniqueId:(id)arg2 rewrapCount:(long long)arg3;
- (void)logPostServerInit:(id)arg1 source:(id)arg2 withNilIwek:(_Bool)arg3;
- (void)logSecretGenerated:(_Bool)arg1 failureReason:(id)arg2;
- (void)logSekCryptoOps:(long long)arg1 result:(id)arg2 failureReason:(id)arg3;
- (void)logSekDiskOps:(long long)arg1 withSuccess:(_Bool)arg2;
- (void)logServerBetaMatch:(_Bool)arg1 mismatchCount:(long long)arg2 loadingStatus:(id)arg3;
- (void)logSnapPhi:(_Bool)arg1 eventParams:(id)arg2;
- (void)logSnapSendClear:(id)arg1;
- (void)logUnsampledEventWithDiskInfo:(id)arg1 file:(id)arg2;
- (void)logUnsampledEventWithDiskInfo:(id)arg1 file:(id)arg2 errorCode:(long long)arg3;
- (void)logUnwrappedKeysCheck:(_Bool)arg1 failureReason:(id)arg2;
- (void)logUserDbOps:(long long)arg1 result:(id)arg2 errorMessage:(id)arg3 withNewDb:(_Bool)arg4 withIdentityMissing:(_Bool)arg5;
- (void)logUserIdentityCreated:(_Bool)arg1 numOtherIdentities:(long long)arg2;
- (void)onInvalidate;
- (id)serializedEventsString;
- (void)writeToFile;

@end

