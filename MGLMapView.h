//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "GLKViewDelegate-Protocol.h"
#import "MGLAnnotationImageDelegate-Protocol.h"
#import "MGLCalloutViewDelegate-Protocol.h"
#import "MGLMultiPointDelegate-Protocol.h"
#import "MGLSMCalloutViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CADisplayLink, CLLocationManager, EAGLContext, GLKView, MGLAnnotationContainerView, MGLMapCamera, MGLReachability, MGLStyle, MGLUserLocation, MGLUserLocationAnnotationView, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSURL, UIButton, UIImageView, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer;
@protocol MGLCalloutView, MGLMapViewDelegate;

@interface MGLMapView : UIView <UIGestureRecognizerDelegate, GLKViewDelegate, CLLocationManagerDelegate, MGLSMCalloutViewDelegate, MGLCalloutViewDelegate, MGLMultiPointDelegate, MGLAnnotationImageDelegate>
{
    struct Map *_mbglMap;
    struct MBGLView *_mbglView;
    struct unique_ptr<MGLRenderFrontend, std::__1::default_delete<MGLRenderFrontend>> _rendererFrontend;
    struct shared_ptr<mbgl::ThreadPool> _mbglThreadPool;
    _Bool _opaque;
    NSMutableArray *_bundledStyleURLs;
    struct unordered_map<unsigned int, MGLAnnotationContext, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MGLAnnotationContext>>> _annotationContextsByAnnotationTag;
    struct map<id<MGLAnnotation>, unsigned int, std::__1::less<id<MGLAnnotation>>, std::__1::allocator<std::__1::pair<const id<MGLAnnotation>, unsigned int>>> _annotationTagsByAnnotation;
    unsigned int _selectedAnnotationTag;
    _Bool _userLocationAnnotationIsSelected;
    struct CGSize _unionedAnnotationRepresentationSize;
    struct CGSize _largestAnnotationViewSize;
    vector_12da65de _annotationsNearbyLastTap;
    struct CGPoint _initialImplicitCalloutViewOffset;
    NSDate *_userLocationAnimationCompletionDate;
    _Bool _isChangingAnnotationLayers;
    _Bool _isWaitingForRedundantReachableNotification;
    _Bool _isTargetingInterfaceBuilder;
    double _pendingLatitude;
    double _pendingLongitude;
    CADisplayLink *_displayLink;
    _Bool _needsDisplayRefresh;
    unsigned long long _changeDelimiterSuppressionDepth;
    struct CLLocationCoordinate2D _previousPinchCenterCoordinate;
    unsigned long long _previousPinchNumberOfTouches;
    double _distanceFromOldUserLocation;
    _Bool _delegateHasAlphasForShapeAnnotations;
    _Bool _delegateHasStrokeColorsForShapeAnnotations;
    _Bool _delegateHasFillColorsForShapeAnnotations;
    _Bool _delegateHasLineWidthsForShapeAnnotations;
    NSArray *_visiblePlaceFeatures;
    NSArray *_visibleRoadFeatures;
    _Bool _accessibilityValueAnnouncementIsPending;
    MGLReachability *_reachability;
    _Bool _showsUserLocation;
    _Bool _showsUserHeadingIndicator;
    _Bool _displayHeadingCalibration;
    _Bool _zoomEnabled;
    _Bool _scrollEnabled;
    _Bool _rotateEnabled;
    _Bool _pitchEnabled;
    _Bool _dormant;
    id <MGLMapViewDelegate> _delegate;
    MGLStyle *_style;
    UIView *_scaleBar;
    UIImageView *_compassView;
    UIImageView *_logoView;
    UIButton *_attributionButton;
    MGLUserLocation *_userLocation;
    unsigned long long _userTrackingMode;
    unsigned long long _userLocationVerticalAlignment;
    double _decelerationRate;
    EAGLContext *_context;
    GLKView *_glView;
    NSMutableArray *_compassViewConstraints;
    NSMutableArray *_logoViewConstraints;
    NSMutableArray *_attributionButtonConstraints;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    UITapGestureRecognizer *_doubleTap;
    UITapGestureRecognizer *_twoFingerTap;
    UIPanGestureRecognizer *_pan;
    UIPinchGestureRecognizer *_pinch;
    UIRotationGestureRecognizer *_rotate;
    UILongPressGestureRecognizer *_quickZoom;
    UIPanGestureRecognizer *_twoFingerDrag;
    NSMutableDictionary *_annotationImagesByIdentifier;
    UIView<MGLCalloutView> *_calloutViewForSelectedAnnotation;
    MGLUserLocationAnnotationView *_userLocationAnnotationView;
    unsigned long long _userTrackingState;
    CLLocationManager *_locationManager;
    double _scale;
    double _angle;
    double _quickZoomStart;
    MGLAnnotationContainerView *_annotationContainerView;
    NSMutableDictionary *_annotationViewReuseQueueByIdentifier;
    struct CLLocationCoordinate2D _targetCoordinate;
    struct UIEdgeInsets _contentInset;
}

+ (id)keyPathsForValuesAffectingCamera;
+ (id)keyPathsForValuesAffectingCenterCoordinate;
+ (id)keyPathsForValuesAffectingDirection;
+ (id)keyPathsForValuesAffectingPitch;
+ (id)keyPathsForValuesAffectingPitchEnabled;
+ (id)keyPathsForValuesAffectingRotateEnabled;
+ (id)keyPathsForValuesAffectingScrollEnabled;
+ (id)keyPathsForValuesAffectingStyle;
+ (id)keyPathsForValuesAffectingStyleURL;
+ (id)keyPathsForValuesAffectingUserLocation;
+ (id)keyPathsForValuesAffectingZoomEnabled;
+ (id)keyPathsForValuesAffectingZoomLevel;
+ (struct CGSize)mapScreenshotSizeForGeofence:(struct CGRect)arg1;
+ (id)resourceImageNamed:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)_didGrabGestureRecognizers;
- (id)_fetchGestureForKey:(id)arg1;
- (void)_flyToCamera:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2 withDuration:(double)arg3 peakAltitude:(double)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_grabGestureRecognizers;
- (void)_grabGestureRecognizersIfNeeded;
- (void)_setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;
- (void)_setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 edgePadding:(struct UIEdgeInsets)arg2 zoomLevel:(double)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_setDirection:(double)arg1 animated:(_Bool)arg2;
- (void)_setVisibleCoordinates:(const struct CLLocationCoordinate2D *)arg1 count:(unsigned long long)arg2 edgePadding:(struct UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)addOverlays:(id)arg1;
- (void)addStyleClass:(id)arg1;
- (double)alphaForShapeAnnotation:(id)arg1;
- (struct CGPoint)anchorPointForGesture:(id)arg1;
@property(nonatomic) double angle; // @synthesize angle=_angle;
- (double)angleBetweenPoints:(struct CGPoint)arg1 east:(struct CGPoint)arg2;
- (void)animateWithDelay:(double)arg1 animations:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) MGLAnnotationContainerView *annotationContainerView; // @synthesize annotationContainerView=_annotationContainerView;
- (id)annotationForGestureRecognizer:(id)arg1 persistingResults:(_Bool)arg2;
- (void)annotationImageNeedsRedisplay:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *annotationImagesByIdentifier; // @synthesize annotationImagesByIdentifier=_annotationImagesByIdentifier;
- (unsigned int)annotationTagAtPoint:(struct CGPoint)arg1 persistingResults:(_Bool)arg2;
- (unsigned int)annotationTagForAnnotation:(id)arg1;
- (vector_12da65de)annotationTagsInRect:(struct CGRect)arg1;
- (id)annotationViewForAnnotation:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *annotationViewReuseQueueByIdentifier; // @synthesize annotationViewReuseQueueByIdentifier=_annotationViewReuseQueueByIdentifier;
- (id)annotationViewReuseQueueForIdentifier:(id)arg1;
- (id)annotationWithTag:(unsigned int)arg1;
@property(readonly, nonatomic) NSArray *annotations;
- (void)announceAccessibilityValue;
- (void)applyIconIdentifier:(id)arg1 toAnnotationsWithImageReuseIdentifier:(id)arg2;
@property(retain, nonatomic) UIButton *attributionButton; // @synthesize attributionButton=_attributionButton;
@property(retain, nonatomic) NSMutableArray *attributionButtonConstraints; // @synthesize attributionButtonConstraints=_attributionButtonConstraints;
@property(readonly, nonatomic) NSArray *bundledStyleURLs;
- (void)calloutViewClicked:(id)arg1;
- (void)calloutViewDidAppear:(id)arg1;
- (id)calloutViewForAnnotation:(id)arg1;
@property(retain, nonatomic) UIView<MGLCalloutView> *calloutViewForSelectedAnnotation; // @synthesize calloutViewForSelectedAnnotation=_calloutViewForSelectedAnnotation;
- (_Bool)calloutViewShouldHighlight:(id)arg1;
- (void)calloutViewTapped:(id)arg1;
- (void)calloutViewWillAppear:(id)arg1;
@property(copy, nonatomic) MGLMapCamera *camera;
- (id)cameraByPanningWithTranslation:(struct CGPoint)arg1 panGesture:(id)arg2;
- (id)cameraByRotatingToDirection:(double)arg1 aroundAnchorPoint:(struct CGPoint)arg2;
- (id)cameraByTiltingToPitch:(double)arg1;
- (id)cameraByZoomingToZoomLevel:(double)arg1 aroundAnchorPoint:(struct CGPoint)arg2;
- (void)cameraDidChangeAnimated:(_Bool)arg1;
- (id)cameraForCameraOptions:(const struct CameraOptions *)arg1;
- (void)cameraIsChanging;
- (struct CameraOptions)cameraOptionsObjectForAnimatingToCamera:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (id)cameraThatFitsCoordinateBounds:(struct MGLCoordinateBounds)arg1;
- (id)cameraThatFitsCoordinateBounds:(struct MGLCoordinateBounds)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (id)cameraThatFitsShape:(id)arg1 direction:(double)arg2 edgePadding:(struct UIEdgeInsets)arg3;
- (void)cameraWillChangeAnimated:(_Bool)arg1;
- (_Bool)canBecomeFirstResponder;
@property(nonatomic) struct CLLocationCoordinate2D centerCoordinate;
- (void)commonInit;
@property(retain, nonatomic) UIImageView *compassView; // @synthesize compassView=_compassView;
@property(retain, nonatomic) NSMutableArray *compassViewConstraints; // @synthesize compassViewConstraints=_compassViewConstraints;
- (struct CGPoint)contentCenter;
- (struct CGRect)contentFrame;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(retain, nonatomic) EAGLContext *context; // @synthesize context=_context;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 withMatrix:(void *)arg2 toPointToView:(id)arg3;
- (struct CGRect)convertCoordinateBounds:(struct MGLCoordinateBounds)arg1 toRectToView:(id)arg2;
- (struct CGPoint)convertLatLng:(struct LatLng)arg1 toPointToView:(id)arg2;
- (struct CGRect)convertLatLngBounds:(struct LatLngBounds)arg1 toRectToView:(id)arg2;
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct LatLng)convertPoint:(struct CGPoint)arg1 toLatLngFromView:(id)arg2;
- (struct MGLCoordinateBounds)convertRect:(struct CGRect)arg1 toCoordinateBoundsFromView:(id)arg2;
- (struct LatLngBounds)convertRect:(struct CGRect)arg1 toLatLngBoundsFromView:(id)arg2;
- (struct MGLCoordinateBounds)coordinateBoundsFromGeoCoordinates:(id)arg1 withTopPadding:(double)arg2 bottomPadding:(double)arg3 leftPadding:(double)arg4 rightPadding:(double)arg5;
- (struct MGLCoordinateBounds)coordinateBoundsFromMapViewBounds:(struct CGRect)arg1;
- (void)createGLView;
- (double)currentMinimumZoom;
- (void)dealloc;
@property(nonatomic) unsigned long long debugMask;
@property(nonatomic) double decelerationRate; // @synthesize decelerationRate=_decelerationRate;
- (id)defaultAnnotationImage;
@property(nonatomic) __weak id <MGLMapViewDelegate> delegate; // @synthesize delegate=_delegate;
- (id)dequeueReusableAnnotationImageWithIdentifier:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)didFinishLoadingStyle;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)didReceiveMemoryWarning;
- (void)didUpdateLocationIncrementallyAnimated:(_Bool)arg1;
- (void)didUpdateLocationSignificantlyAnimated:(_Bool)arg1;
- (void)didUpdateLocationWithTargetAnimated:(_Bool)arg1;
- (void)didUpdateLocationWithUserTrackingAnimated:(_Bool)arg1;
@property(nonatomic) double direction;
- (double)directionByFollowingWithCourse;
@property(nonatomic) _Bool displayHeadingCalibration; // @synthesize displayHeadingCalibration=_displayHeadingCalibration;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTap; // @synthesize doubleTap=_doubleTap;
- (struct UIEdgeInsets)edgePaddingForFollowing;
- (struct UIEdgeInsets)edgePaddingForFollowingWithCourse;
- (void)emptyMemoryCache;
- (void)enqueueAnnotationViewForAnnotationContext:(struct MGLAnnotationContext *)arg1;
- (struct Color)fillColorForPolygonAnnotation:(id)arg1;
- (void)flyToCamera:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)flyToCamera:(id)arg1 withDuration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)flyToCamera:(id)arg1 withDuration:(double)arg2 peakAltitude:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)forceDisplayCustomStyleLayers;
- (struct CGRect)frameOfImage:(id)arg1 centeredAtCoordinate:(struct CLLocationCoordinate2D)arg2;
- (struct Size)framebufferSize;
- (void)freeMatrixForConvertCoordinate:(void *)arg1;
- (id)gestureMappings;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
@property(retain, nonatomic) GLKView *glView; // @synthesize glView=_glView;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)handleCalloutAccessoryTapGesture:(id)arg1;
- (void)handleCompassTapGesture:(id)arg1;
- (void)handleDoubleTapGesture:(id)arg1;
- (void)handlePanGesture:(id)arg1;
- (void)handlePinchGesture:(id)arg1;
- (void)handleQuickZoomGesture:(id)arg1;
- (void)handleRotateGesture:(id)arg1;
- (void)handleSingleTapGesture:(id)arg1;
- (void)handleTwoFingerDragGesture:(id)arg1;
- (void)handleTwoFingerTapGesture:(id)arg1;
- (_Bool)hasStyleClass:(id)arg1;
- (id)imageOfAnnotationWithTag:(unsigned int)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleURL:(id)arg2;
- (void)installAnnotationImage:(id)arg1;
- (id)invisibleAnnotationImage;
@property(nonatomic, getter=isDebugActive) _Bool debugActive;
@property(nonatomic, getter=isDormant) _Bool dormant; // @synthesize dormant=_dormant;
- (_Bool)isFullyLoaded;
- (_Bool)isOpaque;
@property(nonatomic, getter=isPitchEnabled) _Bool pitchEnabled; // @synthesize pitchEnabled=_pitchEnabled;
@property(nonatomic, getter=isRotateEnabled) _Bool rotateEnabled; // @synthesize rotateEnabled=_rotateEnabled;
@property(readonly, nonatomic, getter=isRotationAllowed) _Bool rotationAllowed;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
- (_Bool)isSuppressingChangeDelimiters;
@property(readonly, nonatomic, getter=isUserLocationVisible) _Bool userLocationVisible;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled; // @synthesize zoomEnabled=_zoomEnabled;
- (void)layoutSubviews;
- (double)lineWidthForPolylineAnnotation:(id)arg1;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 animated:(_Bool)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(id)arg1;
@property(retain, nonatomic) UIImageView *logoView; // @synthesize logoView=_logoView;
@property(retain, nonatomic) NSMutableArray *logoViewConstraints; // @synthesize logoViewConstraints=_logoViewConstraints;
- (struct CGRect)mapViewBoundsForGeofence:(struct CGRect)arg1 andScreenShotSize:(struct CGSize)arg2;
- (void)mapViewDidFailLoadingMapWithError:(id)arg1;
- (void)mapViewDidFinishLoadingMap;
- (void)mapViewDidFinishRenderingFrameFullyRendered:(_Bool)arg1;
- (void)mapViewDidFinishRenderingMapFullyRendered:(_Bool)arg1;
- (void)mapViewWillStartLoadingMap;
- (void)mapViewWillStartRenderingFrame;
- (void)mapViewWillStartRenderingMap;
- (void *)matrixForConvertCoordinate;
@property(nonatomic) double maximumZoomLevel;
- (struct Map *)mbglMap;
- (double)metersPerPixelAtLatitude:(double)arg1;
- (double)metersPerPointAtLatitude:(double)arg1;
@property(readonly, nonatomic) UITapGestureRecognizer *mgl_doubleTapGestureRecognizer;
@property(readonly, nonatomic) UIPanGestureRecognizer *mgl_panGestureRecognizer;
@property(readonly, nonatomic) UIPinchGestureRecognizer *mgl_pinchGestureRecognizer;
@property(readonly, nonatomic) UILongPressGestureRecognizer *mgl_quickZoomGestureRecognizer;
@property(readonly, nonatomic) UIRotationGestureRecognizer *mgl_rotationGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *mgl_singleTapGestureRecognizer;
@property(readonly, nonatomic) UIPanGestureRecognizer *mgl_twoFingerPanGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *mgl_twoFingerTapGestureRecognizer;
@property(nonatomic) double minimumZoomLevel;
- (void)notifyGestureDidBegin;
- (void)notifyGestureDidEndWithDrift:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) NSArray *overlays;
@property(retain, nonatomic) UIPanGestureRecognizer *pan; // @synthesize pan=_pan;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinch; // @synthesize pinch=_pinch;
- (struct CGRect)positioningRectForAnnotation:(id)arg1 defaultCalloutPoint:(struct CGPoint)arg2;
- (struct CGRect)positioningRectForCalloutForAnnotationWithTag:(unsigned int)arg1;
@property(retain, nonatomic) UILongPressGestureRecognizer *quickZoom; // @synthesize quickZoom=_quickZoom;
@property(nonatomic) double quickZoomStart; // @synthesize quickZoomStart=_quickZoomStart;
- (void)reachabilityChanged:(id)arg1;
- (void)reloadStyle:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)removeAnnotations:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)removeOverlays:(id)arg1;
- (void)removeStyleClass:(id)arg1;
- (struct Renderer *)renderer;
- (void)resetNorth;
- (void)resetNorthAnimated:(_Bool)arg1;
- (void)resetPosition;
@property(retain, nonatomic) UIRotationGestureRecognizer *rotate; // @synthesize rotate=_rotate;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, nonatomic) UIView *scaleBar; // @synthesize scaleBar=_scaleBar;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2 calloutPositioningRect:(struct CGRect)arg3;
- (id)selectedAnnotation;
@property(copy, nonatomic) NSArray *selectedAnnotations;
- (void)setCamera:(id)arg1 animated:(_Bool)arg2;
- (void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3;
- (void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3 edgePadding:(struct UIEdgeInsets)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 direction:(double)arg3 animated:(_Bool)arg4;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 direction:(double)arg3 animated:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)setContentInset:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2;
- (void)setCustomStyleLayersNeedDisplay;
- (void)setDirection:(double)arg1 animated:(_Bool)arg2;
- (void)setGestureMappings:(id)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)setNeedsGLDisplay;
- (void)setOpaque:(_Bool)arg1;
- (void)setSelectedAnnotation:(id)arg1;
@property(nonatomic) _Bool showsUserHeadingIndicator; // @synthesize showsUserHeadingIndicator=_showsUserHeadingIndicator;
@property(nonatomic) _Bool showsUserLocation; // @synthesize showsUserLocation=_showsUserLocation;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer; // @synthesize singleTapGestureRecognizer=_singleTapGestureRecognizer;
@property(retain, nonatomic) MGLStyle *style; // @synthesize style=_style;
@property(retain, nonatomic) NSArray *styleClasses;
- (void)setStyleClasses:(id)arg1 transitionDuration:(double)arg2;
- (void)setStyleID:(id)arg1;
@property(retain, nonatomic) NSURL *styleURL;
@property(nonatomic) struct CLLocationCoordinate2D targetCoordinate; // @synthesize targetCoordinate=_targetCoordinate;
- (void)setTargetCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIPanGestureRecognizer *twoFingerDrag; // @synthesize twoFingerDrag=_twoFingerDrag;
@property(retain, nonatomic) UITapGestureRecognizer *twoFingerTap; // @synthesize twoFingerTap=_twoFingerTap;
@property(retain, nonatomic) MGLUserLocation *userLocation; // @synthesize userLocation=_userLocation;
@property(retain, nonatomic) MGLUserLocationAnnotationView *userLocationAnnotationView; // @synthesize userLocationAnnotationView=_userLocationAnnotationView;
@property(nonatomic) unsigned long long userLocationVerticalAlignment; // @synthesize userLocationVerticalAlignment=_userLocationVerticalAlignment;
- (void)setUserLocationVerticalAlignment:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long userTrackingMode; // @synthesize userTrackingMode=_userTrackingMode;
- (void)setUserTrackingMode:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long userTrackingState; // @synthesize userTrackingState=_userTrackingState;
@property(nonatomic) struct MGLCoordinateBounds visibleCoordinateBounds;
- (void)setVisibleCoordinateBounds:(struct MGLCoordinateBounds)arg1 animated:(_Bool)arg2;
- (void)setVisibleCoordinateBounds:(struct MGLCoordinateBounds)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3;
- (void)setVisibleCoordinateBounds:(struct MGLCoordinateBounds)arg1 edgePadding:(struct UIEdgeInsets)arg2 direction:(double)arg3 animated:(_Bool)arg4;
- (void)setVisibleCoordinates:(const struct CLLocationCoordinate2D *)arg1 count:(unsigned long long)arg2 edgePadding:(struct UIEdgeInsets)arg3 animated:(_Bool)arg4;
- (void)setVisibleCoordinates:(const struct CLLocationCoordinate2D *)arg1 count:(unsigned long long)arg2 edgePadding:(struct UIEdgeInsets)arg3 direction:(double)arg4 animated:(_Bool)arg5;
- (void)setVisibleCoordinates:(const struct CLLocationCoordinate2D *)arg1 count:(unsigned long long)arg2 edgePadding:(struct UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6;
- (void)setVisibleCoordinates:(const struct CLLocationCoordinate2D *)arg1 count:(unsigned long long)arg2 edgePadding:(struct UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
@property(nonatomic) double zoomLevel;
- (void)setZoomLevel:(double)arg1 animated:(_Bool)arg2;
- (void)setZoomLevel:(double)arg1 center:(struct CGPoint)arg2;
- (void)setZoomLevel:(double)arg1 coordinate:(struct CLLocationCoordinate2D)arg2;
- (vector_12da65de)shapeAnnotationTagsInRect:(struct CGRect)arg1;
- (void)showAnnotations:(id)arg1 animated:(_Bool)arg2;
- (void)showAnnotations:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3;
- (struct Size)size;
- (void)sleepGL:(id)arg1;
- (id)snapshot;
- (struct Color)strokeColorForShapeAnnotation:(id)arg1;
- (id)styleID;
- (void)tintColorDidChange;
- (void)toggleDebug;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)trackGestureEvent:(id)arg1 forRecognizer:(id)arg2;
- (id)translateCanvasGeocoordinatesToPoints:(id)arg1;
- (id)translateCanvasPointsToGeoCoordinates:(id)arg1;
- (void)unrotateIfNeededAnimated:(_Bool)arg1;
- (void)unrotateIfNeededForGesture;
- (void)updateAnnotationContainerViewWithAnnotationViews:(id)arg1;
- (void)updateAnnotationViews;
- (void)updateCalloutView;
- (void)updateCompass;
- (void)updateFromDisplayLink;
- (void)updateHeadingForDeviceOrientation;
- (void)updateTintColorForView:(id)arg1;
- (void)updateUserLocationAnnotationView;
- (void)updateUserLocationAnnotationViewAnimatedWithDuration:(double)arg1;
- (struct CGPoint)userLocationAnnotationViewCenter;
- (void)validateDisplayLink;
- (void)validateLocationServices;
- (void)validateUserHeadingUpdating;
- (id)viewForAnnotation:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleAnnotations;
- (id)visibleAnnotationsInRect:(struct CGRect)arg1;
- (id)visibleFeaturesAtPoint:(struct CGPoint)arg1;
- (id)visibleFeaturesAtPoint:(struct CGPoint)arg1 inStyleLayersWithIdentifiers:(id)arg2;
- (id)visibleFeaturesAtPoint:(struct CGPoint)arg1 inStyleLayersWithIdentifiers:(id)arg2 predicate:(id)arg3;
- (id)visibleFeaturesInRect:(struct CGRect)arg1;
- (id)visibleFeaturesInRect:(struct CGRect)arg1 inStyleLayersWithIdentifiers:(id)arg2;
- (id)visibleFeaturesInRect:(struct CGRect)arg1 inStyleLayersWithIdentifiers:(id)arg2 predicate:(id)arg3;
- (void)wakeGL:(id)arg1;
- (void)willTerminate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

