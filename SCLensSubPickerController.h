//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCLensSubPickerControllerProtocol-Protocol.h"
#import "SCLensSubPickerImageProviderDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class NSString, SCLensSubPickerView, UICollectionView, UIView;
@protocol SCLensOptionLogger, SCLensSubPickerImageProviderProtocol;

@interface SCLensSubPickerController : NSObject <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, SCLensSubPickerImageProviderDelegate, SCLensSubPickerControllerProtocol>
{
    long long _numberOfItemsWhenLastLaidOut;
    _Bool _displayingLoadingCellWhenLastLaidOut;
    NSString *_optionIdToRestore;
    long long _lastInnerSelectedIndex;
    _Bool _displayLoadingCell;
    unsigned long long _imageCount;
    struct UIEdgeInsets _additionalMargins;
    id <SCLensOptionLogger> _lensLogger;
    id <SCLensSubPickerImageProviderProtocol> _imageProvider;
    UIView *_parentView;
    UIView *_lensContainer;
    long long _selectedOptionIndex;
    NSString *_selectedOptionId;
    SCLensSubPickerView *_subPickerView;
}

- (void).cxx_destruct;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)hideAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideNoImagesWarning;
@property(readonly, nonatomic) UICollectionView *imageCollectionView;
@property(retain, nonatomic) id <SCLensSubPickerImageProviderProtocol> imageProvider; // @synthesize imageProvider=_imageProvider;
- (id)initWithParentView:(id)arg1 lensContainer:(id)arg2 lensLogger:(id)arg3 imageProvider:(id)arg4;
- (id)initWithParentView:(id)arg1 lensContainer:(id)arg2 lensLogger:(id)arg3 imageProvider:(id)arg4 additionalMargins:(struct UIEdgeInsets)arg5;
- (void)innerSelectOptionAtIndex:(long long)arg1 cellToSelect:(id)arg2;
- (void)layoutCollectionViewIfNeededWithAnimation:(_Bool)arg1;
@property(nonatomic) __weak UIView *lensContainer; // @synthesize lensContainer=_lensContainer;
@property(readonly, nonatomic) id <SCLensOptionLogger> lensLogger; // @synthesize lensLogger=_lensLogger;
- (void)lensSubPickerImageProvider:(id)arg1 didUpdateWithImageCount:(long long)arg2 canProcessMore:(_Bool)arg3;
- (void)loadNextBatch;
- (void)loadNextBatchIfNeeded;
@property(nonatomic) __weak UIView *parentView; // @synthesize parentView=_parentView;
@property(readonly, nonatomic) UIView *pickerContentView;
- (_Bool)pointInside:(struct CGPoint)arg1 view:(id)arg2;
- (void)restoreOptionSelectionIfNeededWithCanProcessMoreFlag:(_Bool)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)selectOptionAtIndex:(long long)arg1;
@property(retain, nonatomic) NSString *selectedOptionId; // @synthesize selectedOptionId=_selectedOptionId;
@property(nonatomic) long long selectedOptionIndex; // @synthesize selectedOptionIndex=_selectedOptionIndex;
- (void)setOptionIdToRestore:(id)arg1;
- (void)setUpViews;
- (void)showAnimated:(_Bool)arg1;
- (void)showAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showNoImagesWarningIfNeeded;
@property(readonly, nonatomic) SCLensSubPickerView *subPickerView; // @synthesize subPickerView=_subPickerView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

