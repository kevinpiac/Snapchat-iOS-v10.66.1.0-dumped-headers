//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCGalleryPrivateGalleryManagerListener-Protocol.h"
#import "SCGalleryPrivateTabLockedTopSecretStateControllerDelegate-Protocol.h"
#import "SCGalleryTabController-Protocol.h"

@class NSString, SCGalleryPrivateTabLockedNormalStateController, SCGalleryPrivateTabLockedTopSecretStateController, SCGalleryTabsConfiguration, SCUserSession, UIView, UIViewController;
@protocol SCGalleryTabControllerDelegate;

@interface SCGalleryPrivateLockedTabController : NSObject <SCGalleryPrivateGalleryManagerListener, SCGalleryPrivateTabLockedTopSecretStateControllerDelegate, SCGalleryTabController>
{
    SCUserSession *_userSession;
    UIViewController *_containerViewController;
    SCGalleryTabsConfiguration *_configuration;
    UIView *_view;
    double _lastNotifiedScrollContentOffset;
    unsigned long long _state;
    SCGalleryPrivateTabLockedNormalStateController *_normalStateController;
    SCGalleryPrivateTabLockedTopSecretStateController *_topSecretStateController;
    _Bool _visible;
    _Bool _focused;
    _Bool _focusedAdjacentTab;
    _Bool _loading;
    _Bool _selectMode;
    id <SCGalleryTabControllerDelegate> _delegate;
    unsigned long long _tabType;
    struct UIEdgeInsets _scrollContentInset;
}

- (void).cxx_destruct;
- (unsigned long long)_currentState;
- (void)_forceRefreshLatestState;
- (void)_notifyScrollContentOffsetChange;
- (void)_refreshLatestState;
- (id)_stateViewForState:(unsigned long long)arg1;
- (void)_updateWithScrollContentInset;
- (id)allItems;
- (unsigned long long)allItemsCount;
- (void)changeSelected:(_Bool)arg1 forGalleryItem:(id)arg2;
- (id)collectionView;
- (unsigned long long)currentMediaScenePathComponent;
- (void)dealloc;
@property(nonatomic) __weak id <SCGalleryTabControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)endEditing;
@property(nonatomic) _Bool focused; // @synthesize focused=_focused;
@property(nonatomic) _Bool focusedAdjacentTab; // @synthesize focusedAdjacentTab=_focusedAdjacentTab;
- (void)galleryViewDidDisappear;
- (void)galleryViewWillAppear;
- (id)indexPathForItem:(id)arg1 isFeatured:(_Bool)arg2;
- (id)initWithUserSession:(id)arg1 containerViewController:(id)arg2 configuration:(id)arg3 delegate:(id)arg4 tabType:(unsigned long long)arg5;
- (_Bool)isDragging;
- (_Bool)isEditing;
- (_Bool)isPrivate;
- (_Bool)isTracking;
- (_Bool)isViewLoaded;
- (id)itemsInRect:(struct CGRect)arg1;
- (void)loadViewIfNeeded;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
- (void)lockedTopSecretStateControllerDidBeginEditing:(id)arg1;
- (void)lockedTopSecretStateControllerDidEndEditing:(id)arg1;
- (void)operaPresenterDidDismiss:(id)arg1 item:(id)arg2;
- (id)pageName;
- (_Bool)prefersAllItemsAreNotIterated;
- (void)privateGalleryManagerDidLock:(id)arg1;
- (void)privateGalleryManagerDidSetup:(id)arg1;
- (void)privateGalleryManagerDidUnlock:(id)arg1;
- (void)privateGalleryManagerDidUpdatePassphrase:(id)arg1;
- (double)scrollBarTopOffset;
@property(readonly, nonatomic) double scrollContentDistanceToTop;
@property(nonatomic) struct UIEdgeInsets scrollContentInset; // @synthesize scrollContentInset=_scrollContentInset;
@property(nonatomic) double scrollContentOffset;
- (void)scrollToGalleryItem:(id)arg1 animated:(_Bool)arg2;
@property(nonatomic) _Bool selectMode; // @synthesize selectMode=_selectMode;
- (id)selectedGalleryItems;
- (void)setScrollContentOffset:(double)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
- (_Bool)shouldAlignInitialScrollContentDistanceToTopOfOtherTabControllerToThisTabController;
- (_Bool)shouldAlignInitialScrollContentDistanceToTopOfThisTabControllerToOtherTabController;
- (_Bool)shouldDisplay;
@property(readonly, nonatomic) unsigned long long tabType; // @synthesize tabType=_tabType;
- (id)view;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

