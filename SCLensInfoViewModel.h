//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "LSAEffectComponentListener-Protocol.h"
#import "SCLensFrameRateCounterListener-Protocol.h"
#import "SCLensInfoViewModelProtocol-Protocol.h"
#import "SCLensUIUpdateListener-Protocol.h"
#import "SCStudioLensLoggerListener-Protocol.h"

@class LSAEffectComponent, NSArray, NSDate, NSString, SCGCDTimer, SCLens, SCLensThrottledActionPerformer, SCPreferences;

@interface SCLensInfoViewModel : NSObject <SCStudioLensLoggerListener, SCLensInfoViewModelProtocol, LSAEffectComponentListener, SCLensUIUpdateListener, SCLensFrameRateCounterListener>
{
    _Bool _qaMode;
    float _fps;
    long long _usedRam;
    long long _archiveSize;
    NSDate *_pushedDate;
    NSArray *_logs;
    NSString *_qaData;
    SCLens *_currentLens;
    SCPreferences *_userPreferences;
    SCPreferences *_lensPreferences;
    SCGCDTimer *_updateScenariumMemoryUsageTimer;
    LSAEffectComponent *_effectComponent;
    double _previousLensTotalMemoryUsage;
    double _currentLensMemoryUsage;
    SCLensThrottledActionPerformer *_throttler;
}

- (void).cxx_destruct;
@property(nonatomic) long long archiveSize; // @synthesize archiveSize=_archiveSize;
@property(retain, nonatomic) SCLens *currentLens; // @synthesize currentLens=_currentLens;
@property(nonatomic) double currentLensMemoryUsage; // @synthesize currentLensMemoryUsage=_currentLensMemoryUsage;
- (void)didEndDisplayingLens:(id)arg1;
- (void)didHideLenses;
- (void)didSelectLens:(id)arg1;
- (void)didUpdateActiveLensOrder:(id)arg1;
@property(retain, nonatomic) LSAEffectComponent *effectComponent; // @synthesize effectComponent=_effectComponent;
- (void)effectComponent:(id)arg1 didInstantiatedEffectWithId:(id)arg2 isFromCache:(_Bool)arg3;
- (void)effectComponent:(id)arg1 didTurnOffEffectWithId:(id)arg2 features:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 didTurnOnEffectWithId:(id)arg2 features:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 performHapticFeedback:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 performInterfaceAction:(unsigned long long)arg3 interfaceElement:(unsigned long long)arg4 interfaceData:(id)arg5;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 savePersistentStore:(id)arg3;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 showHintWithId:(id)arg3;
- (void)effectComponent:(id)arg1 effectId:(id)arg2 showPopUpHintWithId:(id)arg3 interfaceElement:(unsigned long long)arg4;
- (void)effectComponent:(id)arg1 hideAllHintsForEffectWithId:(id)arg2;
- (void)effectComponent:(id)arg1 loadPersistentStoreForEffectWithId:(id)arg2;
- (void)effectComponent:(id)arg1 willTurnOffEffectWithId:(id)arg2 features:(unsigned long long)arg3;
- (void)effectComponent:(id)arg1 willTurnOnEffectWithId:(id)arg2;
@property(nonatomic) float fps; // @synthesize fps=_fps;
- (void)frameRateCounter:(id)arg1 didUpdateLensFrameProcessingInfo:(CDStruct_488ba8aa)arg2;
- (id)initWithUserPreferences:(id)arg1 lensPreferences:(id)arg2 effectComponent:(id)arg3 studioLensLogger:(id)arg4;
@property(retain, nonatomic) SCPreferences *lensPreferences; // @synthesize lensPreferences=_lensPreferences;
@property(retain, nonatomic) NSArray *logs; // @synthesize logs=_logs;
- (void)performThrottledActionForSelector:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2;
@property(nonatomic) double previousLensTotalMemoryUsage; // @synthesize previousLensTotalMemoryUsage=_previousLensTotalMemoryUsage;
@property(retain, nonatomic) NSDate *pushedDate; // @synthesize pushedDate=_pushedDate;
@property(copy, nonatomic) NSString *qaData; // @synthesize qaData=_qaData;
@property(nonatomic) _Bool qaMode; // @synthesize qaMode=_qaMode;
@property(retain, nonatomic) SCLensThrottledActionPerformer *throttler; // @synthesize throttler=_throttler;
@property(retain, nonatomic) SCGCDTimer *updateScenariumMemoryUsageTimer; // @synthesize updateScenariumMemoryUsageTimer=_updateScenariumMemoryUsageTimer;
@property(nonatomic) long long usedRam; // @synthesize usedRam=_usedRam;
@property(retain, nonatomic) SCPreferences *userPreferences; // @synthesize userPreferences=_userPreferences;
- (void)studioLensLogger:(id)arg1 didUpdateLogs:(id)arg2;
- (void)subscribeForStudioLensLogUpdatesWithLogger:(id)arg1;
- (void)updateMemoryUsage;
- (void)updateScenariumLensMemoryUsage;
- (void)willDisplayLens:(id)arg1;
- (void)willShowLenses;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

