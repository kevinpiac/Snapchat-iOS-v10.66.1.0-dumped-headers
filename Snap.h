//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "EphemeralMedia.h"

#import "MediaDataSource-Protocol.h"
#import "MediaDelegate-Protocol.h"
#import "MediaImageProcessingDelegate-Protocol.h"
#import "MediaUploadDelegate-Protocol.h"
#import "NSCoding-Protocol.h"
#import "SCChatMessage-Protocol.h"
#import "SnapVideoFilterDelegate-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSNumber, NSString, SCSnapVideoFilterState, SOJUSecurityFideliusFriendsKeysResponse;

@interface Snap : EphemeralMedia <SnapVideoFilterDelegate, MediaDataSource, MediaDelegate, MediaUploadDelegate, MediaImageProcessingDelegate, NSCoding, SCChatMessage>
{
    _Bool _isGroupSnap;
    _Bool _shouldRetryMediaSendTask;
    _Bool _fideliusIsRetried;
    NSString *_correspondentId;
    NSArray *_usernameRecipients;
    SCSnapVideoFilterState *_snapVideoFilterState;
    NSNumber *_savedSnapStateNumber;
    long long _state;
    NSString *_key;
    NSString *_iv;
    NSDate *_timestamp;
    NSDate *_sentTimestamp;
    NSString *_recipient;
    NSString *_sender;
    NSString *_mediaSendTaskId;
    long long _rewrapCount;
    double _rewrapStartTime;
    SOJUSecurityFideliusFriendsKeysResponse *_rewrapFriendKeys;
    long long _fideliusVersion;
    NSString *_senderOutBeta;
    NSDictionary *_fideliusInfo;
    NSString *_fideliusSnapKey;
    NSString *_fideliusSnapIv;
    NSString *_fideliusUnwrappedKey;
    long long _fideliusFailureCounter;
}

+ (id)_targetSnapFromEphemeralMedia:(id)arg1;
+ (unsigned long long *)fasterCodingKeys;
+ (unsigned long long)fasterCodingVersion;
+ (id)snapFromEphemeralMedia:(id)arg1;
- (void).cxx_destruct;
- (void)_addBannerVideoToFrontOfVideo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_addMetadataToImage:(id)arg1 isVideo:(_Bool)arg2;
- (id)_addOffsetToImageData:(id)arg1;
- (id)_addUsernameBanner:(id)arg1;
- (id)_allRecipientUsernames;
- (id)_cleanId;
- (void)_compositeVideos:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_createFirstFrameImageVideo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_delimitedRecipientUsernamesWithDelimiter:(id)arg1;
- (void)_doSend;
- (id)_failedMediaDatastore;
- (id)_fideliusUnwrapInput;
- (id)_fideliusWrapInput;
- (id)_generateOutputMovieURL;
- (_Bool)_hasFailed;
- (_Bool)_isSending;
- (id)_keyForMedia:(id)arg1;
- (void)_loadPersistedFailedSnapData;
- (id)_messageRecipient;
- (void)_optionallyEncryptContextHint;
- (void)_optionallyEncryptLensMetadata;
- (void)_preSend;
- (void)_removePersistedFailedSnapData;
- (void)_retrySendingSnap;
- (id)_secretSentSnapParameters;
- (void)_sendSnap;
- (id)_sentSnapParametersWithResponse:(id)arg1;
- (_Bool)_shouldClientDecrypt;
- (_Bool)_shouldEndToEndEncrypt;
- (void)_snapDidDecodeObject;
- (id)_snapType;
- (void)_snapWillEncodeObject;
- (void)_updateStateFromEphemeralMedia:(id)arg1;
- (void)_uploadAndSend;
- (void)_uploadSnap;
- (id)_uploadSuccessUserDefaultsKey;
- (_Bool)canDelete;
- (id)clearedDictionary;
- (id)consistentId;
- (id)conversationId;
@property(retain, nonatomic) NSString *correspondentId; // @synthesize correspondentId=_correspondentId;
- (void)decodeWithFasterDecoder:(id)arg1;
- (id)decryptData:(id)arg1 forMedia:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)didDecodeObject;
- (void)encodeWithCoder:(id)arg1;
- (void)encodeWithFasterCoder:(id)arg1;
- (_Bool)encrypt;
- (id)encryptedMediaDataToUpload:(id)arg1;
- (id)encryptionDictionaryForMedia:(id)arg1;
- (id)endpointForMedia:(id)arg1;
- (_Bool)failedToSend;
@property(nonatomic) long long fideliusFailureCounter; // @synthesize fideliusFailureCounter=_fideliusFailureCounter;
@property(retain, nonatomic) NSDictionary *fideliusInfo; // @synthesize fideliusInfo=_fideliusInfo;
@property(nonatomic) _Bool fideliusIsRetried; // @synthesize fideliusIsRetried=_fideliusIsRetried;
@property(retain, nonatomic) NSString *fideliusSnapIv; // @synthesize fideliusSnapIv=_fideliusSnapIv;
@property(retain, nonatomic) NSString *fideliusSnapKey; // @synthesize fideliusSnapKey=_fideliusSnapKey;
@property(retain, nonatomic) NSString *fideliusUnwrappedKey; // @synthesize fideliusUnwrappedKey=_fideliusUnwrappedKey;
@property(nonatomic) long long fideliusVersion; // @synthesize fideliusVersion=_fideliusVersion;
- (void)imageProcessingDidSucceedForMedia:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isForwardable;
@property(nonatomic) _Bool isGroupSnap; // @synthesize isGroupSnap=_isGroupSnap;
- (_Bool)isImage;
- (_Bool)isInvalidAfterUnarchiving;
- (_Bool)isPsychomantis;
- (_Bool)isReleased;
- (_Bool)isReleasedBy:(id)arg1;
- (_Bool)isSaved;
- (_Bool)isSavedByParticipant:(id)arg1;
- (_Bool)isSendingOrHasFailed;
- (_Bool)isSent;
- (_Bool)isSpectaclesVideo;
- (_Bool)isUnreadByRecipients;
- (_Bool)isVideo;
- (_Bool)isVideoStreaming;
- (_Bool)isVideoWithSound;
@property(retain, nonatomic) NSString *iv; // @synthesize iv=_iv;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (id)mediaIdForMedia:(id)arg1;
@property(copy, nonatomic) NSString *mediaSendTaskId; // @synthesize mediaSendTaskId=_mediaSendTaskId;
- (void)mediaUploadDidFailForMedia:(id)arg1;
- (void)mediaUploadDidSucceedForMedia:(id)arg1;
- (id)messageSender;
- (id)messageTimestamp;
- (id)messageTimestampForOrdering;
- (long long)messageType;
- (_Bool)needsAuthToFetch;
- (_Bool)persist;
- (void)postFailToSendNotification;
- (void)postSend;
- (_Bool)preferFasterCoding;
@property(retain, nonatomic) NSString *recipient; // @synthesize recipient=_recipient;
- (id)recipientUsernames;
- (id)requestContexts;
- (long long)requestFallbackPriority;
- (long long)requestPriorityUserInitiated:(_Bool)arg1;
@property(nonatomic) long long rewrapCount; // @synthesize rewrapCount=_rewrapCount;
@property(retain, nonatomic) SOJUSecurityFideliusFriendsKeysResponse *rewrapFriendKeys; // @synthesize rewrapFriendKeys=_rewrapFriendKeys;
@property(nonatomic) double rewrapStartTime; // @synthesize rewrapStartTime=_rewrapStartTime;
@property(copy, nonatomic) NSNumber *savedSnapStateNumber; // @synthesize savedSnapStateNumber=_savedSnapStateNumber;
- (void)sendWithPreSend:(_Bool)arg1 postSend:(_Bool)arg2;
@property(retain, nonatomic) NSString *sender; // @synthesize sender=_sender;
@property(retain, nonatomic) NSString *senderOutBeta; // @synthesize senderOutBeta=_senderOutBeta;
- (_Bool)sending;
@property(retain, nonatomic) NSDate *sentTimestamp; // @synthesize sentTimestamp=_sentTimestamp;
- (id)sequenceNumber;
- (void)setBool:(_Bool)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setObject:(id)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setSInt64:(long long)arg1 forUInt64Key:(unsigned long long)arg2;
@property(nonatomic) _Bool shouldRetryMediaSendTask; // @synthesize shouldRetryMediaSendTask=_shouldRetryMediaSendTask;
@property(copy, nonatomic) SCSnapVideoFilterState *snapVideoFilterState; // @synthesize snapVideoFilterState=_snapVideoFilterState;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSArray *usernameRecipients; // @synthesize usernameRecipients=_usernameRecipients;
- (_Bool)shouldDisplayBelowFoldInChat;
- (_Bool)shouldPostFailToSendNotification;
- (unsigned long long)trackingExpirationInDaysForMedia:(id)arg1;
- (id)trackingIdForMedia:(id)arg1;
- (id)trackingMediaTypeForMedia:(id)arg1;
- (id)trackingTypeForMedia:(id)arg1;
- (CDUnknownBlockType)uploadFailureBlock;
- (id)uploadMediaIdForMedia:(id)arg1;
- (long long)uploadMediaTypeForMedia:(id)arg1;
- (id)uploadParametersWithData:(_Bool)arg1 unencryptedData:(id)arg2;
- (CDUnknownBlockType)uploadSuccessBlock;
- (id)username;
- (void)videoProcessingDidFailForSnapVideoFilter:(id)arg1 error:(id)arg2;
- (void)videoProcessingDidSucceedForSnapVideoFilter:(id)arg1 data:(id)arg2;
- (void)willEncodeObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

