//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSDate.h>

@interface NSDate (Helpers)
+ (id)_ISO8601DateFormatter;
+ (id)_ISO8601DateFormatterLocalTimezone;
+ (id)calendar;
+ (id)componentsInUtc:(id)arg1;
+ (long long)currentTimeMillis;
+ (id)dateByAddingYearsFromToday:(long long)arg1;
+ (id)dateFromISO8601String:(id)arg1;
+ (id)dateFromOneYearAgo;
+ (id)dateFromServerTimestamp:(id)arg1;
+ (id)dateFromTimeInMillis:(long long)arg1;
+ (id)dateFromTodayWithOffsetDays:(long long)arg1 offsetMonth:(long long)arg2 offsetYear:(long long)arg3;
+ (id)dateOneDayFromToday;
+ (id)dateWithComponents:(id)arg1;
+ (id)dateWithMonth:(long long)arg1 day:(long long)arg2 andYear:(long long)arg3;
+ (id)dateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6;
+ (id)dateWithoutTime:(id)arg1;
+ (long long)daysSinceTimestamp:(id)arg1;
+ (_Bool)isDate:(id)arg1 afterDate:(id)arg2;
+ (_Bool)isDate:(id)arg1 beforeDate:(id)arg2;
+ (_Bool)isDate:(id)arg1 onSameDayOfTheYearAsDate:(id)arg2;
+ (_Bool)isDate:(id)arg1 sameDayAsDate:(id)arg2;
+ (_Bool)isDate:(id)arg1 withinSameMinuteAsDate:(id)arg2;
+ (_Bool)isTimestampExpired:(id)arg1 timeInterval:(double)arg2;
+ (_Bool)isTodayTheSameDayOfTheYearAsDate:(id)arg1;
+ (id)maxDateBetweenDates:(id)arg1 date2:(id)arg2;
+ (long long)minutesSinceTimestamp:(id)arg1 forWaitPeriod:(double)arg2;
+ (id)nextDateMatchingHour:(long long)arg1 minute:(long long)arg2 second:(long long)arg3;
+ (unsigned long long)numOfDaysInMonth:(long long)arg1 inYear:(long long)arg2;
+ (double)percentTimeLeftSinceTimestamp:(id)arg1 expirationInHours:(long long)arg2;
+ (id)serverTimestampFromDate:(id)arg1;
+ (id)shortStringFromDate:(id)arg1;
+ (id)stringFromDate:(id)arg1;
+ (long long)timeInMillisFromDate:(id)arg1;
+ (id)utcDateWithoutTime:(id)arg1;
- (id)ISO8601String;
- (id)ISO8601StringLocalTimezone;
- (long long)ageFromBirthday;
- (id)capDays;
@property(readonly, nonatomic) long long epochMillis;
- (_Bool)isAfter:(id)arg1;
- (_Bool)isBefore:(id)arg1;
- (_Bool)isToday;
- (_Bool)isTomorrow;
- (_Bool)isWithin24Hours;
- (_Bool)isWithinLastNumDays:(long long)arg1;
- (_Bool)isWithinLastNumMinutes:(long long)arg1;
- (_Bool)isYesterday;
- (id)stringFromDate;
- (id)toComponents;
@end

