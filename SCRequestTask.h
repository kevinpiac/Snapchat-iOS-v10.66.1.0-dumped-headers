//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString, SCNNetworkTypesHttpRequestKey, SCNNetworkTypesRankerCallback, SCRequest, SCRequestTaskLogger, SCRequestTaskSchedulingInfo;
@protocol SCRequestAuthenticator;

@interface SCRequestTask : NSObject
{
    _Bool _isPaused;
    _Bool _shouldRetry;
    _Bool _isRunning;
    _Bool _success;
    _Bool _forcedRetry;
    _Bool _isCompleteTaskExecuted;
    NSString *_taskId;
    SCRequest *_request;
    id <SCRequestAuthenticator> _authenticator;
    SCRequestTaskSchedulingInfo *_schedulingInfo;
    SCRequestTaskLogger *_logger;
    unsigned long long _numOfRequestAttempts;
    unsigned long long _numOfRequestAttemptsCancelled;
    unsigned long long _numOfRequestAttemptsPaused;
    unsigned long long _numHTTPRequestCompleted;
    SCNNetworkTypesHttpRequestKey *_nativeHttpRequestKey;
    SCNNetworkTypesRankerCallback *_rankerCallback;
}

+ (id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(struct SCNetworkTraceFileStruct *)arg3 networkInterceptors:(id)arg4 completionQueue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
+ (id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(struct SCNetworkTraceFileStruct *)arg3 networkInterceptors:(id)arg4 progressiveUpdateQueue:(id)arg5 progressiveUpdateBlock:(CDUnknownBlockType)arg6;
+ (id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(struct SCNetworkTraceFileStruct *)arg3 networkInterceptors:(id)arg4 successQueue:(id)arg5 failureQueue:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void).cxx_destruct;
- (void)_cancelRunningTaskWithCompletionHandler:(CDUnknownBlockType)arg1 forcedRetry:(_Bool)arg2 error:(id)arg3;
- (void)_completeCanceledTaskWithCompletionHandler:(CDUnknownBlockType)arg1 error:(id)arg2;
- (id)_eligibleErrorCodesForRetry;
- (_Bool)_hasRetryAttemptsLeft;
- (_Bool)_isErrorRetriableWithError:(id)arg1 response:(id)arg2;
- (long long)_usedValidRequestAttemptCount;
@property(readonly, nonatomic) __weak id <SCRequestAuthenticator> authenticator; // @synthesize authenticator=_authenticator;
- (void)cancel;
- (void)cancelByProducingResumeData:(CDUnknownBlockType)arg1;
- (void)cancelWithError:(id)arg1;
- (void)cancelWithForcedRetryIfRunning:(_Bool)arg1 error:(id)arg2;
- (void)checkInterceptors:(id)arg1 withRequest:(id)arg2 response:(id)arg3 data:(id)arg4 error:(id)arg5;
- (CDUnknownBlockType)completeTask;
- (void)didEnqueueTask;
- (void)didInitiateTaskByUser;
- (void)didSubmitTask;
@property(readonly, nonatomic) _Bool forcedRetry; // @synthesize forcedRetry=_forcedRetry;
- (id)initWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(struct SCNetworkTraceFileStruct *)arg3;
@property(nonatomic) _Bool isCompleteTaskExecuted; // @synthesize isCompleteTaskExecuted=_isCompleteTaskExecuted;
- (_Bool)isDownloadMediaRequestTaskWithTrackingId;
- (_Bool)isResumable;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(retain, nonatomic) SCRequestTaskLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SCNNetworkTypesHttpRequestKey *nativeHttpRequestKey; // @synthesize nativeHttpRequestKey=_nativeHttpRequestKey;
@property(nonatomic) unsigned long long numHTTPRequestCompleted; // @synthesize numHTTPRequestCompleted=_numHTTPRequestCompleted;
@property(readonly, nonatomic) unsigned long long numOfRequestAttempts; // @synthesize numOfRequestAttempts=_numOfRequestAttempts;
@property(readonly, nonatomic) unsigned long long numOfRequestAttemptsCancelled; // @synthesize numOfRequestAttemptsCancelled=_numOfRequestAttemptsCancelled;
@property(nonatomic) unsigned long long numOfRequestAttemptsPaused; // @synthesize numOfRequestAttemptsPaused=_numOfRequestAttemptsPaused;
- (void)pause;
- (void)progressiveUpdate;
@property(retain, nonatomic) SCNNetworkTypesRankerCallback *rankerCallback; // @synthesize rankerCallback=_rankerCallback;
@property(readonly, nonatomic) SCRequest *request; // @synthesize request=_request;
- (void)runWithCompletionQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) SCRequestTaskSchedulingInfo *schedulingInfo; // @synthesize schedulingInfo=_schedulingInfo;
@property(readonly, nonatomic) _Bool shouldRetry; // @synthesize shouldRetry=_shouldRetry;
- (_Bool)shouldRetryRequestWithError:(id)arg1 response:(id)arg2;
@property(readonly, nonatomic) _Bool success; // @synthesize success=_success;
@property(readonly, copy, nonatomic) NSString *taskId; // @synthesize taskId=_taskId;
- (void)updateRequestId;
- (void)updateTaskQueuingLatency:(long long)arg1;
- (void)updateTaskURLSessionPriority:(float)arg1;
- (void)updateTaskWithTask:(id)arg1;
- (void)updateUserInitiated;

@end

