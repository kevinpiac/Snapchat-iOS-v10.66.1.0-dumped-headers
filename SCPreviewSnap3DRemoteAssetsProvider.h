//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "LSARemoteAssetsComponentListener-Protocol.h"
#import "SCLensRemoteAssetsUploadOperationDelegate-Protocol.h"
#import "SCLensRemoteAssetsUploadOperationListener-Protocol.h"

@class LSARemoteAssetsComponent, NSString, SCLens, SCLensRemoteAssetsBlobUploadOperation, SCLensRemoteAssetsInGalleryHandler, SCLensRemoteAssetsUploadWithGalleryFileManager, SCPromise;
@protocol SCLensDataFetcher, SCLensRemoteAssetLoggerProtocol, SCLensRemoteAssetsUploader, SCLensSnap3DManiphestAdapter, SCPerforming;

@interface SCPreviewSnap3DRemoteAssetsProvider : NSObject <SCLensRemoteAssetsUploadOperationListener, SCLensRemoteAssetsUploadOperationDelegate, LSARemoteAssetsComponentListener>
{
    LSARemoteAssetsComponent *_remoteAssetsComponent;
    id <SCLensDataFetcher> _dataFetcher;
    id <SCLensRemoteAssetsUploader> _assetsUploader;
    SCLensRemoteAssetsInGalleryHandler *_galleryAssetHandler;
    id <SCLensSnap3DManiphestAdapter> _maniphestAdapter;
    id <SCPerforming> _performer;
    SCLensRemoteAssetsUploadWithGalleryFileManager *_assetsUploadFileManager;
    NSString *_currentAssetBatchId;
    SCPromise *_serializedLensAssetPromise;
    _Bool _serializedLensAssetPromiseCompleted;
    id <SCLensRemoteAssetLoggerProtocol> _lensRemoteAssetLogger;
    SCLens *_activeLens;
    SCLensRemoteAssetsBlobUploadOperation *_currentUploadOperation;
    unsigned long long _assetFetchOrigin;
}

+ (id)_snap3DRemoteAssetProviderErrorWithCode:(long long)arg1;
- (void).cxx_destruct;
- (void)_cleanUpAssetResources;
- (void)_getAssetForLensId:(id)arg1 assetId:(id)arg2 assetType:(long long)arg3 avatarId:(id)arg4 encryptionKey:(id)arg5 encryptionIv:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)_operationForBatchId:(id)arg1;
@property(retain, nonatomic) SCLens *activeLens; // @synthesize activeLens=_activeLens;
@property(nonatomic) unsigned long long assetFetchOrigin; // @synthesize assetFetchOrigin=_assetFetchOrigin;
- (id)assetsUploaderForUploadOperation:(id)arg1;
@property(retain, nonatomic) SCLensRemoteAssetsBlobUploadOperation *currentUploadOperation; // @synthesize currentUploadOperation=_currentUploadOperation;
- (id)fileManagerForUploadOperation:(id)arg1;
- (void)getAssetForLensId:(id)arg1 assetId:(id)arg2 assetType:(long long)arg3 avatarId:(id)arg4 encryptionKey:(id)arg5 encryptionIv:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)initWithDataFetcher:(id)arg1 assetsUploader:(id)arg2 assetsUploadFileManager:(id)arg3 galleryAssetHandler:(id)arg4 maniphestAdapter:(id)arg5 lensRemoteAssetLogger:(id)arg6;
- (id)initWithDataFetcher:(id)arg1 assetsUploader:(id)arg2 assetsUploadFileManager:(id)arg3 galleryAssetHandler:(id)arg4 maniphestAdapter:(id)arg5 lensRemoteAssetLogger:(id)arg6 performer:(id)arg7;
- (void)lensRemoteAssetsUploadOperation:(id)arg1 didFailUploadingAssetWithId:(id)arg2 effectId:(id)arg3 error:(id)arg4;
- (void)lensRemoteAssetsUploadOperation:(id)arg1 didSucceedUploadingAssetWithId:(id)arg2 effectId:(id)arg3;
- (void)lensRemoteAssetsUploadOperationDidFail:(id)arg1 withError:(id)arg2;
- (void)lensRemoteAssetsUploadOperationDidSucceed:(id)arg1;
- (void)remoteAssetsComponent:(id)arg1 didRequestAsset:(id)arg2 effectId:(id)arg3;
- (void)remoteAssetsComponent:(id)arg1 didRequestAssetUploadWithId:(id)arg2 assetPath:(id)arg3 effectId:(id)arg4 deleteAfterUploading:(_Bool)arg5;
- (void)remoteAssetsComponent:(id)arg1 didRequestAssetUploadWithId:(id)arg2 assetPath:(id)arg3 encryptionKey:(id)arg4 encryptionIv:(id)arg5 assetBatchId:(id)arg6 effectId:(id)arg7 deleteAfterUploading:(_Bool)arg8;
- (id)serializedLensAssetsFuture;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

