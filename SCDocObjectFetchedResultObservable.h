//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCObservable.h"

@class NSObject, SCDocObjectContext, SCDocObjectFetchedResult, SCMulticastObserver;
@protocol OS_dispatch_queue, SCDocObjectObservationToken;

@interface SCDocObjectFetchedResultObservable : SCObservable
{
    NSObject<OS_dispatch_queue> *_queue;
    id <SCDocObjectObservationToken> _docObjectObesrveToken;
    SCMulticastObserver *_observers;
    SCDocObjectContext *_docObjectContext;
    struct unique_ptr<SCObservableQuery, std::__1::default_delete<SCObservableQuery>> _observableQuery;
    SCDocObjectFetchedResult *_mostRecentFetchedResult;
}

+ (id)observableForFetchedResult:(id)arg1 docObjectContext:(id)arg2 queue:(id)arg3;
+ (id)observableForQuery:(unique_ptr_8233b5dc)arg1 klass:(Class)arg2 orderBy:(const struct OrderBy *)arg3 limit:(const struct Limit *)arg4 docObjectContext:(id)arg5 queue:(id)arg6;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_setupObservationWithFetchedResult:(id)arg1;
- (id)initWithDocObjectContext:(id)arg1 queue:(id)arg2;
- (id)initWithFetchedResult:(id)arg1 docObjectContext:(id)arg2 queue:(id)arg3;
- (id)initWithQuery:(unique_ptr_8233b5dc *)arg1 klass:(Class)arg2 orderBy:(const struct OrderBy *)arg3 limit:(const struct Limit *)arg4 docObjectContext:(id)arg5 queue:(id)arg6;
@property(retain) SCDocObjectFetchedResult *mostRecentFetchedResult; // @synthesize mostRecentFetchedResult=_mostRecentFetchedResult;
- (id)subscribe:(id)arg1;
- (void)unsubscribe:(id)arg1;

@end

