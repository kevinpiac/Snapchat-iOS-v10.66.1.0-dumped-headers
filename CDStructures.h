//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class GPBMessage, MISSING_TYPE, NSData, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AccelerometerFrameDataRaw;

struct Actor<mbgl::ResourceTransform>;

struct Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>;

struct AlignmentFrameData;

struct Allocator;

struct AnalyticsManager {
    struct EffectsManagerDelegate *_field1;
    struct array<LS::AnalyticsManager::EventData, 18> _field2;
    struct map<std::__1::basic_string<char>, LS::AnalyticsManager::EventData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::AnalyticsManager::EventData>>> _field3;
    int _field4[2];
    int _field5;
};

struct Arena;

struct ArenaStringPtr {
    basic_string_90719d97 *_field1;
};

struct AsyncRequest;

struct AsyncTask;

struct AtomicRefCount {
    struct atomic<int> _field1;
};

struct AttributesBindingContext;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChainMain {
    struct unique_ptr<LS::AudioChain::AudioChainMain::Impl, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> _field1;
};

struct AudioInfo {
    int channelsCount;
    int chunkSize;
    int discretization;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioToolboxOutputCollection {
    struct shared_ptr<LS::Audio::AudioToolboxOutputCollection::Impl> impl;
};

struct AuthChallengeInfo {
    struct AtomicRefCount _field1;
    _Bool _field2;
    struct Origin _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
};

struct AuthContextCallback;

struct AuthCredentials {
    struct basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short>> _field1;
    struct basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct BackgroundLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct BandwidthChangeListener;

struct BandwidthChangeNotifier;

struct BaseExpr<bool>;

struct BaseFaceMesh;

struct BehaviorCallbackWriter;

struct BindStateBase;

struct BokehEffect;

struct BoltNetworkRulesProviderCallback;

struct BoltResult;

struct Borrowed {
    struct SQLiteConnection *mObjectPtr;
    struct ObjectPool<SQLiteConnection, 63> *mConnectionPoolPtr;
};

struct BoundAttributes;

struct Builder {
    id _field1;
    id _field2;
    Class _field3;
    unsigned long long _field4;
    struct Borrowed _field5;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CFRefHolder<__CVBuffer *> {
    struct __CVBuffer *_field1;
};

struct CFRefHolder<opaqueCMSampleBuffer *> {
    struct opaqueCMSampleBuffer *_field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CalibrationData;

struct CallbackLogSink;

struct CallingManager;

struct CameraData;

struct CameraInfo {
    CDUnknownFunctionPointerType *_vptr$ISerializable;
    _Bool _isruntime;
    int type;
    struct Size<int> size;
    struct RectTransform inputTransform;
    float horizFieldOfView;
    float vertFieldOfView;
    float mfx;
    float mfy;
    struct optional<LS::CameraInfo::Extrinsics> extrinsics;
};

struct CameraOptions {
    struct optional<mbgl::LatLng> _field1;
    struct EdgeInsets _field2;
    struct optional<mapbox::geometry::point<double>> _field3;
    struct optional<double> _field4;
    struct optional<double> _field5;
    struct optional<double> _field6;
};

struct CertVerifier;

struct CircleLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct ClientAttestationCallback;

struct ClientMetricsProcessor;

struct CognacSession;

struct CognacSessionDelegate;

struct Color {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct CompletionHandler;

struct ComplexEffect;

struct Component {
    int _field1;
    int _field2;
};

struct ComposerObject;

struct ConfigureClientMetrics;

struct ConnectTiming {
    struct TimeTicks _field1;
    struct TimeTicks _field2;
    struct TimeTicks _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
};

struct Connection;

struct ConnectivityChangeListener;

struct ConnectivityChangeNotifier;

struct ContentManager;

struct ContentResolver;

struct ContentResult;

struct Context;

struct ConversationManager;

struct CookieStore;

struct CoreManager;

struct CoreSystem;

struct CronetEnvironment {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    struct unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>> _field6;
    basic_string_90719d97 _field7;
    int _field8;
    long long _field9;
    struct vector<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>, std::__1::allocator<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>>> _field10;
    struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> _field11;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field12;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field13;
    struct scoped_refptr<base::SequencedTaskRunner> _field14;
    unique_ptr_33e8c17e _field15;
    struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> _field16;
    struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> _field17;
    struct scoped_refptr<net::URLRequestContextGetter> _field18;
    basic_string_90719d97 _field19;
    _Bool _field20;
    struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> _field21;
    struct unique_ptr<net::FileNetLogObserver, std::__1::default_delete<net::FileNetLogObserver>> _field22;
    _Bool _field23;
    double _field24;
    struct unique_ptr<cronet::CronetPrefsManager, std::__1::default_delete<cronet::CronetPrefsManager>> _field25;
};

struct CronetPrefsManager;

struct CustomLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct DaemonAwakeMessage {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field3;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct ArenaStringPtr _field6;
    int _field7;
    int _field8;
};

struct DaemonClient;

struct DaemonEvent {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field3;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field4;
    struct ArenaStringPtr _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct DataProvider;

struct DataSaverModeChangeListener;

struct DataSaverModeChangeNotifier;

struct DecoderCallback;

struct DefaultFileSource {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<mbgl::FileSource> _field2;
    struct unique_ptr<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> _field3;
    struct mutex _field4;
    basic_string_90719d97 _field5;
    struct mutex _field6;
    basic_string_90719d97 _field7;
};

struct Delegate;

struct DepthFrame {
    CDUnknownFunctionPointerType *_vptr$ISerializable;
    _Bool _isruntime;
    struct Mat depth;
    struct Mat disparity;
    struct Mat confidence;
    struct CameraInfo cameraInfo;
    float scale;
    float baseline;
    struct Timestamp timestamp;
    struct Mat rgb;
    struct Mat rgbThumbnail;
    shared_ptr_72f2ba33 depthTexture;
};

struct DepthFrameData;

struct DetachedBuffer {
    struct Allocator *allocator_;
    _Bool own_allocator_;
    char *buf_;
    unsigned long long reserved_;
    char *cur_;
    unsigned long long size_;
};

struct DeviceMotionSample;

struct DictionaryValue;

struct DirectRendererCallback;

struct DispatchTask;

struct ECDH {
    struct ec_key_st *_field1;
};

struct EdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct EffectsManagerDelegate;

struct EncoderCallback;

struct Error {
    int mQueryType;
    int mOperation;
    int mCode;
    basic_string_90719d97 mDescription;
    basic_string_90719d97 mQuery;
};

struct EventData {
    int _field1;
    int _field2;
    double _field3;
    double _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    int _field7;
    int _field8;
};

struct Extrinsics {
    float baselineMillimeters;
};

struct EyewearAuthenticator {
    unsigned char _field1[1280];
    unsigned int _field2;
    unsigned char _field3[20];
};

struct EyewearPairing {
    unsigned char _field1[3];
    unsigned char _field2[32];
    unsigned char _field3[8];
    unsigned char _field4[16];
};

struct FastDnn;

struct FeedManager;

struct FetchUserDisplayNameCallback;

struct FideliusHelper;

struct FieldLoc;

struct FileFactory;

struct FileNetLogObserver;

struct FileRotatingLogSink;

struct FileSource;

struct FillExtrusionLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct FillLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct Filter {
    unsigned long long _field1;
    struct type _field2;
};

struct Flag;

struct FlatBufferBuilder {
    struct vector_downward buf_;
    struct vector<flatbuffers::FlatBufferBuilder::FieldLoc, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> offsetbuf_;
    unsigned short max_voffset_;
    _Bool nested;
    _Bool finished;
    vector_12da65de vtables_;
    unsigned long long minalign_;
    _Bool force_defaults_;
    _Bool dedup_vtables_;
    struct set<flatbuffers::Offset<flatbuffers::String>, flatbuffers::FlatBufferBuilder::StringOffsetCompare, std::__1::allocator<flatbuffers::Offset<flatbuffers::String>>> *string_pool;
};

struct ForegroundTaskScheduler {
    CDUnknownFunctionPointerType *_field1;
    struct condition_variable _field2;
    struct condition_variable _field3;
    int _field4;
    int _field5;
    struct mutex _field6;
    id _field7;
    struct atomic<bool> _field8;
};

struct Frame {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FrameBuffer;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GURL {
    basic_string_90719d97 _field1;
    _Bool _field2;
    struct Parsed _field3;
    struct unique_ptr<GURL, std::__1::default_delete<GURL>> _field4;
};

struct GeoJSONSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct optional<std::__1::basic_string<char>> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct GeoParserStruct {
    int _field1;
    int _field2;
    char _field3[40];
    char _field4[40];
    char _field5[40];
    char _field6[40];
    char _field7[40];
};

struct GetResult;

struct GetUntrackedCachesCompletionCallback;

struct GlobalParams {
    float _field1;
    _Bool _field2;
    basic_string_90719d97 _field3;
    int _field4;
    _Bool _field5;
    float _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    float _field10;
    float _field11;
    _Bool _field12;
    int _field13;
    _Bool _field14;
    float _field15;
    _Bool _field16;
    _Bool _field17;
    basic_string_90719d97 _field18;
    float _field19;
    int _field20;
    int _field21;
    _Bool _field22;
    int _field23;
    int _field24;
};

struct GrpcManager;

struct GyroFrameDataRaw;

struct Handle<std::__1::shared_ptr<addlive::DecoderCallback>, std::__1::shared_ptr<addlive::DecoderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5d6e4d93 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::DirectRendererCallback>, std::__1::shared_ptr<addlive::DirectRendererCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_fe59ffec m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::EncoderCallback>, std::__1::shared_ptr<addlive::EncoderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a3542306 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::NumberResponder>, std::__1::shared_ptr<addlive::NumberResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b2984fc8 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::Service>, std::__1::shared_ptr<addlive::Service>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_756dba43 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::ServiceListener>, std::__1::shared_ptr<addlive::ServiceListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5fdff3df m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::VoidResponder>, std::__1::shared_ptr<addlive::VoidResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c0f0acb2 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::shared_state::Connection>, std::__1::shared_ptr<addlive::shared_state::Connection>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f2074f89 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::composer::AttributesBindingContext>, std::__1::shared_ptr<snap::composer::AttributesBindingContext>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_201911dc m_obj;
};

struct Handle<std::__1::shared_ptr<snap::composer::DaemonClient>, std::__1::shared_ptr<snap::composer::DaemonClient>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b8d08add m_obj;
};

struct Handle<std::__1::shared_ptr<snap::composer::JSModule>, std::__1::shared_ptr<snap::composer::JSModule>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_512c62ba m_obj;
};

struct Handle<std::__1::shared_ptr<snap::composer::JSRuntime>, std::__1::shared_ptr<snap::composer::JSRuntime>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7811b5df m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::BehaviorCallbackWriter>, std::__1::shared_ptr<snap::content_manager::BehaviorCallbackWriter>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_0ee39352 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::BoltResult>, std::__1::shared_ptr<snap::content_manager::BoltResult>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f8490324 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::ContentManager>, std::__1::shared_ptr<snap::content_manager::ContentManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7dbdcd2d m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::ContentResult>, std::__1::shared_ptr<snap::content_manager::ContentResult>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_46ab9346 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::GetUntrackedCachesCompletionCallback>, std::__1::shared_ptr<snap::content_manager::GetUntrackedCachesCompletionCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_dc12c033 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::InterimObjectUnzipper>, std::__1::shared_ptr<snap::content_manager::InterimObjectUnzipper>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c6986be9 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::InterimPayloadProcessor>, std::__1::shared_ptr<snap::content_manager::InterimPayloadProcessor>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e30a19a0 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::ReadStream>, std::__1::shared_ptr<snap::content_manager::ReadStream>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ea4dd268 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::TaskCompletionCallback>, std::__1::shared_ptr<snap::content_manager::TaskCompletionCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ed83fba8 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_manager::WriteStream>, std::__1::shared_ptr<snap::content_manager::WriteStream>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5d299611 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_resolution::BoltNetworkRulesProviderCallback>, std::__1::shared_ptr<snap::content_resolution::BoltNetworkRulesProviderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_d8a22ac2 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_resolution::ContentResolver>, std::__1::shared_ptr<snap::content_resolution::ContentResolver>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_9ebbd4c1 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::content_resolution::MossRankedMediaVariantsProviderCallback>, std::__1::shared_ptr<snap::content_resolution::MossRankedMediaVariantsProviderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_83084b00 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::fidelius::FideliusHelper>, std::__1::shared_ptr<snap::fidelius::FideliusHelper>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_300df36a m_obj;
};

struct Handle<std::__1::shared_ptr<snap::file_manager::GetResult>, std::__1::shared_ptr<snap::file_manager::GetResult>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_82d95599 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::graphene::ClientMetricsProcessor>, std::__1::shared_ptr<snap::graphene::ClientMetricsProcessor>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_4a21a387 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::graphene::ConfigureClientMetrics>, std::__1::shared_ptr<snap::graphene::ConfigureClientMetrics>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_636bbb41 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::grpc::AuthContextCallback>, std::__1::shared_ptr<snap::grpc::AuthContextCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5167fecf m_obj;
};

struct Handle<std::__1::shared_ptr<snap::grpc::ClientAttestationCallback>, std::__1::shared_ptr<snap::grpc::ClientAttestationCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_4c6afddd m_obj;
};

struct Handle<std::__1::shared_ptr<snap::grpc::GrpcManager>, std::__1::shared_ptr<snap::grpc::GrpcManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_2268282f m_obj;
};

struct Handle<std::__1::shared_ptr<snap::hello::Hello>, std::__1::shared_ptr<snap::hello::Hello>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_91800b9e m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::ConversationManager>, std::__1::shared_ptr<snap::messaging::ConversationManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_31e36e5f m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::FeedManager>, std::__1::shared_ptr<snap::messaging::FeedManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_fa577351 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::FetchUserDisplayNameCallback>, std::__1::shared_ptr<snap::messaging::FetchUserDisplayNameCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_452a135d m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::Session>, std::__1::shared_ptr<snap::messaging::Session>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_dbc838bb m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::StatelessSession>, std::__1::shared_ptr<snap::messaging::StatelessSession>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_aefb32b8 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::messaging::UploadCallback>, std::__1::shared_ptr<snap::messaging::UploadCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7587cc48 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network::NetworkManager>, std::__1::shared_ptr<snap::network::NetworkManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_9d534590 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_api::NetworkApi>, std::__1::shared_ptr<snap::network_api::NetworkApi>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8a449218 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_manager::NetworkManager>, std::__1::shared_ptr<snap::network_manager::NetworkManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_02f6cfa8 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_manager::ProgressiveDownloadCallback>, std::__1::shared_ptr<snap::network_manager::ProgressiveDownloadCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c3a21101 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_manager::UrlRequest>, std::__1::shared_ptr<snap::network_manager::UrlRequest>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8cd80ded m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_manager::UrlRequestCallback>, std::__1::shared_ptr<snap::network_manager::UrlRequestCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_15c98029 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_manager::UrlResponseInfo>, std::__1::shared_ptr<snap::network_manager::UrlResponseInfo>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_09551d79 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::BandwidthChangeListener>, std::__1::shared_ptr<snap::network_types::BandwidthChangeListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b51b7f3d m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::BandwidthChangeNotifier>, std::__1::shared_ptr<snap::network_types::BandwidthChangeNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_78c8ff1a m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::ConnectivityChangeListener>, std::__1::shared_ptr<snap::network_types::ConnectivityChangeListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_be644834 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::ConnectivityChangeNotifier>, std::__1::shared_ptr<snap::network_types::ConnectivityChangeNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_40099c5c m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::DataSaverModeChangeListener>, std::__1::shared_ptr<snap::network_types::DataSaverModeChangeListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_31334f9c m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::DataSaverModeChangeNotifier>, std::__1::shared_ptr<snap::network_types::DataSaverModeChangeNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ee9e20f5 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::HttpRequestAndInfo>, std::__1::shared_ptr<snap::network_types::HttpRequestAndInfo>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7dd28b8f m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::HttpRequestBuilder>, std::__1::shared_ptr<snap::network_types::HttpRequestBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_11f5830e m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::HttpRequestCallback>, std::__1::shared_ptr<snap::network_types::HttpRequestCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_afb36397 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::HttpRequestProgressiveCallback>, std::__1::shared_ptr<snap::network_types::HttpRequestProgressiveCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_24c624cd m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::NetworkManagerNotifier>, std::__1::shared_ptr<snap::network_types::NetworkManagerNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5b252241 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::RankerCallback>, std::__1::shared_ptr<snap::network_types::RankerCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6022ac5d m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::Runnable>, std::__1::shared_ptr<snap::network_types::Runnable>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_986fb840 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::UiPageChangeListener>, std::__1::shared_ptr<snap::network_types::UiPageChangeListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_3c8fe4b0 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::UiPageChangeNotifier>, std::__1::shared_ptr<snap::network_types::UiPageChangeNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6feb1090 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::UploadDataProvider>, std::__1::shared_ptr<snap::network_types::UploadDataProvider>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_1a7ce957 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::UserLogOutListener>, std::__1::shared_ptr<snap::network_types::UserLogOutListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_3832325f m_obj;
};

struct Handle<std::__1::shared_ptr<snap::network_types::UserLogOutNotifier>, std::__1::shared_ptr<snap::network_types::UserLogOutNotifier>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_d7aa1617 m_obj;
};

struct Handle<std::__1::shared_ptr<snap::shims::DataProvider>, std::__1::shared_ptr<snap::shims::DataProvider>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_bd03877a m_obj;
};

struct Handle<std::__1::shared_ptr<snap::shims::DispatchTask>, std::__1::shared_ptr<snap::shims::DispatchTask>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_3431538a m_obj;
};

struct Handle<std::__1::shared_ptr<snap::shims::Logger>, std::__1::shared_ptr<snap::shims::Logger>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_00467bdd m_obj;
};

struct Handle<std::__1::shared_ptr<snap::shims::Platform>, std::__1::shared_ptr<snap::shims::Platform>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_aabb657c m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::AsyncTask>, std::__1::shared_ptr<talkcorev3::AsyncTask>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8537d7cf m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CallingManager>, std::__1::shared_ptr<talkcorev3::CallingManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_890eee60 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CognacSession>, std::__1::shared_ptr<talkcorev3::CognacSession>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_913ee57f m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CognacSessionDelegate>, std::__1::shared_ptr<talkcorev3::CognacSessionDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f42f8736 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CompletionHandler>, std::__1::shared_ptr<talkcorev3::CompletionHandler>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_acde51be m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::Logger>, std::__1::shared_ptr<talkcorev3::Logger>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c04af217 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::MetricsMetadataContainer>, std::__1::shared_ptr<talkcorev3::MetricsMetadataContainer>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e6ea19ac m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::MetricsReporter>, std::__1::shared_ptr<talkcorev3::MetricsReporter>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ecb86bd5 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::PresenceService>, std::__1::shared_ptr<talkcorev3::PresenceService>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a98b9edb m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::PresenceServiceDelegate>, std::__1::shared_ptr<talkcorev3::PresenceServiceDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a60f1bfa m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::Session>, std::__1::shared_ptr<talkcorev3::Session>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_785f52f1 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::SessionDelegate>, std::__1::shared_ptr<talkcorev3::SessionDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ba403e89 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::TalkCore>, std::__1::shared_ptr<talkcorev3::TalkCore>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6e98dd72 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::TalkCoreDelegate>, std::__1::shared_ptr<talkcorev3::TalkCoreDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_49b51578 m_obj;
};

struct HashValue;

struct HeaderKeyValuePair;

struct Hello;

struct HostPortPair {
    basic_string_90719d97 _field1;
    unsigned short _field2;
};

struct HttpProtocolHandlerCore {
    CDUnknownFunctionPointerType *_field1;
    struct AtomicRefCount _field2;
    CDUnknownFunctionPointerType *_field3;
    struct ThreadChecker _field4;
    id _field5;
    struct unique_ptr<char, base::FreeDeleter> _field6;
    int _field7;
    struct scoped_refptr<net::WrappedIOBuffer> _field8;
    id _field9;
    id _field10;
    id _field11;
    struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> _field12;
    struct URLRequest *_field13;
    struct WeakPtr<net::ChunkedDataStreamUploader> _field14;
    id _field15;
    struct WeakPtr<net::RequestTracker> _field16;
};

struct HttpRequestAndInfo;

struct HttpRequestBuilder;

struct HttpRequestCallback;

struct HttpRequestHeaders {
    struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> _field1;
};

struct HttpRequestProgressiveCallback;

struct HttpResponseHeaders;

struct HttpResponseInfo {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ProxyServer _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct Time _field12;
    struct HostPortPair _field13;
    basic_string_90719d97 _field14;
    int _field15;
    struct Time _field16;
    struct Time _field17;
    struct scoped_refptr<net::AuthChallengeInfo> _field18;
    struct scoped_refptr<net::SSLCertRequestInfo> _field19;
    struct SSLInfo _field20;
    struct scoped_refptr<net::HttpResponseHeaders> _field21;
    struct HttpVaryData _field22;
    struct scoped_refptr<net::IOBufferWithSize> _field23;
};

struct HttpResult {
    basic_string_90719d97 body;
    int resultCode;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> headers;
};

struct HttpVaryData {
    struct MD5Digest _field1;
    _Bool _field2;
};

struct HybridClustering {
    int _field1;
    _Bool _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    vector_9c221dbc _field14;
    vector_9c221dbc _field15;
    vector_9c221dbc _field16;
    vector_9c221dbc _field17;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field18;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field19;
    int _field20;
    struct Mat _field21;
};

struct IGListSectionEntry;

struct ILogger;

struct IOBufferWithSize;

struct ISpeakerOutputFactory;

struct IViewManager;

struct Image {
    struct Immutable<mbgl::style::Image::Impl> _field1;
};

struct Image<mbgl::ImageAlphaMode::Premultiplied> {
    struct Size _field1;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field2;
};

struct ImageObjC {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    int _field4;
    unsigned long long _field5;
    int _field6;
    int _field7;
    char *_field8;
    char *_field9;
    unsigned long long _field10;
    struct function<void (unsigned char *)> _field11;
};

struct ImageProcessingConfig {
    int _field1;
    struct Size<int> _field2;
    _Bool _field3;
    _Bool _field4;
    struct Size<int> _field5;
    unsigned long long _field6;
    int _field7;
    struct tmat3x3<float, glm::packed_highp> _field8;
    basic_string_90719d97 _field9;
    basic_string_90719d97 _field10;
    basic_string_90719d97 _field11;
    _Bool _field12;
    _Bool _field13;
};

struct ImageSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct optional<std::__1::basic_string<char>> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct Immutable<mbgl::style::Image::Impl> {
    struct shared_ptr<const mbgl::style::Image::Impl> _field1;
};

struct Immutable<mbgl::style::Layer::Impl> {
    struct shared_ptr<const mbgl::style::Layer::Impl> _field1;
};

struct Immutable<mbgl::style::Light::Impl> {
    struct shared_ptr<const mbgl::style::Light::Impl> _field1;
};

struct Immutable<mbgl::style::Source::Impl> {
    struct shared_ptr<const mbgl::style::Source::Impl> _field1;
};

struct Impl;

struct ImuDataRaw;

struct InterimObjectUnzipper;

struct InterimPayloadProcessor;

struct InternalMetadataWithArena {
    void *_field1;
};

struct InternedString;

struct IosCamera {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<adl::media::video::ObjectPoolX<adl::media::video::IosNativeFrame>> _field2;
    struct mutex _field3;
    struct unique_ptr<adl::media::IosCamera::Impl, std::__1::default_delete<adl::media::IosCamera::Impl>> _field4;
    struct mutex _field5;
    struct set<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> _field6;
    _Bool _field7;
};

struct JSModule;

struct JSRuntime;

struct JavaScriptBridge;

struct JavaScriptRuntime;

struct KnnFaceRecognizer {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    float _field5;
    vector_f9ed6fc8 _field6;
    struct vector<int, std::__1::allocator<int>> _field7;
    struct Mat _field8;
    struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> _field9;
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field10;
};

struct LSAAnalyticsDelegateWrapper;

struct LSAAudioDelegateWrapper;

struct LSABitmoji3DDelegateWrapper;

struct LSABitmojiEffectDelegateWrapper;

struct LSAClientInterfaceDelegateWrapper;

struct LSACompassTrackerDelegate;

struct LSADebugDelegateWrapper;

struct LSADeviceMotionTrackerDelegate;

struct LSAEffectViewport {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
};

struct LSAExpressionsDelegateWrapper;

struct LSAGLViewBuffers {
    unsigned int defaultFrameBuffer;
    unsigned int colorRenderBuffer;
    int backingWidth;
    int backingHeight;
};

struct LSAGLViewProgramPipeline {
    unsigned int program;
    unsigned int position;
    unsigned int textureCoordinate;
};

struct LSAGLViewVertexArrayObject {
    unsigned int vertexArrayObject;
    unsigned int vertexBufferObject;
    unsigned int textureCoordinateBufferObject;
};

struct LSAGeoDataDelegateWrapper;

struct LSAHapticFeedbackDelegateWrapper;

struct LSAHintsDelegateWrapper;

struct LSALensAnalyticsDataDelegateWrapper;

struct LSALifeCycleDelegateWrapper;

struct LSALocationTrackerDelegate;

struct LSAMetricsDelegateWrapper;

struct LSAObjCppPtrWrapper<LS::ImageProcessingConfig> {
    struct ImageProcessingConfig *_field1;
};

struct LSAObjCppPtrWrapper<LS::TrackingData> {
    struct TrackingData *_field1;
};

struct LSAObjCppPtrWrapper<const LS::ImageObjC> {
    struct ImageObjC *_field1;
};

struct LSAObjCppPtrWrapper<const LS::TrackingParameters> {
    struct TrackingParameters *_field1;
};

struct LSAOfflineDepthDataProviderWrapper;

struct LSAPersistenceDelegateWrapper;

struct LSAPlatformTrackingDelegateWrapper;

struct LSAProfilingMetrics {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    _Bool _field17;
};

struct LSARemoteAssetsDelegateWrapper;

struct LSAScenariumAudioDelegateWrapper;

struct LSASnapRecordingDelegateWrapper;

struct LSASnapcodeDelegateWrapper;

struct LSASpectaclesOfflineSixDofDataProviderWrapper;

struct LSAUriDelegateWrapper;

struct LSAUserDataDelegateWrapper;

struct LSAVector3 {
    float x;
    float y;
    float z;
};

struct LSAVideoCodecFactory;

struct LSDrawTexture {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct LSLocalizationDelegate;

struct LabsCVObjCppReferenceWrapper<LabsCV::Core::CameraData> {
    struct CameraData *_field1;
};

struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::AccelerometerFrameDataRaw> {
    struct AccelerometerFrameDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::GyroFrameDataRaw> {
    struct GyroFrameDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::ImuDataRaw> {
    struct ImuDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::VideoTimestampsDataRaw> {
    struct VideoTimestampsDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::AlignmentFrameData> {
    struct AlignmentFrameData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::CameraData> {
    struct CameraData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::SixdofFrameData> {
    struct SixdofFrameData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::StabilizerFrameData> {
    struct StabilizerFrameData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::Depth::CalibrationData> {
    struct CalibrationData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::DepthFrameData> {
    struct DepthFrameData *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::ImuSensorFusion::AccelerometerFrameDataRaw> {
    struct AccelerometerFrameDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<const LabsCV::ImuSensorFusion::GyroFrameDataRaw> {
    struct GyroFrameDataRaw *_field1;
};

struct LabsCVObjCppReferenceWrapper<const cv::Mat> {
    struct Mat *_field1;
};

struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::AlignmentFrameData, std::__1::allocator<LabsCV::Core::AlignmentFrameData>>> {
    struct vector<LabsCV::Core::AlignmentFrameData, std::__1::allocator<LabsCV::Core::AlignmentFrameData>> *_field1;
};

struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::SixdofFrameData, std::__1::allocator<LabsCV::Core::SixdofFrameData>>> {
    struct vector<LabsCV::Core::SixdofFrameData, std::__1::allocator<LabsCV::Core::SixdofFrameData>> *_field1;
};

struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::StabilizerFrameData, std::__1::allocator<LabsCV::Core::StabilizerFrameData>>> {
    struct vector<LabsCV::Core::StabilizerFrameData, std::__1::allocator<LabsCV::Core::StabilizerFrameData>> *_field1;
};

struct LabsCVObjCppReferenceWrapper<const std::__1::vector<double, std::__1::allocator<double>>> {
    struct vector<double, std::__1::allocator<double>> *_field1;
};

struct LatLng {
    double lat;
    double lon;
};

struct LatLngBounds {
    struct LatLng sw;
    struct LatLng ne;
};

struct Layer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct LayerObserver;

struct LazyLayoutData;

struct LeakTracker<net::URLRequest>;

struct Light {
    struct Immutable<mbgl::style::Light::Impl> _field1;
    struct LightObserver *_field2;
};

struct LightObserver;

struct Limit {
    int mLimit;
};

struct LineLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct ListServicesResponse {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct RepeatedPtrField<ComposerReloaderRegistry::ReloaderService> _field3;
    int _field4;
};

struct LoadTimingInfo {
    _Bool _field1;
    unsigned int _field2;
    struct Time _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct ConnectTiming _field7;
    struct TimeTicks _field8;
    struct TimeTicks _field9;
    struct TimeTicks _field10;
    struct TimeTicks _field11;
    struct TimeTicks _field12;
    struct TimeTicks _field13;
};

struct Logger {
    CDUnknownFunctionPointerType *_field1;
};

struct MBGLView {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<mbgl::gl::Context, std::__1::default_delete<mbgl::gl::Context>> _field2;
    struct once_flag _field3;
    CDUnknownFunctionPointerType *_field4;
    id _field5;
    unsigned long long _field6;
};

struct MD5Digest {
    unsigned char _field1[16];
};

struct MGLAnnotationContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct MGLCoordinateBounds {
    struct CLLocationCoordinate2D sw;
    struct CLLocationCoordinate2D ne;
};

struct MGLCoordinateQuad {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
};

struct MGLCoordinateSpan {
    double _field1;
    double _field2;
};

struct MGLOfflinePackProgress {
    unsigned long long countOfResourcesCompleted;
    unsigned long long countOfBytesCompleted;
    unsigned long long countOfTilesCompleted;
    unsigned long long countOfTileBytesCompleted;
    unsigned long long countOfResourcesExpected;
    unsigned long long maximumResourcesExpected;
};

struct MGLRadianCoordinate2D {
    double _field1;
    double _field2;
};

struct MGLRenderFrontend;

struct MGLSphericalPosition {
    double _field1;
    double _field2;
    double _field3;
};

struct MGLStyleLayerDrawingContext {
    struct CGSize _field1;
    struct CLLocationCoordinate2D _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct MGLTransition {
    double duration;
    double delay;
};

struct MainThreadDispatcher;

struct ManyTargetTracker;

struct Map {
    struct unique_ptr<mbgl::Map::Impl, std::__1::default_delete<mbgl::Map::Impl>> _field1;
};

struct MapSnapshotter;

struct Marshaller {
    struct ObjectPoolEntry<std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>, void (*)(std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>&)> _field1;
    unsigned long long _field2;
};

struct MaskParams {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    float _field5;
    float _field6;
    _Bool _field7;
    int _field8;
    double _field9;
    int _field10;
    _Bool _field11;
    int _field12;
    _Bool _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
};

struct Mat {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
};

struct MatAllocator;

struct MatSize {
    int *p;
};

struct MatStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct MetricsMetadataContainer;

struct MetricsReporter;

struct MomentFilter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct unique_ptr<FastDnn::FastDnn, std::__1::default_delete<FastDnn::FastDnn>> _field4;
    int _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
    vector_9492931a _field8;
    vector_f9ed6fc8 _field9;
    struct Scalar_<double> _field10;
    Size__dedc3bbb _field11;
    _Bool _field12;
};

struct MossRankedMediaVariantsProviderCallback;

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NV212RGBConvertor;

struct NetLog;

struct NetLogSource {
    int _field1;
    unsigned int _field2;
};

struct NetLogWithSource {
    struct NetLogSource _field1;
    struct NetLog *_field2;
    int _field3;
};

struct NetworkApi;

struct NetworkDelegate;

struct NetworkManager;

struct NetworkManagerNotifier;

struct NetworkTrafficAnnotationTag {
    int _field1;
};

struct Nonce {
    struct UnguessableToken _field1;
};

struct NumberResponder;

struct OCSPVerifyResult {
    int _field1;
    int _field2;
};

struct ObjCppPtrWrapper<Composer::JavaScriptRuntime> {
    struct JavaScriptRuntime *o;
};

struct ObjectPool<SQLiteConnection, 63>;

struct ObjectPoolEntry<std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>, void (*)(std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>&)> {
    struct vector<Composer::Value, std::__1::allocator<Composer::Value>> _field1;
    struct ObjectPoolInner<std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>> *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct ObjectPoolInner<std::__1::vector<Composer::Value, std::__1::allocator<Composer::Value>>>;

struct ObjectPoolX<adl::media::video::IosNativeFrame>;

struct ObservableBuilder {
    Class _field1;
    id _field2;
    id _field3;
};

struct OfflineRegion {
    long long _field1;
    struct OfflineTilePyramidRegionDefinition _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
};

struct OfflineRegionStatus {
    int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct OfflineTilePyramidRegionDefinition {
    basic_string_90719d97 _field1;
    struct LatLngBounds _field2;
    double _field3;
    double _field4;
    float _field5;
};

struct Offset<Snapchat::Canvas>;

struct Offset<Snapchat::Embeddable>;

struct Offset<Snapchat::GenericAsset>;

struct Optional<url::Origin::Nonce> {
    struct OptionalStorage<url::Origin::Nonce, false, false> _field1;
};

struct Optional<url::Origin> {
    struct OptionalStorage<url::Origin, false, false> _field1;
};

struct OptionalStorage<url::Origin, false, false> {
    _Bool _field1;
    union {
        char _field1;
        struct Origin _field2;
    } _field2;
};

struct OptionalStorage<url::Origin::Nonce, false, false> {
    _Bool _field1;
    union {
        char _field1;
        struct Nonce _field2;
    } _field2;
};

struct Order;

struct OrderBy {
    struct vector<SC::Query::Order, std::__1::allocator<SC::Query::Order>> mOrders;
};

struct Origin {
    struct SchemeHostPort _field1;
    struct Optional<url::Origin::Nonce> _field2;
};

struct Overlay {
    unsigned char _field1[1];
};

struct POPAnimatorItem;

struct Params;

struct Parsed {
    struct Component _field1;
    struct Component _field2;
    struct Component _field3;
    struct Component _field4;
    struct Component _field5;
    struct Component _field6;
    struct Component _field7;
    struct Component _field8;
    _Bool _field9;
    struct Parsed *_field10;
};

struct Pimpl;

struct Platform;

struct PresenceService;

struct PresenceServiceDelegate;

struct ProgressiveDownloadCallback;

struct PropertyValue<mbgl::Color> {
    struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> _field1;
};

struct ProxyServer {
    int _field1;
    struct HostPortPair _field2;
    _Bool _field3;
};

struct R1Interval {
    struct Vector2<double> _field1;
};

struct RGB2NV21Convertor;

struct RankerCallback;

struct RasterLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct RasterSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct variant<std::__1::basic_string<char>, mbgl::Tileset> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct ReadStream;

struct ReadWritePtr<std::__1::unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>>> {
    struct shared_ptr<std::__1::unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>>> _field1;
};

struct RectTransform {
    int transformMask_;
};

struct RectTransformArray {
    struct array<LS::RectTransform, 8> _transformArray;
    unsigned long long _size;
};

struct Rect_<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReloaderService {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field3;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    int _field8;
    int _field9;
};

struct RenderData {
    struct opaqueCMSampleBuffer *sampleBuffer;
    double zoomFactor;
};

struct Renderer {
    struct unique_ptr<mbgl::Renderer::Impl, std::__1::default_delete<mbgl::Renderer::Impl>> _field1;
};

struct Rep;

struct RepeatedPtrField<Composer::Action> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<ComposerReloaderRegistry::ReloaderService> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatingCallback<void (bool, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>&)> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct RepeatingCallback<void (net::HttpRawRequestHeaders)> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct RepeatingCallback<void (scoped_refptr<const net::HttpResponseHeaders>)> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct Runnable;

struct S1Interval {
    struct Vector2<double> _field1;
};

struct S2CellId {
    unsigned long long id_;
};

struct S2CellUnion {
    CDUnknownFunctionPointerType *_field1;
    struct vector<S2CellId, std::__1::allocator<S2CellId>> _field2;
};

struct S2LatLngRect {
    CDUnknownFunctionPointerType *_field1;
    struct R1Interval _field2;
    struct S1Interval _field3;
};

struct S2Loop;

struct S2Polygon {
    CDUnknownFunctionPointerType *_field1;
    struct vector<S2Loop *, std::__1::allocator<S2Loop *>> _field2;
    struct S2LatLngRect _field3;
    char _field4;
    char _field5;
    int _field6;
};

struct SCAdMidrollTriggeringRadius {
    double timestamp;
    double timestampEpsilon;
};

struct SCAspectRatio {
    long long _field1;
    long long _field2;
};

struct SCAudioNoteWaveformAnimationFrame {
    unsigned char _field1[14];
};

struct SCAudioProcessorTapContext {
    unsigned char _field1;
    double _field2;
    double _field3;
    double _field4;
    id _field5;
    id _field6;
};

struct SCComposerCornerValues {
    struct SCComposerDoubleValue _field1;
    struct SCComposerDoubleValue _field2;
    struct SCComposerDoubleValue _field3;
    struct SCComposerDoubleValue _field4;
};

struct SCComposerDoubleValue {
    double _field1;
    _Bool _field2;
};

struct SCComposerViewLayout {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct SCContextV2ChatCounts {
    long long snaps;
    long long chats;
    long long stickers;
    long long audioNotes;
    long long videoNotes;
    long long audioCalls;
    long long videoCalls;
    long long media;
};

struct SCDocObjectClassFunctionPointer {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct SCEffectViewport {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
};

struct SCFeatureProvider {
    Class _field1;
};

struct SCImageProcessPingPongTextureContainer {
    unsigned int textures[2];
};

struct SCMapCarouselViewPadding {
    double peek;
    double spacing;
    double bottom;
};

struct SCMapCoordinateBounds {
    struct CLLocationCoordinate2D sw;
    struct CLLocationCoordinate2D ne;
};

struct SCMapCustomGLContext {
    struct CGSize _field1;
    struct CLLocationCoordinate2D _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct SCMapTouchResponderResult {
    _Bool _field1;
    _Bool _field2;
};

struct SCObservableQuery;

struct SCOperaPlaybackInfo {
    double _field1;
    _Bool _field2;
    double _field3;
    double _field4;
};

struct SCPlayerConfiguration {
    _Bool _field1;
};

struct SCRandomAccessedFrame {
    CDStruct_1b6d18a9 _field1;
    struct __CVBuffer *_field2;
    long long _field3;
};

struct SCStickerPillViewLabelFormatterSpaceIndex {
    Class _field1;
    long long _field2;
    long long _field3;
};

struct SCTCognacPresencePillState {
    _Bool present;
    unsigned long long audioStatus;
    _Bool expanded;
};

struct SCTLocalMediaViewTraits {
    double borderWidth;
    _Bool userInterfaceEnabled;
};

struct SCTMiniWaveformAttributes {
    unsigned long long numberOfLines;
    double lineWidth;
    double lineHeightMin;
    double lineHeightMax;
    double lineSpacing;
    unsigned long long lineColorHex;
};

struct SCTPresenceBitmojiState {
    double scale;
    double headOffset;
    double handsOffset;
    double draggingOffset;
    double typingArmOffset;
};

struct SCXHeatmapFuzzPoint {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SCXHeatmapPoint {
    float _field1;
    float _field2;
    float _field3;
};

struct SCXMapBounds {
    struct CLLocationCoordinate2D sw;
    struct CLLocationCoordinate2D ne;
    double zoom;
};

struct SCXTileIndex {
    char _field1;
    int _field2;
    int _field3;
};

struct SHAZAM_SIGX {
    struct unique_ptr<sig_extractor_pipe, std::__1::default_delete<sig_extractor_pipe>> _field1;
};

struct SIGContainerStyle {
    unsigned long long groupingStyle;
    unsigned long long externalEdges;
};

struct SQLiteConnection {
    struct unordered_map<std::__1::basic_string<char>, sqlite3_stmt *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, sqlite3_stmt *>>> _field1;
    struct unordered_map<long, sqlite3_stmt *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, sqlite3_stmt *>>> _field2;
    _Bool _field3;
    struct sqlite3 *_field4;
    struct unordered_map<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>>> _field5;
};

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePing:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct SSLCertRequestInfo;

struct SSLInfo {
    struct scoped_refptr<net::X509Certificate> _field1;
    struct scoped_refptr<net::X509Certificate> _field2;
    unsigned int _field3;
    unsigned short _field4;
    unsigned short _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    struct vector<net::HashValue, std::__1::allocator<net::HashValue>> _field13;
    basic_string_90719d97 _field14;
    struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> _field15;
    int _field16;
    _Bool _field17;
    struct OCSPVerifyResult _field18;
    _Bool _field19;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SampleBufferMetadata {
    int isoSpeedRating;
    float exposureTime;
    float brightness;
};

struct Scalar_<double> {
    double _field1[4];
};

struct SchemeHostPort {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    unsigned short _field3;
};

struct ScreenResolution {
    int _field1;
    int _field2;
};

struct SequenceChecker;

struct SequencedTaskRunner;

struct Service;

struct ServiceListener;

struct Session;

struct SessionDelegate;

struct ShadowNode;

struct ShadowNodeTree;

struct SignedCertificateTimestampAndStatus;

struct SingleThreadTaskRunner {
    CDUnknownFunctionPointerType *_field1;
    struct AtomicRefCount _field2;
};

struct SixdofFrameData;

struct Size {
    unsigned int _field1;
    unsigned int _field2;
};

struct Size<int> {
    int _width;
    int _height;
};

struct Size_<int> {
    int _field1;
    int _field2;
};

struct SnapCutExt;

struct SnapcodeAnalyzer;

struct SnapcodeScannedData {
    _Bool _field1;
    int _field2;
    int _field3;
    basic_string_90719d97 _field4;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field5;
};

struct SocketTag;

struct Source {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
};

struct SourceObserver;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StabilizerFrameData;

struct StatelessSession;

struct StringBox {
    struct shared_ptr<Composer::InternedString> _internedString;
    basic_string_90719d97 *_strPtr;
};

struct Style {
    struct unique_ptr<mbgl::style::Style::Impl, std::__1::default_delete<mbgl::style::Style::Impl>> _field1;
};

struct SymbolLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct System;

struct TalkCore;

struct TalkCoreDelegate;

struct TaskCompletionCallback;

struct TextureBase;

struct TextureReader;

struct TextureSet {
    unsigned int textures[3];
    unsigned int ytex;
    unsigned int utex;
    unsigned int vtex;
    unsigned int ychn;
    unsigned int uchn;
    unsigned int vchn;
    unsigned int width;
    unsigned int height;
    float yscale;
    float uscale;
    float vscale;
    _Bool texcreated;
};

struct TextureWithTransform;

struct Thread;

struct Thread<mbgl::DefaultFileSource::Impl>;

struct ThreadChecker;

struct ThreadPool;

struct Time {
    long long us_;
};

struct TimeTicks {
    long long _field1;
};

struct Timestamp {
    CDUnknownFunctionPointerType *_vptr$ISerializable;
    _Bool _isruntime;
    double seconds;
    _Bool valid;
};

struct Token {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TouchHandlingPromise {
    struct vector<std::__1::pair<LS::Rect<float>, LS::TouchType>, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> touchableRects;
};

struct TrackerParams {
    unsigned char _field1;
    _Bool _field2;
    _Bool _field3;
    unsigned char _field4;
    float _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    basic_string_90719d97 _field9;
    struct unique_ptr<LS::Tracking::Depth::Stereo::Params, std::__1::default_delete<LS::Tracking::Depth::Stereo::Params>> _field10;
};

struct TrackingData;

struct TrackingParameters;

struct TrackingSerializer;

struct Transform {
    int _field1;
    int _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UMatData;

struct URLRequest {
    CDUnknownFunctionPointerType *_field1;
    struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> _field2;
    struct SequenceChecker _field3;
    struct URLRequestContext *_field4;
    struct NetworkDelegate *_field5;
    struct NetLogWithSource _field6;
    struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> _field7;
    struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> _field8;
    struct vector<GURL, std::__1::allocator<GURL>> _field9;
    struct GURL _field10;
    struct Optional<url::Origin> _field11;
    _Bool _field12;
    struct Optional<url::Origin> _field13;
    struct GURL _field14;
    basic_string_90719d97 _field15;
    basic_string_90719d97 _field16;
    int _field17;
    int _field18;
    struct HttpRequestHeaders _field19;
    int _field20;
    int _field21;
    struct Delegate *_field22;
    struct URLRequestStatus _field23;
    struct HttpResponseInfo _field24;
    _Bool _field25;
    _Bool _field26;
    int _field27;
    struct UploadProgress _field28;
    int _field29;
    unsigned long long _field30;
    int _field31;
    _Bool _field32;
    basic_string_90719d97 _field33;
    _Bool _field34;
    struct LeakTracker<net::URLRequest> _field35;
    _Bool _field36;
    struct AuthCredentials _field37;
    struct scoped_refptr<net::AuthChallengeInfo> _field38;
    long long _field39;
    struct TimeTicks _field40;
    struct LoadTimingInfo _field41;
    struct ProxyServer _field42;
    int _field43;
    _Bool _field44;
    struct NetworkTrafficAnnotationTag _field45;
    struct SocketTag _field46;
    struct RepeatingCallback<void (net::HttpRawRequestHeaders)> _field47;
    struct RepeatingCallback<void (scoped_refptr<const net::HttpResponseHeaders>)> _field48;
    _Bool _field49;
    struct WeakPtrFactory<net::URLRequest> _field50;
};

struct URLRequestContext;

struct URLRequestContextGetter;

struct URLRequestJob;

struct URLRequestStatus {
    int _field1;
    int _field2;
};

struct UiPageChangeListener;

struct UiPageChangeNotifier;

struct UnguessableToken {
    struct Token _field1;
};

struct UploadCallback;

struct UploadDataProvider;

struct UploadDataStream;

struct UploadProgress {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct UrlRequest;

struct UrlRequestCallback;

struct UrlResponseInfo;

struct UserLogOutListener;

struct UserLogOutNotifier;

struct Value {
    unsigned long long _data;
    int _type;
    struct shared_ptr<void> _sharedPtr;
};

struct ValueFunction;

struct Vector2<double> {
    double _field1[2];
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VectorSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct variant<std::__1::basic_string<char>, mbgl::Tileset> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct VideoTimestampsDataRaw;

struct View {
    struct shared_ptr<Composer::ComposerObject> _field1;
};

struct ViewAttributesApplier {
    struct shared_ptr<Composer::BoundAttributes> _field1;
    struct ViewNode *_field2;
    struct unordered_map<Composer::StringBox, std::__1::vector<std::__1::weak_ptr<Composer::ShadowNode>, std::__1::allocator<std::__1::weak_ptr<Composer::ShadowNode>>>, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, std::__1::vector<std::__1::weak_ptr<Composer::ShadowNode>, std::__1::allocator<std::__1::weak_ptr<Composer::ShadowNode>>>>>> *_field3;
    struct ViewAttributesApplier *_field4;
    struct IViewManager *_field5;
    struct ILogger *_field6;
    _Bool _field7;
    _Bool _field8;
    struct ReadWritePtr<std::__1::unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>>> _field9;
    struct unordered_set<Composer::StringBox, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<Composer::StringBox>> _field10;
};

struct ViewLoader;

struct ViewLoaderManager;

struct ViewManager;

struct ViewNode {
    struct weak_ptr<Composer::ViewNode> _field1;
    struct YGNode *_field2;
    struct weak_ptr<Composer::ViewNode> _field3;
    struct ViewPools *_field4;
    struct unique_ptr<Composer::LazyLayoutData, std::__1::default_delete<Composer::LazyLayoutData>> _field5;
    struct ViewAttributesApplier _field6;
    struct Frame _field7;
    struct Frame _field8;
    struct Frame _field9;
    struct unique_ptr<Composer::ViewNodeScrollData, std::__1::default_delete<Composer::ViewNodeScrollData>> _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    struct bitset<25> _field15;
    struct deque<Composer::ShadowNode *, std::__1::allocator<Composer::ShadowNode *>> _field16;
    struct View _field17;
    struct StringBox _field18;
    struct StringBox _field19;
    shared_ptr_6906cf6a _field20;
    shared_ptr_6906cf6a _field21;
    shared_ptr_6906cf6a _field22;
    shared_ptr_6906cf6a _field23;
};

struct ViewNodeScrollData;

struct ViewPools;

struct VoidResponder;

struct WeakPtr<net::ChunkedDataStreamUploader> {
    struct WeakReference _field1;
    unsigned long long _field2;
};

struct WeakPtr<net::RequestTracker> {
    struct WeakReference _field1;
    unsigned long long _field2;
};

struct WeakPtrFactory<net::URLRequest> {
    struct WeakReferenceOwner _field1;
    unsigned long long _field2;
};

struct WeakReference {
    struct scoped_refptr<const base::internal::WeakReference::Flag> _field1;
};

struct WeakReferenceOwner {
    struct scoped_refptr<base::internal::WeakReference::Flag> _field1;
};

struct WrappedIOBuffer;

struct WriteStream;

struct X509Certificate;

struct YGNode;

struct YGValue {
    float _field1;
    int _field2;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __CVBuffer;

struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> {
    struct point<double> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<int, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<int, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<long, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<long, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> *__next_;
};

struct __list_node_base<net::HostPortPair, void *> {
    struct __list_node_base<net::HostPortPair, void *> *_field1;
    struct __list_node_base<net::HostPortPair, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __raw {
    unsigned long long __words[3];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct any {
    union storage_union _field1;
    struct vtable_type *_field2;
};

struct array<LS::AnalyticsManager::EventData, 18> {
    struct EventData _field1[18];
};

struct array<LS::RectTransform, 8> {
    struct RectTransform __elems_[8];
};

struct array<float, 2> {
    float _field1[2];
};

struct array<float, 3> {
    float _field1[3];
};

struct array<float, 4> {
    float _field1[4];
};

struct atomic<SCMediaScenePath> {
    _Atomic CDStruct_183601bc __a_;
};

struct atomic<bool> {
    _Atomic _Bool __a_;
};

struct atomic<int> {
    _Atomic int __a_;
};

struct atomic<long> {
    _Atomic long long __a_;
};

struct atomic<unsigned long long> {
    _Atomic unsigned long long __a_;
};

struct atomic<unsigned long> {
    _Atomic unsigned long long __a_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw __r;
            } ;
        } __value_;
    } __r_;
};

struct basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short>> {
    struct __compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short>>::__rep, std::__1::allocator<unsigned short>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bitset<25> {
    unsigned long long _field1;
};

struct condition_variable {
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field1;
};

struct deque<Composer::ShadowNode *, std::__1::allocator<Composer::ShadowNode *>> {
    struct __split_buffer<Composer::ShadowNode **, std::__1::allocator<Composer::ShadowNode **>> {
        struct ShadowNode ***_field1;
        struct ShadowNode ***_field2;
        struct ShadowNode ***_field3;
        struct __compressed_pair<Composer::ShadowNode ***, std::__1::allocator<Composer::ShadowNode **>> {
            struct ShadowNode ***_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<Composer::ShadowNode *>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<LS::CFRefHolder<opaqueCMSampleBuffer *>, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>>> {
    struct __split_buffer<LS::CFRefHolder<opaqueCMSampleBuffer *>*, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>*>> {
        CFRefHolder_41721aff **_field1;
        CFRefHolder_41721aff **_field2;
        CFRefHolder_41721aff **_field3;
        struct __compressed_pair<LS::CFRefHolder<opaqueCMSampleBuffer *>**, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>*>> {
            CFRefHolder_41721aff **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>>> {
        unsigned long long _field1;
    } _field3;
};

struct ec_key_st;

struct function<mapbox::geometry::point<double>(const mbgl::LatLng &)> {
    struct type __buf_;
    struct __base<mapbox::geometry::point<double>(const mbgl::LatLng &)> *__f_;
};

struct function<void (LS::FrameBuffer *)> {
    struct type __buf_;
    struct __base<void (LS::FrameBuffer *)> *__f_;
};

struct function<void (const LabsCV::DepthFrameData &)> {
    struct type __buf_;
    struct __base<void (const LabsCV::DepthFrameData &)> *__f_;
};

struct function<void (const adl::netio::HttpResult &)> {
    struct type __buf_;
    struct __base<void (const adl::netio::HttpResult &)> *__f_;
};

struct function<void (const float &)> {
    struct type __buf_;
    struct __base<void (const float &)> *__f_;
};

struct function<void (unsigned char *)> {
    struct type _field1;
    struct __base<void (unsigned char *)> *_field2;
};

struct future<bool> {
    struct __assoc_state<bool> *__state_;
};

struct geometry<double> {
    unsigned long long _field1;
    struct type _field2;
};

struct grpc_byte_buffer {
    void *_field1;
    int _field2;
    union grpc_byte_buffer_data _field3;
};

struct grpc_compressed_buffer {
    int _field1;
    struct grpc_slice_buffer _field2;
};

struct grpc_metadata {
    struct grpc_slice _field1;
    struct grpc_slice _field2;
    unsigned int _field3;
    struct {
        void *_field1[4];
    } _field4;
};

struct grpc_op {
    int op;
    unsigned int flags;
    void *reserved;
    union grpc_op_data data;
};

struct grpc_op_recv_close_on_server {
    int *cancelled;
};

struct grpc_op_recv_initial_metadata {
    CDStruct_183601bc *recv_initial_metadata;
};

struct grpc_op_recv_message {
    struct grpc_byte_buffer **recv_message;
};

struct grpc_op_recv_status_on_client {
    CDStruct_183601bc *trailing_metadata;
    int *status;
    struct grpc_slice *status_details;
    char **error_string;
};

struct grpc_op_send_initial_metadata {
    unsigned long long count;
    struct grpc_metadata *metadata;
    struct grpc_op_send_initial_metadata_maybe_compression_level maybe_compression_level;
};

struct grpc_op_send_initial_metadata_maybe_compression_level {
    unsigned char is_set;
    int level;
};

struct grpc_op_send_message {
    struct grpc_byte_buffer *send_message;
};

struct grpc_op_send_status_from_server {
    unsigned long long trailing_metadata_count;
    struct grpc_metadata *trailing_metadata;
    int status;
    struct grpc_slice *status_details;
};

struct grpc_slice {
    struct grpc_slice_refcount *refcount;
    union grpc_slice_data data;
};

struct grpc_slice_buffer {
    struct grpc_slice *_field1;
    struct grpc_slice *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct grpc_slice _field6[8];
};

struct grpc_slice_inlined {
    unsigned char length;
    unsigned char bytes[23];
};

struct grpc_slice_refcount;

struct grpc_slice_refcounted {
    unsigned long long length;
    char *bytes;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line_string<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
};

struct linear_ring<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
};

struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> {
    struct __list_node_base<net::HostPortPair, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<net::HostPortPair, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct map<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>, std::__1::less<LSASpectaclesLut *>, std::__1::allocator<std::__1::pair<LSASpectaclesLut *const, std::__1::shared_ptr<LS::TextureBase>>>> {
    struct __tree<std::__1::__value_type<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>>, std::__1::__map_value_compare<LSASpectaclesLut *, std::__1::__value_type<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>>, std::__1::less<LSASpectaclesLut *>, true>, std::__1::allocator<std::__1::__value_type<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<LSASpectaclesLut *, std::__1::__value_type<LSASpectaclesLut *, std::__1::shared_ptr<LS::TextureBase>>, std::__1::less<LSASpectaclesLut *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>>;

struct map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>>;

struct map<SCContextFilterDetectedObjectType, cv::Mat, std::__1::less<SCContextFilterDetectedObjectType>, std::__1::allocator<std::__1::pair<const SCContextFilterDetectedObjectType, cv::Mat>>> {
    struct __tree<std::__1::__value_type<SCContextFilterDetectedObjectType, cv::Mat>, std::__1::__map_value_compare<SCContextFilterDetectedObjectType, std::__1::__value_type<SCContextFilterDetectedObjectType, cv::Mat>, std::__1::less<SCContextFilterDetectedObjectType>, true>, std::__1::allocator<std::__1::__value_type<SCContextFilterDetectedObjectType, cv::Mat>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SCContextFilterDetectedObjectType, cv::Mat>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SCContextFilterDetectedObjectType, std::__1::__value_type<SCContextFilterDetectedObjectType, cv::Mat>, std::__1::less<SCContextFilterDetectedObjectType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<__weak Class, __weak id, std::__1::less<__weak Class>, std::__1::allocator<std::__1::pair<const __weak Class, __weak id>>> {
    struct __tree<std::__1::__value_type<__weak Class, __weak id>, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, __weak id>, std::__1::less<__weak Class>, true>, std::__1::allocator<std::__1::__value_type<__weak Class, __weak id>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__weak Class, __weak id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, __weak id>, std::__1::less<__weak Class>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>, std::__1::less<__weak Class>, std::__1::allocator<std::__1::pair<const __weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>>> {
    struct __tree<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::less<__weak Class>, true>, std::__1::allocator<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::less<__weak Class>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>>;

struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
    struct __tree<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>, std::__1::allocator<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<double, SOJUGalleryTransform *, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, SOJUGalleryTransform *>>> {
    struct __tree<std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::__map_value_compare<double, std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, SOJUGalleryTransform *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, SOJUGalleryTransform *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::less<double>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<id<MGLAnnotation>, unsigned int, std::__1::less<id<MGLAnnotation>>, std::__1::allocator<std::__1::pair<const id<MGLAnnotation>, unsigned int>>> {
    struct __tree<std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::__map_value_compare<id<MGLAnnotation>, std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::less<id<MGLAnnotation>>, true>, std::__1::allocator<std::__1::__value_type<id<MGLAnnotation>, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<MGLAnnotation>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<MGLAnnotation>, std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::less<id<MGLAnnotation>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, LS::AnalyticsManager::EventData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::AnalyticsManager::EventData>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, LS::AnalyticsManager::EventData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, LS::AnalyticsManager::EventData>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, LS::AnalyticsManager::EventData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, LS::AnalyticsManager::EventData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, LS::AnalyticsManager::EventData>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Tracking::Segmentation::TrackerData::MaskData>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct matrix4 {
    float _field1[16];
};

struct multi_polygon<double, std::vector> {
    polygon_f143bbb5 *_field1;
    polygon_f143bbb5 *_field2;
    struct __compressed_pair<mapbox::geometry::polygon<double, std::vector>*, std::__1::allocator<mapbox::geometry::polygon<double, std::vector>>> {
        polygon_f143bbb5 *_field1;
    } _field3;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct once_flag {
    unsigned long long _field1;
};

struct opaqueCMSampleBuffer;

struct optional<LS::CameraInfo::Extrinsics> {
    union {
        char __null_state_;
        struct Extrinsics __val_;
    } ;
    _Bool __engaged_;
};

struct optional<double> {
    union {
        char _field1;
        double _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mapbox::geometry::point<double>> {
    union {
        char _field1;
        struct point<double> _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mbgl::LatLng> {
    union {
        char _field1;
        struct LatLng _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mbgl::LatLngBounds> {
    union {
        char __null_state_;
        struct LatLngBounds __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::basic_string<char>> {
    union {
        char _field1;
        basic_string_90719d97 _field2;
    } _field1;
    _Bool _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<LS::Rect<float>, LS::TouchType>;

struct point<double> {
    double _field1;
    double _field2;
};

struct polygon<double, std::vector> {
    linear_ring_cd7ceeaf *_field1;
    linear_ring_cd7ceeaf *_field2;
    struct __compressed_pair<mapbox::geometry::linear_ring<double, std::vector>*, std::__1::allocator<mapbox::geometry::linear_ring<double, std::vector>>> {
        linear_ring_cd7ceeaf *_field1;
    } _field3;
};

struct queue<LS::CFRefHolder<opaqueCMSampleBuffer *>, std::__1::deque<LS::CFRefHolder<opaqueCMSampleBuffer *>, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>>>> {
    struct deque<LS::CFRefHolder<opaqueCMSampleBuffer *>, std::__1::allocator<LS::CFRefHolder<opaqueCMSampleBuffer *>>> _field1;
};

struct scoped_refptr<base::SequencedTaskRunner> {
    struct SequencedTaskRunner *_field1;
};

struct scoped_refptr<base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<const base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<net::AuthChallengeInfo> {
    struct AuthChallengeInfo *_field1;
};

struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
};

struct scoped_refptr<net::HttpResponseHeaders> {
    struct HttpResponseHeaders *_field1;
};

struct scoped_refptr<net::IOBufferWithSize> {
    struct IOBufferWithSize *_field1;
};

struct scoped_refptr<net::SSLCertRequestInfo> {
    struct SSLCertRequestInfo *_field1;
};

struct scoped_refptr<net::URLRequestContextGetter> {
    struct URLRequestContextGetter *_field1;
};

struct scoped_refptr<net::WrappedIOBuffer> {
    struct WrappedIOBuffer *_field1;
};

struct scoped_refptr<net::X509Certificate> {
    struct X509Certificate *_field1;
};

struct set<flatbuffers::Offset<flatbuffers::String>, flatbuffers::FlatBufferBuilder::StringOffsetCompare, std::__1::allocator<flatbuffers::Offset<flatbuffers::String>>>;

struct set<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
    struct __tree<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<adl::media::FrameReceiver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<Composer::BoundAttributes> {
    struct BoundAttributes *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Composer::ComposerObject> {
    struct ComposerObject *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Composer::InternedString> {
    struct InternedString *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Composer::ShadowNodeTree> {
    struct ShadowNodeTree *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Composer::ValueFunction> {
    struct ValueFunction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Composer::ViewLoader> {
    struct ViewLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Composer::ViewNode> {
    struct ViewNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::Audio::AudioToolboxOutputCollection::Impl> {
    struct Impl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::BaseFaceMesh> {
    struct BaseFaceMesh *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::ComplexEffect> {
    struct ComplexEffect *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::ImageObjC> {
    struct ImageObjC *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::LSLocalizationDelegate> {
    struct LSLocalizationDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::SnapcodeAnalyzer> {
    struct SnapcodeAnalyzer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::TextureBase> {
    struct TextureBase *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::TextureWithTransform> {
    struct TextureWithTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::TrackingSerializer> {
    struct TrackingSerializer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAAnalyticsDelegateWrapper> {
    struct LSAAnalyticsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAAudioDelegateWrapper> {
    struct LSAAudioDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSABitmoji3DDelegateWrapper> {
    struct LSABitmoji3DDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSABitmojiEffectDelegateWrapper> {
    struct LSABitmojiEffectDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAClientInterfaceDelegateWrapper> {
    struct LSAClientInterfaceDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSACompassTrackerDelegate> {
    struct LSACompassTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSADebugDelegateWrapper> {
    struct LSADebugDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSADeviceMotionTrackerDelegate> {
    struct LSADeviceMotionTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAExpressionsDelegateWrapper> {
    struct LSAExpressionsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAGeoDataDelegateWrapper> {
    struct LSAGeoDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAHapticFeedbackDelegateWrapper> {
    struct LSAHapticFeedbackDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAHintsDelegateWrapper> {
    struct LSAHintsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALensAnalyticsDataDelegateWrapper> {
    struct LSALensAnalyticsDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALifeCycleDelegateWrapper> {
    struct LSALifeCycleDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALocationTrackerDelegate> {
    struct LSALocationTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAMetricsDelegateWrapper> {
    struct LSAMetricsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAOfflineDepthDataProviderWrapper> {
    struct LSAOfflineDepthDataProviderWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAPersistenceDelegateWrapper> {
    struct LSAPersistenceDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAPlatformTrackingDelegateWrapper> {
    struct LSAPlatformTrackingDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSARemoteAssetsDelegateWrapper> {
    struct LSARemoteAssetsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAScenariumAudioDelegateWrapper> {
    struct LSAScenariumAudioDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSASnapRecordingDelegateWrapper> {
    struct LSASnapRecordingDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSASnapcodeDelegateWrapper> {
    struct LSASnapcodeDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSASpectaclesOfflineSixDofDataProviderWrapper> {
    struct LSASpectaclesOfflineSixDofDataProviderWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAUriDelegateWrapper> {
    struct LSAUriDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAUserDataDelegateWrapper> {
    struct LSAUserDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAVideoCodecFactory> {
    struct LSAVideoCodecFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LabsCV::ImuSensorFusion::ImuDataRaw> {
    struct ImuDataRaw *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ManyTargetTracker> {
    struct ManyTargetTracker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<OE::FileFactory> {
    struct FileFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<OE::Segmentation::System> {
    struct System *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<SC::Query::BaseExpr<bool>> {
    struct BaseExpr<bool> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ShaderProcess::BokehEffect> {
    struct BokehEffect *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::DecoderCallback> {
    struct DecoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::DirectRendererCallback> {
    struct DirectRendererCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::EncoderCallback> {
    struct EncoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::NumberResponder> {
    struct NumberResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::Service> {
    struct Service *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::ServiceListener> {
    struct ServiceListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::VoidResponder> {
    struct VoidResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::shared_state::Connection> {
    struct Connection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<adl::media::video::ObjectPoolX<adl::media::video::IosNativeFrame>> {
    struct ObjectPoolX<adl::media::video::IosNativeFrame> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Image::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Layer::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Light::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Source::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> {
    struct Pimpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mbgl::FileSource> {
    struct FileSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mbgl::ThreadPool> {
    struct ThreadPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::composer::AttributesBindingContext> {
    struct AttributesBindingContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::composer::DaemonClient> {
    struct DaemonClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::composer::JSModule> {
    struct JSModule *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::composer::JSRuntime> {
    struct JSRuntime *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::BehaviorCallbackWriter> {
    struct BehaviorCallbackWriter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::BoltResult> {
    struct BoltResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::ContentManager> {
    struct ContentManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::ContentResult> {
    struct ContentResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::GetUntrackedCachesCompletionCallback> {
    struct GetUntrackedCachesCompletionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::InterimObjectUnzipper> {
    struct InterimObjectUnzipper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::InterimPayloadProcessor> {
    struct InterimPayloadProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::ReadStream> {
    struct ReadStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::TaskCompletionCallback> {
    struct TaskCompletionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_manager::WriteStream> {
    struct WriteStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_resolution::BoltNetworkRulesProviderCallback> {
    struct BoltNetworkRulesProviderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_resolution::ContentResolver> {
    struct ContentResolver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::content_resolution::MossRankedMediaVariantsProviderCallback> {
    struct MossRankedMediaVariantsProviderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::fidelius::FideliusHelper> {
    struct FideliusHelper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::file_manager::GetResult> {
    struct GetResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::graphene::ClientMetricsProcessor> {
    struct ClientMetricsProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::graphene::ConfigureClientMetrics> {
    struct ConfigureClientMetrics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::grpc::AuthContextCallback> {
    struct AuthContextCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::grpc::ClientAttestationCallback> {
    struct ClientAttestationCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::grpc::GrpcManager> {
    struct GrpcManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::hello::Hello> {
    struct Hello *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::ConversationManager> {
    struct ConversationManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::FeedManager> {
    struct FeedManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::FetchUserDisplayNameCallback> {
    struct FetchUserDisplayNameCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::StatelessSession> {
    struct StatelessSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::messaging::UploadCallback> {
    struct UploadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network::NetworkManager> {
    struct NetworkManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_api::NetworkApi> {
    struct NetworkApi *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_manager::NetworkManager> {
    struct NetworkManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_manager::ProgressiveDownloadCallback> {
    struct ProgressiveDownloadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_manager::UrlRequest> {
    struct UrlRequest *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_manager::UrlRequestCallback> {
    struct UrlRequestCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_manager::UrlResponseInfo> {
    struct UrlResponseInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::BandwidthChangeListener> {
    struct BandwidthChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::BandwidthChangeNotifier> {
    struct BandwidthChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::ConnectivityChangeListener> {
    struct ConnectivityChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::ConnectivityChangeNotifier> {
    struct ConnectivityChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::DataSaverModeChangeListener> {
    struct DataSaverModeChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::DataSaverModeChangeNotifier> {
    struct DataSaverModeChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::HttpRequestAndInfo> {
    struct HttpRequestAndInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::HttpRequestBuilder> {
    struct HttpRequestBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::HttpRequestCallback> {
    struct HttpRequestCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::HttpRequestProgressiveCallback> {
    struct HttpRequestProgressiveCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::NetworkManagerNotifier> {
    struct NetworkManagerNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::RankerCallback> {
    struct RankerCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::Runnable> {
    struct Runnable *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::UiPageChangeListener> {
    struct UiPageChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::UiPageChangeNotifier> {
    struct UiPageChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::UploadDataProvider> {
    struct UploadDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::UserLogOutListener> {
    struct UserLogOutListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::network_types::UserLogOutNotifier> {
    struct UserLogOutNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::shims::DataProvider> {
    struct DataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::shims::DispatchTask> {
    struct DispatchTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::shims::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<snap::shims::Platform> {
    struct Platform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>>> {
    struct map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>>> {
    struct map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>>> {
    struct map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>>> {
    struct unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>>> {
    struct vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>>> {
    struct vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>>> {
    struct vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>>> {
    struct vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>>> {
    struct vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>>> {
    struct vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSADrawingComponentListener>, std::__1::allocator<__weak id<LSADrawingComponentListener>>>> {
    struct vector<__weak id<LSADrawingComponentListener>, std::__1::allocator<__weak id<LSADrawingComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>>> {
    struct vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>>> {
    struct vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAMetricsListener>, std::__1::allocator<__weak id<LSAMetricsListener>>>> {
    struct vector<__weak id<LSAMetricsListener>, std::__1::allocator<__weak id<LSAMetricsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>>> {
    struct vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSASerializationComponentListener>, std::__1::allocator<__weak id<LSASerializationComponentListener>>>> {
    struct vector<__weak id<LSASerializationComponentListener>, std::__1::allocator<__weak id<LSASerializationComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>>> {
    struct vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>>> {
    struct vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>>> {
    struct vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>>> {
    struct vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>>> {
    struct vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>>> {
    struct vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>>> {
    struct vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCArroyoConversationDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoConversationDataUpdateListener>>>> {
    struct vector<__weak id<SCArroyoConversationDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoConversationDataUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCArroyoFeedDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoFeedDataUpdateListener>>>> {
    struct vector<__weak id<SCArroyoFeedDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoFeedDataUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>>> {
    struct vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBandwidthEstimatorListener>, std::__1::allocator<__weak id<SCBandwidthEstimatorListener>>>> {
    struct vector<__weak id<SCBandwidthEstimatorListener>, std::__1::allocator<__weak id<SCBandwidthEstimatorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBatchCaptureConfigurationListener>, std::__1::allocator<__weak id<SCBatchCaptureConfigurationListener>>>> {
    struct vector<__weak id<SCBatchCaptureConfigurationListener>, std::__1::allocator<__weak id<SCBatchCaptureConfigurationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>>> {
    struct vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBitmojiSelfieManagerListener>, std::__1::allocator<__weak id<SCBitmojiSelfieManagerListener>>>> {
    struct vector<__weak id<SCBitmojiSelfieManagerListener>, std::__1::allocator<__weak id<SCBitmojiSelfieManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBloopsAPIListener>, std::__1::allocator<__weak id<SCBloopsAPIListener>>>> {
    struct vector<__weak id<SCBloopsAPIListener>, std::__1::allocator<__weak id<SCBloopsAPIListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBoltNetworkMappingListener>, std::__1::allocator<__weak id<SCBoltNetworkMappingListener>>>> {
    struct vector<__weak id<SCBoltNetworkMappingListener>, std::__1::allocator<__weak id<SCBoltNetworkMappingListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCameraLensesEventListener>, std::__1::allocator<__weak id<SCCameraLensesEventListener>>>> {
    struct vector<__weak id<SCCameraLensesEventListener>, std::__1::allocator<__weak id<SCCameraLensesEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatConversationMetadataUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationMetadataUpdaterListener>>>> {
    struct vector<__weak id<SCChatConversationMetadataUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationMetadataUpdaterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>>> {
    struct vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>>> {
    struct vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatInputStateListener>, std::__1::allocator<__weak id<SCChatInputStateListener>>>> {
    struct vector<__weak id<SCChatInputStateListener>, std::__1::allocator<__weak id<SCChatInputStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatInputTextViewListener>, std::__1::allocator<__weak id<SCChatInputTextViewListener>>>> {
    struct vector<__weak id<SCChatInputTextViewListener>, std::__1::allocator<__weak id<SCChatInputTextViewListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>>> {
    struct vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatMetadataStoreListener>, std::__1::allocator<__weak id<SCChatMetadataStoreListener>>>> {
    struct vector<__weak id<SCChatMetadataStoreListener>, std::__1::allocator<__weak id<SCChatMetadataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>>> {
    struct vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>>> {
    struct vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>>> {
    struct vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>>> {
    struct vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>>> {
    struct vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCognacAdsListener>, std::__1::allocator<__weak id<SCCognacAdsListener>>>> {
    struct vector<__weak id<SCCognacAdsListener>, std::__1::allocator<__weak id<SCCognacAdsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCognacAppViewLifeCycleListener>, std::__1::allocator<__weak id<SCCognacAppViewLifeCycleListener>>>> {
    struct vector<__weak id<SCCognacAppViewLifeCycleListener>, std::__1::allocator<__weak id<SCCognacAppViewLifeCycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCognacLeaderboardDataProviderListener>, std::__1::allocator<__weak id<SCCognacLeaderboardDataProviderListener>>>> {
    struct vector<__weak id<SCCognacLeaderboardDataProviderListener>, std::__1::allocator<__weak id<SCCognacLeaderboardDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>>> {
    struct vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCConnectionClassManagerV2Listener>, std::__1::allocator<__weak id<SCConnectionClassManagerV2Listener>>>> {
    struct vector<__weak id<SCConnectionClassManagerV2Listener>, std::__1::allocator<__weak id<SCConnectionClassManagerV2Listener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>>> {
    struct vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCustomStoriesUpdateListener>, std::__1::allocator<__weak id<SCCustomStoriesUpdateListener>>>> {
    struct vector<__weak id<SCCustomStoriesUpdateListener>, std::__1::allocator<__weak id<SCCustomStoriesUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>>> {
    struct vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCEventListener>, std::__1::allocator<__weak id<SCEventListener>>>> {
    struct vector<__weak id<SCEventListener>, std::__1::allocator<__weak id<SCEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFeatureLensSideButtonUpdateListener>, std::__1::allocator<__weak id<SCFeatureLensSideButtonUpdateListener>>>> {
    struct vector<__weak id<SCFeatureLensSideButtonUpdateListener>, std::__1::allocator<__weak id<SCFeatureLensSideButtonUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>>> {
    struct vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>>> {
    struct vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>>> {
    struct vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>>> {
    struct vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>>> {
    struct vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryFaceManagerListener>, std::__1::allocator<__weak id<SCGalleryFaceManagerListener>>>> {
    struct vector<__weak id<SCGalleryFaceManagerListener>, std::__1::allocator<__weak id<SCGalleryFaceManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>>> {
    struct vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>>> {
    struct vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>>> {
    struct vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>>> {
    struct vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>>> {
    struct vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>>> {
    struct vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>>> {
    struct vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGroupsDataRequestListener>, std::__1::allocator<__weak id<SCGroupsDataRequestListener>>>> {
    struct vector<__weak id<SCGroupsDataRequestListener>, std::__1::allocator<__weak id<SCGroupsDataRequestListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>>> {
    struct vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>>> {
    struct vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImageProcessLensCommandListener>, std::__1::allocator<__weak id<SCImageProcessLensCommandListener>>>> {
    struct vector<__weak id<SCImageProcessLensCommandListener>, std::__1::allocator<__weak id<SCImageProcessLensCommandListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>>> {
    struct vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImpalaBusinessProfileManagerListener>, std::__1::allocator<__weak id<SCImpalaBusinessProfileManagerListener>>>> {
    struct vector<__weak id<SCImpalaBusinessProfileManagerListener>, std::__1::allocator<__weak id<SCImpalaBusinessProfileManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImpalaWatchedStateUpdateListener>, std::__1::allocator<__weak id<SCImpalaWatchedStateUpdateListener>>>> {
    struct vector<__weak id<SCImpalaWatchedStateUpdateListener>, std::__1::allocator<__weak id<SCImpalaWatchedStateUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCInviteFriendStateListener>, std::__1::allocator<__weak id<SCInviteFriendStateListener>>>> {
    struct vector<__weak id<SCInviteFriendStateListener>, std::__1::allocator<__weak id<SCInviteFriendStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>>> {
    struct vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCKeyboardObserverListener>, std::__1::allocator<__weak id<SCKeyboardObserverListener>>>> {
    struct vector<__weak id<SCKeyboardObserverListener>, std::__1::allocator<__weak id<SCKeyboardObserverListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLSIServiceListener>, std::__1::allocator<__weak id<SCLSIServiceListener>>>> {
    struct vector<__weak id<SCLSIServiceListener>, std::__1::allocator<__weak id<SCLSIServiceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensDataFetcherListener>, std::__1::allocator<__weak id<SCLensDataFetcherListener>>>> {
    struct vector<__weak id<SCLensDataFetcherListener>, std::__1::allocator<__weak id<SCLensDataFetcherListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>>> {
    struct vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensDataProviderRegistryUpdateListener>, std::__1::allocator<__weak id<SCLensDataProviderRegistryUpdateListener>>>> {
    struct vector<__weak id<SCLensDataProviderRegistryUpdateListener>, std::__1::allocator<__weak id<SCLensDataProviderRegistryUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>>> {
    struct vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>>> {
    struct vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensHintListener>, std::__1::allocator<__weak id<SCLensHintListener>>>> {
    struct vector<__weak id<SCLensHintListener>, std::__1::allocator<__weak id<SCLensHintListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensInitLoggerListener>, std::__1::allocator<__weak id<SCLensInitLoggerListener>>>> {
    struct vector<__weak id<SCLensInitLoggerListener>, std::__1::allocator<__weak id<SCLensInitLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensLifecycleListener>, std::__1::allocator<__weak id<SCLensLifecycleListener>>>> {
    struct vector<__weak id<SCLensLifecycleListener>, std::__1::allocator<__weak id<SCLensLifecycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensMetadataStoreListener>, std::__1::allocator<__weak id<SCLensMetadataStoreListener>>>> {
    struct vector<__weak id<SCLensMetadataStoreListener>, std::__1::allocator<__weak id<SCLensMetadataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensRemoteAssetsUploadOperationListener>, std::__1::allocator<__weak id<SCLensRemoteAssetsUploadOperationListener>>>> {
    struct vector<__weak id<SCLensRemoteAssetsUploadOperationListener>, std::__1::allocator<__weak id<SCLensRemoteAssetsUploadOperationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>>> {
    struct vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensUsageTrackerListener>, std::__1::allocator<__weak id<SCLensUsageTrackerListener>>>> {
    struct vector<__weak id<SCLensUsageTrackerListener>, std::__1::allocator<__weak id<SCLensUsageTrackerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensUserSessionLifeCycleListener>, std::__1::allocator<__weak id<SCLensUserSessionLifeCycleListener>>>> {
    struct vector<__weak id<SCLensUserSessionLifeCycleListener>, std::__1::allocator<__weak id<SCLensUserSessionLifeCycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationListener>, std::__1::allocator<__weak id<SCLocationListener>>>> {
    struct vector<__weak id<SCLocationListener>, std::__1::allocator<__weak id<SCLocationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationManagerOperationalListener>, std::__1::allocator<__weak id<SCLocationManagerOperationalListener>>>> {
    struct vector<__weak id<SCLocationManagerOperationalListener>, std::__1::allocator<__weak id<SCLocationManagerOperationalListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>>> {
    struct vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationSharingPreferencesListener>, std::__1::allocator<__weak id<SCLocationSharingPreferencesListener>>>> {
    struct vector<__weak id<SCLocationSharingPreferencesListener>, std::__1::allocator<__weak id<SCLocationSharingPreferencesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMGLMapViewListener>, std::__1::allocator<__weak id<SCMGLMapViewListener>>>> {
    struct vector<__weak id<SCMGLMapViewListener>, std::__1::allocator<__weak id<SCMGLMapViewListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>>> {
    struct vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>>> {
    struct vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>>> {
    struct vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>>> {
    struct vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>>> {
    struct vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapChromeButtonControllerListener>, std::__1::allocator<__weak id<SCMapChromeButtonControllerListener>>>> {
    struct vector<__weak id<SCMapChromeButtonControllerListener>, std::__1::allocator<__weak id<SCMapChromeButtonControllerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapConfigurationListener>, std::__1::allocator<__weak id<SCMapConfigurationListener>>>> {
    struct vector<__weak id<SCMapConfigurationListener>, std::__1::allocator<__weak id<SCMapConfigurationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapLoadingStateListener>, std::__1::allocator<__weak id<SCMapLoadingStateListener>>>> {
    struct vector<__weak id<SCMapLoadingStateListener>, std::__1::allocator<__weak id<SCMapLoadingStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapPeopleFriendsListener>, std::__1::allocator<__weak id<SCMapPeopleFriendsListener>>>> {
    struct vector<__weak id<SCMapPeopleFriendsListener>, std::__1::allocator<__weak id<SCMapPeopleFriendsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapPeopleGroupsListener>, std::__1::allocator<__weak id<SCMapPeopleGroupsListener>>>> {
    struct vector<__weak id<SCMapPeopleGroupsListener>, std::__1::allocator<__weak id<SCMapPeopleGroupsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapPersonLocationStringsListener>, std::__1::allocator<__weak id<SCMapPersonLocationStringsListener>>>> {
    struct vector<__weak id<SCMapPersonLocationStringsListener>, std::__1::allocator<__weak id<SCMapPersonLocationStringsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapPersonLocationsListener>, std::__1::allocator<__weak id<SCMapPersonLocationsListener>>>> {
    struct vector<__weak id<SCMapPersonLocationsListener>, std::__1::allocator<__weak id<SCMapPersonLocationsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapStatusFetcherListener>, std::__1::allocator<__weak id<SCMapStatusFetcherListener>>>> {
    struct vector<__weak id<SCMapStatusFetcherListener>, std::__1::allocator<__weak id<SCMapStatusFetcherListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapStatusViewedStateListener>, std::__1::allocator<__weak id<SCMapStatusViewedStateListener>>>> {
    struct vector<__weak id<SCMapStatusViewedStateListener>, std::__1::allocator<__weak id<SCMapStatusViewedStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapViewportListener>, std::__1::allocator<__weak id<SCMapViewportListener>>>> {
    struct vector<__weak id<SCMapViewportListener>, std::__1::allocator<__weak id<SCMapViewportListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapViewportMetadataUpdatesListener>, std::__1::allocator<__weak id<SCMapViewportMetadataUpdatesListener>>>> {
    struct vector<__weak id<SCMapViewportMetadataUpdatesListener>, std::__1::allocator<__weak id<SCMapViewportMetadataUpdatesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapViewportTargetListener>, std::__1::allocator<__weak id<SCMapViewportTargetListener>>>> {
    struct vector<__weak id<SCMapViewportTargetListener>, std::__1::allocator<__weak id<SCMapViewportTargetListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapboxStyleProviderListener>, std::__1::allocator<__weak id<SCMapboxStyleProviderListener>>>> {
    struct vector<__weak id<SCMapboxStyleProviderListener>, std::__1::allocator<__weak id<SCMapboxStyleProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>>> {
    struct vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>>> {
    struct vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMediaUploadStateListener>, std::__1::allocator<__weak id<SCMediaUploadStateListener>>>> {
    struct vector<__weak id<SCMediaUploadStateListener>, std::__1::allocator<__weak id<SCMediaUploadStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>>> {
    struct vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>>> {
    struct vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>>> {
    struct vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCNetworkReconnectListener>, std::__1::allocator<__weak id<SCNetworkReconnectListener>>>> {
    struct vector<__weak id<SCNetworkReconnectListener>, std::__1::allocator<__weak id<SCNetworkReconnectListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>>> {
    struct vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>>> {
    struct vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>>> {
    struct vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>>> {
    struct vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>>> {
    struct vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>>> {
    struct vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPortraitModeFilterListener>, std::__1::allocator<__weak id<SCPortraitModeFilterListener>>>> {
    struct vector<__weak id<SCPortraitModeFilterListener>, std::__1::allocator<__weak id<SCPortraitModeFilterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPostableStoriesUpdateListener>, std::__1::allocator<__weak id<SCPostableStoriesUpdateListener>>>> {
    struct vector<__weak id<SCPostableStoriesUpdateListener>, std::__1::allocator<__weak id<SCPostableStoriesUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>>> {
    struct vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPreviewContextImageClassificationListener>, std::__1::allocator<__weak id<SCPreviewContextImageClassificationListener>>>> {
    struct vector<__weak id<SCPreviewContextImageClassificationListener>, std::__1::allocator<__weak id<SCPreviewContextImageClassificationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>>> {
    struct vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSIResultsListener>, std::__1::allocator<__weak id<SCSIResultsListener>>>> {
    struct vector<__weak id<SCSIResultsListener>, std::__1::allocator<__weak id<SCSIResultsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSceneIntelligenceListener>, std::__1::allocator<__weak id<SCSceneIntelligenceListener>>>> {
    struct vector<__weak id<SCSceneIntelligenceListener>, std::__1::allocator<__weak id<SCSceneIntelligenceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCScheduledLensMetadataStoreListener>, std::__1::allocator<__weak id<SCScheduledLensMetadataStoreListener>>>> {
    struct vector<__weak id<SCScheduledLensMetadataStoreListener>, std::__1::allocator<__weak id<SCScheduledLensMetadataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>>> {
    struct vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>>> {
    struct vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>>> {
    struct vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSecretFeatureCheckerListener>, std::__1::allocator<__weak id<SCSecretFeatureCheckerListener>>>> {
    struct vector<__weak id<SCSecretFeatureCheckerListener>, std::__1::allocator<__weak id<SCSecretFeatureCheckerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>>> {
    struct vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>>> {
    struct vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>>> {
    struct vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSnapchattersDataRequestListener>, std::__1::allocator<__weak id<SCSnapchattersDataRequestListener>>>> {
    struct vector<__weak id<SCSnapchattersDataRequestListener>, std::__1::allocator<__weak id<SCSnapchattersDataRequestListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>>> {
    struct vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>>> {
    struct vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>>> {
    struct vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStudioLensLoggerListener>, std::__1::allocator<__weak id<SCStudioLensLoggerListener>>>> {
    struct vector<__weak id<SCStudioLensLoggerListener>, std::__1::allocator<__weak id<SCStudioLensLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTCognacSessionWrapperListener>, std::__1::allocator<__weak id<SCTCognacSessionWrapperListener>>>> {
    struct vector<__weak id<SCTCognacSessionWrapperListener>, std::__1::allocator<__weak id<SCTCognacSessionWrapperListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>>> {
    struct vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTLocalMediaViewListener>, std::__1::allocator<__weak id<SCTLocalMediaViewListener>>>> {
    struct vector<__weak id<SCTLocalMediaViewListener>, std::__1::allocator<__weak id<SCTLocalMediaViewListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>>> {
    struct vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>>> {
    struct vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>>> {
    struct vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3FullscreenStateListener>, std::__1::allocator<__weak id<SCTV3FullscreenStateListener>>>> {
    struct vector<__weak id<SCTV3FullscreenStateListener>, std::__1::allocator<__weak id<SCTV3FullscreenStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>>> {
    struct vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>>> {
    struct vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUcoStateListener>, std::__1::allocator<__weak id<SCUcoStateListener>>>> {
    struct vector<__weak id<SCUcoStateListener>, std::__1::allocator<__weak id<SCUcoStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUnifiedProfileViewControllerLifecycleListener>, std::__1::allocator<__weak id<SCUnifiedProfileViewControllerLifecycleListener>>>> {
    struct vector<__weak id<SCUnifiedProfileViewControllerLifecycleListener>, std::__1::allocator<__weak id<SCUnifiedProfileViewControllerLifecycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>>> {
    struct vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUnlockablesControllerListener>, std::__1::allocator<__weak id<SCUnlockablesControllerListener>>>> {
    struct vector<__weak id<SCUnlockablesControllerListener>, std::__1::allocator<__weak id<SCUnlockablesControllerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpNextGroupViewModelProviderListener>, std::__1::allocator<__weak id<SCUpNextGroupViewModelProviderListener>>>> {
    struct vector<__weak id<SCUpNextGroupViewModelProviderListener>, std::__1::allocator<__weak id<SCUpNextGroupViewModelProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpdateListener>, std::__1::allocator<__weak id<SCUpdateListener>>>> {
    struct vector<__weak id<SCUpdateListener>, std::__1::allocator<__weak id<SCUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>>> {
    struct vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>>> {
    struct vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUserSelectionListener>, std::__1::allocator<__weak id<SCUserSelectionListener>>>> {
    struct vector<__weak id<SCUserSelectionListener>, std::__1::allocator<__weak id<SCUserSelectionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCXBitmojiLayerModelProviderListener>, std::__1::allocator<__weak id<SCXBitmojiLayerModelProviderListener>>>> {
    struct vector<__weak id<SCXBitmojiLayerModelProviderListener>, std::__1::allocator<__weak id<SCXBitmojiLayerModelProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::AsyncTask> {
    struct AsyncTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CallingManager> {
    struct CallingManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CognacSession> {
    struct CognacSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CognacSessionDelegate> {
    struct CognacSessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CompletionHandler> {
    struct CompletionHandler *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::MetricsMetadataContainer> {
    struct MetricsMetadataContainer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::MetricsReporter> {
    struct MetricsReporter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::PresenceService> {
    struct PresenceService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::PresenceServiceDelegate> {
    struct PresenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::SessionDelegate> {
    struct SessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::TalkCore> {
    struct TalkCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::TalkCoreDelegate> {
    struct TalkCoreDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sig_extractor_pipe;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct sqlite3;

struct stream_engine {
    void *_field1;
    void *_field2;
};

struct tmat3x3<float, glm::packed_highp> {
    struct tvec3<float, glm::packed_highp> _field1[3];
};

struct tuple<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
        unique_ptr_430f0bd3 _field1;
        shared_ptr_a0cbdd2a _field2;
        shared_ptr_a0cbdd2a _field3;
        shared_ptr_a0cbdd2a _field4;
        struct CGSize _field5;
    } _field1;
};

struct tvec3<float, glm::packed_highp> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
};

struct type {
    unsigned char __lx[56];
};

struct unique_ptr<CallbackLogSink, std::__1::default_delete<CallbackLogSink>> {
    struct __compressed_pair<CallbackLogSink *, std::__1::default_delete<CallbackLogSink>> {
        struct CallbackLogSink *__value_;
    } __ptr_;
};

struct unique_ptr<Composer::LazyLayoutData, std::__1::default_delete<Composer::LazyLayoutData>> {
    struct __compressed_pair<Composer::LazyLayoutData *, std::__1::default_delete<Composer::LazyLayoutData>> {
        struct LazyLayoutData *_field1;
    } _field1;
};

struct unique_ptr<Composer::ViewLoaderManager, std::__1::default_delete<Composer::ViewLoaderManager>> {
    struct __compressed_pair<Composer::ViewLoaderManager *, std::__1::default_delete<Composer::ViewLoaderManager>> {
        struct ViewLoaderManager *__value_;
    } __ptr_;
};

struct unique_ptr<Composer::ViewNodeScrollData, std::__1::default_delete<Composer::ViewNodeScrollData>> {
    struct __compressed_pair<Composer::ViewNodeScrollData *, std::__1::default_delete<Composer::ViewNodeScrollData>> {
        struct ViewNodeScrollData *_field1;
    } _field1;
};

struct unique_ptr<ComposerIOS::JavaScriptBridge, std::__1::default_delete<ComposerIOS::JavaScriptBridge>> {
    struct __compressed_pair<ComposerIOS::JavaScriptBridge *, std::__1::default_delete<ComposerIOS::JavaScriptBridge>> {
        struct JavaScriptBridge *__value_;
    } __ptr_;
};

struct unique_ptr<ComposerIOS::Logger, std::__1::default_delete<ComposerIOS::Logger>> {
    struct __compressed_pair<ComposerIOS::Logger *, std::__1::default_delete<ComposerIOS::Logger>> {
        struct Logger *__value_;
    } __ptr_;
};

struct unique_ptr<ComposerIOS::MainThreadDispatcher, std::__1::default_delete<ComposerIOS::MainThreadDispatcher>> {
    struct __compressed_pair<ComposerIOS::MainThreadDispatcher *, std::__1::default_delete<ComposerIOS::MainThreadDispatcher>> {
        struct MainThreadDispatcher *__value_;
    } __ptr_;
};

struct unique_ptr<ComposerIOS::ViewManager, std::__1::default_delete<ComposerIOS::ViewManager>> {
    struct __compressed_pair<ComposerIOS::ViewManager *, std::__1::default_delete<ComposerIOS::ViewManager>> {
        struct ViewManager *__value_;
    } __ptr_;
};

struct unique_ptr<FastDnn::FastDnn, std::__1::default_delete<FastDnn::FastDnn>> {
    struct __compressed_pair<FastDnn::FastDnn *, std::__1::default_delete<FastDnn::FastDnn>> {
        struct FastDnn *_field1;
    } _field1;
};

struct unique_ptr<GURL, std::__1::default_delete<GURL>> {
    struct __compressed_pair<GURL *, std::__1::default_delete<GURL>> {
        struct GURL *_field1;
    } _field1;
};

struct unique_ptr<LS::AudioChain::AudioChainMain::Impl, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> {
    struct __compressed_pair<LS::AudioChain::AudioChainMain::Impl *, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<LS::FrameBuffer, std::__1::function<void (LS::FrameBuffer *)>> {
    struct __compressed_pair<LS::FrameBuffer *, std::__1::function<void (LS::FrameBuffer *)>> {
        struct FrameBuffer *__value_;
        struct function<void (LS::FrameBuffer *)> __value_;
    } __ptr_;
};

struct unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>> {
    struct __compressed_pair<LS::ImageObjC *, std::__1::default_delete<LS::ImageObjC>> {
        struct ImageObjC *_field1;
    } _field1;
};

struct unique_ptr<LS::NV212RGBConvertor, std::__1::default_delete<LS::NV212RGBConvertor>> {
    struct __compressed_pair<LS::NV212RGBConvertor *, std::__1::default_delete<LS::NV212RGBConvertor>> {
        struct NV212RGBConvertor *__value_;
    } __ptr_;
};

struct unique_ptr<LS::RGB2NV21Convertor, std::__1::default_delete<LS::RGB2NV21Convertor>> {
    struct __compressed_pair<LS::RGB2NV21Convertor *, std::__1::default_delete<LS::RGB2NV21Convertor>> {
        struct RGB2NV21Convertor *__value_;
    } __ptr_;
};

struct unique_ptr<LS::TextureReader, std::__1::default_delete<LS::TextureReader>> {
    struct __compressed_pair<LS::TextureReader *, std::__1::default_delete<LS::TextureReader>> {
        struct TextureReader *__value_;
    } __ptr_;
};

struct unique_ptr<LS::Tracking::Depth::Stereo::Params, std::__1::default_delete<LS::Tracking::Depth::Stereo::Params>> {
    struct __compressed_pair<LS::Tracking::Depth::Stereo::Params *, std::__1::default_delete<LS::Tracking::Depth::Stereo::Params>> {
        struct Params *_field1;
    } _field1;
};

struct unique_ptr<LabsCV::CoreSystem, std::__1::default_delete<LabsCV::CoreSystem>> {
    struct __compressed_pair<LabsCV::CoreSystem *, std::__1::default_delete<LabsCV::CoreSystem>> {
        struct CoreSystem *__value_;
    } __ptr_;
};

struct unique_ptr<MGLRenderFrontend, std::__1::default_delete<MGLRenderFrontend>> {
    struct __compressed_pair<MGLRenderFrontend *, std::__1::default_delete<MGLRenderFrontend>> {
        struct MGLRenderFrontend *__value_;
    } __ptr_;
};

struct unique_ptr<OE::BitmojiAvatarClassification::System, std::__1::default_delete<OE::BitmojiAvatarClassification::System>> {
    struct __compressed_pair<OE::BitmojiAvatarClassification::System *, std::__1::default_delete<OE::BitmojiAvatarClassification::System>> {
        struct System *__value_;
    } __ptr_;
};

struct unique_ptr<SC::ObjectPool<SQLiteConnection, 63>, std::__1::default_delete<SC::ObjectPool<SQLiteConnection, 63>>> {
    struct __compressed_pair<SC::ObjectPool<SQLiteConnection, 63>*, std::__1::default_delete<SC::ObjectPool<SQLiteConnection, 63>>> {
        struct ObjectPool<SQLiteConnection, 63> *__value_;
    } __ptr_;
};

struct unique_ptr<SC::Query::BaseExpr<bool>, std::__1::default_delete<SC::Query::BaseExpr<bool>>> {
    struct __compressed_pair<SC::Query::BaseExpr<bool>*, std::__1::default_delete<SC::Query::BaseExpr<bool>>> {
        struct BaseExpr<bool> *_field1;
    } _field1;
};

struct unique_ptr<SCObservableQuery, std::__1::default_delete<SCObservableQuery>> {
    struct __compressed_pair<SCObservableQuery *, std::__1::default_delete<SCObservableQuery>> {
        struct SCObservableQuery *__value_;
    } __ptr_;
};

struct unique_ptr<SQLiteConnection, std::__1::default_delete<SQLiteConnection>> {
    struct __compressed_pair<SQLiteConnection *, std::__1::default_delete<SQLiteConnection>> {
        struct SQLiteConnection *__value_;
    } __ptr_;
};

struct unique_ptr<SnapCutExt, std::__1::default_delete<SnapCutExt>> {
    struct __compressed_pair<SnapCutExt *, std::__1::default_delete<SnapCutExt>> {
        struct SnapCutExt *__value_;
    } __ptr_;
};

struct unique_ptr<adl::media::IosCamera::Impl, std::__1::default_delete<adl::media::IosCamera::Impl>> {
    struct __compressed_pair<adl::media::IosCamera::Impl *, std::__1::default_delete<adl::media::IosCamera::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>> {
    struct __compressed_pair<base::DictionaryValue *, std::__1::default_delete<base::DictionaryValue>> {
        struct DictionaryValue *_field1;
    } _field1;
};

struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> {
    struct __compressed_pair<base::Thread *, std::__1::default_delete<base::Thread>> {
        struct Thread *_field1;
    } _field1;
};

struct unique_ptr<char, base::FreeDeleter> {
    struct __compressed_pair<char *, base::FreeDeleter> {
        char *_field1;
    } _field1;
};

struct unique_ptr<cronet::CronetPrefsManager, std::__1::default_delete<cronet::CronetPrefsManager>> {
    struct __compressed_pair<cronet::CronetPrefsManager *, std::__1::default_delete<cronet::CronetPrefsManager>> {
        struct CronetPrefsManager *_field1;
    } _field1;
};

struct unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>;

struct unique_ptr<mbgl::Actor<mbgl::ResourceTransform>, std::__1::default_delete<mbgl::Actor<mbgl::ResourceTransform>>> {
    struct __compressed_pair<mbgl::Actor<mbgl::ResourceTransform>*, std::__1::default_delete<mbgl::Actor<mbgl::ResourceTransform>>> {
        struct Actor<mbgl::ResourceTransform> *__value_;
    } __ptr_;
};

struct unique_ptr<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>, std::__1::default_delete<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>>> {
    struct __compressed_pair<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>*, std::__1::default_delete<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>>> {
        struct Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>> *__value_;
    } __ptr_;
};

struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> {
    struct __compressed_pair<mbgl::AsyncRequest *, std::__1::default_delete<mbgl::AsyncRequest>> {
        struct AsyncRequest *_field1;
    } _field1;
};

struct unique_ptr<mbgl::Map::Impl, std::__1::default_delete<mbgl::Map::Impl>> {
    struct __compressed_pair<mbgl::Map::Impl *, std::__1::default_delete<mbgl::Map::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::MapSnapshotter, std::__1::default_delete<mbgl::MapSnapshotter>> {
    struct __compressed_pair<mbgl::MapSnapshotter *, std::__1::default_delete<mbgl::MapSnapshotter>> {
        struct MapSnapshotter *__value_;
    } __ptr_;
};

struct unique_ptr<mbgl::Renderer::Impl, std::__1::default_delete<mbgl::Renderer::Impl>> {
    struct __compressed_pair<mbgl::Renderer::Impl *, std::__1::default_delete<mbgl::Renderer::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::gl::Context, std::__1::default_delete<mbgl::gl::Context>> {
    struct __compressed_pair<mbgl::gl::Context *, std::__1::default_delete<mbgl::gl::Context>> {
        struct Context *_field1;
    } _field1;
};

struct unique_ptr<mbgl::style::Image, std::__1::default_delete<mbgl::style::Image>> {
    struct __compressed_pair<mbgl::style::Image *, std::__1::default_delete<mbgl::style::Image>> {
        struct Image *_field1;
    } _field1;
};

struct unique_ptr<mbgl::style::Layer, std::__1::default_delete<mbgl::style::Layer>> {
    struct __compressed_pair<mbgl::style::Layer *, std::__1::default_delete<mbgl::style::Layer>> {
        struct Layer *__value_;
    } __ptr_;
};

struct unique_ptr<mbgl::style::Source, std::__1::default_delete<mbgl::style::Source>> {
    struct __compressed_pair<mbgl::style::Source *, std::__1::default_delete<mbgl::style::Source>> {
        struct Source *__value_;
    } __ptr_;
};

struct unique_ptr<mbgl::style::Style::Impl, std::__1::default_delete<mbgl::style::Style::Impl>> {
    struct __compressed_pair<mbgl::style::Style::Impl *, std::__1::default_delete<mbgl::style::Style::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> {
    struct __compressed_pair<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>*, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> {
        struct Thread<mbgl::DefaultFileSource::Impl> *_field1;
    } _field1;
};

struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> {
    struct __compressed_pair<net::CertVerifier *, std::__1::default_delete<net::CertVerifier>> {
        struct CertVerifier *_field1;
    } _field1;
};

struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> {
    struct __compressed_pair<net::CookieStore *, std::__1::default_delete<net::CookieStore>> {
        struct CookieStore *_field1;
    } _field1;
};

struct unique_ptr<net::FileNetLogObserver, std::__1::default_delete<net::FileNetLogObserver>> {
    struct __compressed_pair<net::FileNetLogObserver *, std::__1::default_delete<net::FileNetLogObserver>> {
        struct FileNetLogObserver *_field1;
    } _field1;
};

struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> {
    struct __compressed_pair<net::NetLog *, std::__1::default_delete<net::NetLog>> {
        struct NetLog *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> {
    struct __compressed_pair<net::URLRequestContext *, std::__1::default_delete<net::URLRequestContext>> {
        struct URLRequestContext *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> {
    struct __compressed_pair<net::URLRequestJob *, std::__1::default_delete<net::URLRequestJob>> {
        struct URLRequestJob *_field1;
    } _field1;
};

struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> {
    struct __compressed_pair<net::UploadDataStream *, std::__1::default_delete<net::UploadDataStream>> {
        struct UploadDataStream *_field1;
    } _field1;
};

struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>;

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__value_;
    } __ptr_;
};

struct unique_ptr<sig_extractor_pipe, std::__1::default_delete<sig_extractor_pipe>> {
    struct __compressed_pair<sig_extractor_pipe *, std::__1::default_delete<sig_extractor_pipe>> {
        struct sig_extractor_pipe *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<int, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<long, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> {
    struct __compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []>> {
        char *_field1;
    } _field1;
};

struct unordered_map<Composer::StringBox, Composer::AppliedAttribute, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, Composer::AppliedAttribute>>>;

struct unordered_map<Composer::StringBox, std::__1::vector<std::__1::weak_ptr<Composer::ShadowNode>, std::__1::allocator<std::__1::weak_ptr<Composer::ShadowNode>>>, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<std::__1::pair<const Composer::StringBox, std::__1::vector<std::__1::weak_ptr<Composer::ShadowNode>, std::__1::allocator<std::__1::weak_ptr<Composer::ShadowNode>>>>>>;

struct unordered_map<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *), std::__1::hash<SCEffectViewportManagerFrameKind>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, std::__1::allocator<std::__1::pair<const SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>>> {
    struct __hash_table<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, std::__1::__unordered_map_hasher<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, std::__1::hash<SCEffectViewportManagerFrameKind>, true>, std::__1::__unordered_map_equal<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, true>, std::__1::allocator<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, std::__1::hash<SCEffectViewportManagerFrameKind>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect (^)(SCEffectViewportManager *)>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SCEffectViewportManagerFrameKind, CGRect, std::__1::hash<SCEffectViewportManagerFrameKind>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, std::__1::allocator<std::__1::pair<const SCEffectViewportManagerFrameKind, CGRect>>> {
    struct __hash_table<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, std::__1::__unordered_map_hasher<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, std::__1::hash<SCEffectViewportManagerFrameKind>, true>, std::__1::__unordered_map_equal<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, true>, std::__1::allocator<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, std::__1::hash<SCEffectViewportManagerFrameKind>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SCEffectViewportManagerFrameKind, std::__1::__hash_value_type<SCEffectViewportManagerFrameKind, CGRect>, std::__1::equal_to<SCEffectViewportManagerFrameKind>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SCLensInfoMetricType, SCLensInfoMetric *, std::__1::hash<SCLensInfoMetricType>, std::__1::equal_to<SCLensInfoMetricType>, std::__1::allocator<std::__1::pair<const SCLensInfoMetricType, SCLensInfoMetric *>>> {
    struct __hash_table<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, std::__1::__unordered_map_hasher<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, std::__1::hash<SCLensInfoMetricType>, true>, std::__1::__unordered_map_equal<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, std::__1::equal_to<SCLensInfoMetricType>, true>, std::__1::allocator<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, std::__1::hash<SCLensInfoMetricType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetric *>, std::__1::equal_to<SCLensInfoMetricType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<SCLensInfoMetricType, SCLensInfoMetricView *, std::__1::hash<SCLensInfoMetricType>, std::__1::equal_to<SCLensInfoMetricType>, std::__1::allocator<std::__1::pair<const SCLensInfoMetricType, SCLensInfoMetricView *>>> {
    struct __hash_table<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, std::__1::__unordered_map_hasher<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, std::__1::hash<SCLensInfoMetricType>, true>, std::__1::__unordered_map_equal<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, std::__1::equal_to<SCLensInfoMetricType>, true>, std::__1::allocator<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, std::__1::hash<SCLensInfoMetricType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SCLensInfoMetricType, std::__1::__hash_value_type<SCLensInfoMetricType, SCLensInfoMetricView *>, std::__1::equal_to<SCLensInfoMetricType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<SCLensSharedStateClient>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<SCLensSharedStateClient>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<SCLensSharedStateClient>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, NSString *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, NSString *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, NSString *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, NSString *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, NSString *>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, NSString *>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, SCDocObjectClassFunctionPointer, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, SCDocObjectClassFunctionPointer>>> {
    struct __hash_table<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, sqlite3_stmt *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, sqlite3_stmt *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, sqlite3_stmt *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, SQLiteConnection::IndexStatus, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, SQLiteConnection::IndexStatus>>>>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, unsigned long long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, unsigned long long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, mapbox::geometry::value, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mapbox::geometry::value>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, sqlite3_stmt *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, sqlite3_stmt *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, MGLAnnotationContext, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MGLAnnotationContext>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<Composer::StringBox, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<Composer::StringBox>> {
    struct __hash_table<Composer::StringBox, std::__1::hash<Composer::StringBox>, std::__1::equal_to<Composer::StringBox>, std::__1::allocator<Composer::StringBox>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*>, std::__1::allocator<std::__1::__hash_node<Composer::StringBox, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<Composer::StringBox, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<Composer::StringBox>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<Composer::StringBox>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
    struct __hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>, std::__1::allocator<std::__1::__hash_node<int, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<int, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<int>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<int>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
    struct __hash_table<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>, std::__1::allocator<std::__1::__hash_node<long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<long, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<long>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<long>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct value {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mapbox::geometry::geometry<double>, mapbox::geometry::feature<double>, mapbox::geometry::feature_collection<double, std::vector>> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mbgl::SymbolAnnotation, mbgl::LineAnnotation, mbgl::FillAnnotation> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<std::__1::basic_string<char>, mbgl::Tileset> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<unsigned long long, long long, double, std::__1::basic_string<char>> {
    unsigned long long _field1;
    struct type _field2;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
};

struct vector<CMTime, std::__1::allocator<CMTime>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<CMTime *, std::__1::allocator<CMTime>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<Composer::Value, std::__1::allocator<Composer::Value>> {
    struct Value *_field1;
    struct Value *_field2;
    struct __compressed_pair<Composer::Value *, std::__1::allocator<Composer::Value>> {
        struct Value *_field1;
    } _field3;
};

struct vector<GURL, std::__1::allocator<GURL>> {
    struct GURL *_field1;
    struct GURL *_field2;
    struct __compressed_pair<GURL *, std::__1::allocator<GURL>> {
        struct GURL *_field1;
    } _field3;
};

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__value_;
    } __end_cap_;
};

struct vector<LS::DeviceMotionSample, std::__1::allocator<LS::DeviceMotionSample>> {
    struct DeviceMotionSample *__begin_;
    struct DeviceMotionSample *__end_;
    struct __compressed_pair<LS::DeviceMotionSample *, std::__1::allocator<LS::DeviceMotionSample>> {
        struct DeviceMotionSample *__value_;
    } __end_cap_;
};

struct vector<LSASixDofFrame *, std::__1::allocator<LSASixDofFrame *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<LSASixDofFrame *__strong *, std::__1::allocator<LSASixDofFrame *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<LabsCV::Core::AlignmentFrameData, std::__1::allocator<LabsCV::Core::AlignmentFrameData>>;

struct vector<LabsCV::Core::SixdofFrameData, std::__1::allocator<LabsCV::Core::SixdofFrameData>>;

struct vector<LabsCV::Core::StabilizerFrameData, std::__1::allocator<LabsCV::Core::StabilizerFrameData>>;

struct vector<S2CellId, std::__1::allocator<S2CellId>> {
    struct S2CellId *_field1;
    struct S2CellId *_field2;
    struct __compressed_pair<S2CellId *, std::__1::allocator<S2CellId>> {
        struct S2CellId *_field1;
    } _field3;
};

struct vector<S2Loop *, std::__1::allocator<S2Loop *>> {
    struct S2Loop **_field1;
    struct S2Loop **_field2;
    struct __compressed_pair<S2Loop **, std::__1::allocator<S2Loop *>> {
        struct S2Loop **_field1;
    } _field3;
};

struct vector<SC::Query::Order, std::__1::allocator<SC::Query::Order>> {
    struct Order *__begin_;
    struct Order *__end_;
    struct __compressed_pair<SC::Query::Order *, std::__1::allocator<SC::Query::Order>> {
        struct Order *__value_;
    } __end_cap_;
};

struct vector<SCDisposableObserver *, std::__1::allocator<SCDisposableObserver *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCDisposableObserver *__strong *, std::__1::allocator<SCDisposableObserver *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<SCDocObject *, std::__1::allocator<SCDocObject *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCDocObject *__strong *, std::__1::allocator<SCDocObject *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<SCFlatMapProxyObserver *, std::__1::allocator<SCFlatMapProxyObserver *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCFlatMapProxyObserver *__strong *, std::__1::allocator<SCFlatMapProxyObserver *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>>;

struct vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>>;

struct vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>>;

struct vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>>;

struct vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>>;

struct vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>>;

struct vector<__weak id<LSADrawingComponentListener>, std::__1::allocator<__weak id<LSADrawingComponentListener>>>;

struct vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>>;

struct vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>>;

struct vector<__weak id<LSAMetricsListener>, std::__1::allocator<__weak id<LSAMetricsListener>>>;

struct vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>>;

struct vector<__weak id<LSASerializationComponentListener>, std::__1::allocator<__weak id<LSASerializationComponentListener>>>;

struct vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>>;

struct vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>>;

struct vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>>;

struct vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>>;

struct vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>>;

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>>;

struct vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>>;

struct vector<__weak id<SCArroyoConversationDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoConversationDataUpdateListener>>>;

struct vector<__weak id<SCArroyoFeedDataUpdateListener>, std::__1::allocator<__weak id<SCArroyoFeedDataUpdateListener>>>;

struct vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>>;

struct vector<__weak id<SCBandwidthEstimatorListener>, std::__1::allocator<__weak id<SCBandwidthEstimatorListener>>>;

struct vector<__weak id<SCBatchCaptureConfigurationListener>, std::__1::allocator<__weak id<SCBatchCaptureConfigurationListener>>>;

struct vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>>;

struct vector<__weak id<SCBitmojiSelfieManagerListener>, std::__1::allocator<__weak id<SCBitmojiSelfieManagerListener>>>;

struct vector<__weak id<SCBloopsAPIListener>, std::__1::allocator<__weak id<SCBloopsAPIListener>>>;

struct vector<__weak id<SCBoltNetworkMappingListener>, std::__1::allocator<__weak id<SCBoltNetworkMappingListener>>>;

struct vector<__weak id<SCCameraLensesEventListener>, std::__1::allocator<__weak id<SCCameraLensesEventListener>>>;

struct vector<__weak id<SCChatConversationMetadataUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationMetadataUpdaterListener>>>;

struct vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>>;

struct vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>>;

struct vector<__weak id<SCChatInputStateListener>, std::__1::allocator<__weak id<SCChatInputStateListener>>>;

struct vector<__weak id<SCChatInputTextViewListener>, std::__1::allocator<__weak id<SCChatInputTextViewListener>>>;

struct vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>>;

struct vector<__weak id<SCChatMetadataStoreListener>, std::__1::allocator<__weak id<SCChatMetadataStoreListener>>>;

struct vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>>;

struct vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>>;

struct vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>>;

struct vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>>;

struct vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>>;

struct vector<__weak id<SCCognacAdsListener>, std::__1::allocator<__weak id<SCCognacAdsListener>>>;

struct vector<__weak id<SCCognacAppViewLifeCycleListener>, std::__1::allocator<__weak id<SCCognacAppViewLifeCycleListener>>>;

struct vector<__weak id<SCCognacLeaderboardDataProviderListener>, std::__1::allocator<__weak id<SCCognacLeaderboardDataProviderListener>>>;

struct vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>>;

struct vector<__weak id<SCConnectionClassManagerV2Listener>, std::__1::allocator<__weak id<SCConnectionClassManagerV2Listener>>>;

struct vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>>;

struct vector<__weak id<SCCustomStoriesUpdateListener>, std::__1::allocator<__weak id<SCCustomStoriesUpdateListener>>>;

struct vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>>;

struct vector<__weak id<SCEventListener>, std::__1::allocator<__weak id<SCEventListener>>>;

struct vector<__weak id<SCFeatureLensSideButtonUpdateListener>, std::__1::allocator<__weak id<SCFeatureLensSideButtonUpdateListener>>>;

struct vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>>;

struct vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>>;

struct vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>>;

struct vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>>;

struct vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>>;

struct vector<__weak id<SCGalleryFaceManagerListener>, std::__1::allocator<__weak id<SCGalleryFaceManagerListener>>>;

struct vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>>;

struct vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>>;

struct vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>>;

struct vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>>;

struct vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>>;

struct vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>>;

struct vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>>;

struct vector<__weak id<SCGroupsDataRequestListener>, std::__1::allocator<__weak id<SCGroupsDataRequestListener>>>;

struct vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>>;

struct vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>>;

struct vector<__weak id<SCImageProcessLensCommandListener>, std::__1::allocator<__weak id<SCImageProcessLensCommandListener>>>;

struct vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>>;

struct vector<__weak id<SCImpalaBusinessProfileManagerListener>, std::__1::allocator<__weak id<SCImpalaBusinessProfileManagerListener>>>;

struct vector<__weak id<SCImpalaWatchedStateUpdateListener>, std::__1::allocator<__weak id<SCImpalaWatchedStateUpdateListener>>>;

struct vector<__weak id<SCInviteFriendStateListener>, std::__1::allocator<__weak id<SCInviteFriendStateListener>>>;

struct vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>>;

struct vector<__weak id<SCKeyboardObserverListener>, std::__1::allocator<__weak id<SCKeyboardObserverListener>>>;

struct vector<__weak id<SCLSIServiceListener>, std::__1::allocator<__weak id<SCLSIServiceListener>>>;

struct vector<__weak id<SCLensDataFetcherListener>, std::__1::allocator<__weak id<SCLensDataFetcherListener>>>;

struct vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>>;

struct vector<__weak id<SCLensDataProviderRegistryUpdateListener>, std::__1::allocator<__weak id<SCLensDataProviderRegistryUpdateListener>>>;

struct vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>>;

struct vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>>;

struct vector<__weak id<SCLensHintListener>, std::__1::allocator<__weak id<SCLensHintListener>>>;

struct vector<__weak id<SCLensInitLoggerListener>, std::__1::allocator<__weak id<SCLensInitLoggerListener>>>;

struct vector<__weak id<SCLensLifecycleListener>, std::__1::allocator<__weak id<SCLensLifecycleListener>>>;

struct vector<__weak id<SCLensMetadataStoreListener>, std::__1::allocator<__weak id<SCLensMetadataStoreListener>>>;

struct vector<__weak id<SCLensRemoteAssetsUploadOperationListener>, std::__1::allocator<__weak id<SCLensRemoteAssetsUploadOperationListener>>>;

struct vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>>;

struct vector<__weak id<SCLensUsageTrackerListener>, std::__1::allocator<__weak id<SCLensUsageTrackerListener>>>;

struct vector<__weak id<SCLensUserSessionLifeCycleListener>, std::__1::allocator<__weak id<SCLensUserSessionLifeCycleListener>>>;

struct vector<__weak id<SCLocationListener>, std::__1::allocator<__weak id<SCLocationListener>>>;

struct vector<__weak id<SCLocationManagerOperationalListener>, std::__1::allocator<__weak id<SCLocationManagerOperationalListener>>>;

struct vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>>;

struct vector<__weak id<SCLocationSharingPreferencesListener>, std::__1::allocator<__weak id<SCLocationSharingPreferencesListener>>>;

struct vector<__weak id<SCMGLMapViewListener>, std::__1::allocator<__weak id<SCMGLMapViewListener>>>;

struct vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>>;

struct vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>>;

struct vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>>;

struct vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>>;

struct vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>>;

struct vector<__weak id<SCMapChromeButtonControllerListener>, std::__1::allocator<__weak id<SCMapChromeButtonControllerListener>>>;

struct vector<__weak id<SCMapConfigurationListener>, std::__1::allocator<__weak id<SCMapConfigurationListener>>>;

struct vector<__weak id<SCMapLoadingStateListener>, std::__1::allocator<__weak id<SCMapLoadingStateListener>>>;

struct vector<__weak id<SCMapPeopleFriendsListener>, std::__1::allocator<__weak id<SCMapPeopleFriendsListener>>>;

struct vector<__weak id<SCMapPeopleGroupsListener>, std::__1::allocator<__weak id<SCMapPeopleGroupsListener>>>;

struct vector<__weak id<SCMapPersonLocationStringsListener>, std::__1::allocator<__weak id<SCMapPersonLocationStringsListener>>>;

struct vector<__weak id<SCMapPersonLocationsListener>, std::__1::allocator<__weak id<SCMapPersonLocationsListener>>>;

struct vector<__weak id<SCMapStatusFetcherListener>, std::__1::allocator<__weak id<SCMapStatusFetcherListener>>>;

struct vector<__weak id<SCMapStatusViewedStateListener>, std::__1::allocator<__weak id<SCMapStatusViewedStateListener>>>;

struct vector<__weak id<SCMapViewportListener>, std::__1::allocator<__weak id<SCMapViewportListener>>>;

struct vector<__weak id<SCMapViewportMetadataUpdatesListener>, std::__1::allocator<__weak id<SCMapViewportMetadataUpdatesListener>>>;

struct vector<__weak id<SCMapViewportTargetListener>, std::__1::allocator<__weak id<SCMapViewportTargetListener>>>;

struct vector<__weak id<SCMapboxStyleProviderListener>, std::__1::allocator<__weak id<SCMapboxStyleProviderListener>>>;

struct vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>>;

struct vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>>;

struct vector<__weak id<SCMediaUploadStateListener>, std::__1::allocator<__weak id<SCMediaUploadStateListener>>>;

struct vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>>;

struct vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>>;

struct vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>>;

struct vector<__weak id<SCNetworkReconnectListener>, std::__1::allocator<__weak id<SCNetworkReconnectListener>>>;

struct vector<__weak id<SCObserver>, std::__1::allocator<__weak id<SCObserver>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<SCObserver>*, std::__1::allocator<__weak id<SCObserver>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>>;

struct vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>>;

struct vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>>;

struct vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>>;

struct vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>>;

struct vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>>;

struct vector<__weak id<SCPortraitModeFilterListener>, std::__1::allocator<__weak id<SCPortraitModeFilterListener>>>;

struct vector<__weak id<SCPostableStoriesUpdateListener>, std::__1::allocator<__weak id<SCPostableStoriesUpdateListener>>>;

struct vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>>;

struct vector<__weak id<SCPreviewContextImageClassificationListener>, std::__1::allocator<__weak id<SCPreviewContextImageClassificationListener>>>;

struct vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>>;

struct vector<__weak id<SCSIResultsListener>, std::__1::allocator<__weak id<SCSIResultsListener>>>;

struct vector<__weak id<SCSceneIntelligenceListener>, std::__1::allocator<__weak id<SCSceneIntelligenceListener>>>;

struct vector<__weak id<SCScheduledLensMetadataStoreListener>, std::__1::allocator<__weak id<SCScheduledLensMetadataStoreListener>>>;

struct vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>>;

struct vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>>;

struct vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>>;

struct vector<__weak id<SCSecretFeatureCheckerListener>, std::__1::allocator<__weak id<SCSecretFeatureCheckerListener>>>;

struct vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>>;

struct vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>>;

struct vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>>;

struct vector<__weak id<SCSnapchattersDataRequestListener>, std::__1::allocator<__weak id<SCSnapchattersDataRequestListener>>>;

struct vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>>;

struct vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>>;

struct vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>>;

struct vector<__weak id<SCStudioLensLoggerListener>, std::__1::allocator<__weak id<SCStudioLensLoggerListener>>>;

struct vector<__weak id<SCTCognacSessionWrapperListener>, std::__1::allocator<__weak id<SCTCognacSessionWrapperListener>>>;

struct vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>>;

struct vector<__weak id<SCTLocalMediaViewListener>, std::__1::allocator<__weak id<SCTLocalMediaViewListener>>>;

struct vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>>;

struct vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>>;

struct vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>>;

struct vector<__weak id<SCTV3FullscreenStateListener>, std::__1::allocator<__weak id<SCTV3FullscreenStateListener>>>;

struct vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>>;

struct vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>>;

struct vector<__weak id<SCUcoStateListener>, std::__1::allocator<__weak id<SCUcoStateListener>>>;

struct vector<__weak id<SCUnifiedProfileViewControllerLifecycleListener>, std::__1::allocator<__weak id<SCUnifiedProfileViewControllerLifecycleListener>>>;

struct vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>>;

struct vector<__weak id<SCUnlockablesControllerListener>, std::__1::allocator<__weak id<SCUnlockablesControllerListener>>>;

struct vector<__weak id<SCUpNextGroupViewModelProviderListener>, std::__1::allocator<__weak id<SCUpNextGroupViewModelProviderListener>>>;

struct vector<__weak id<SCUpdateListener>, std::__1::allocator<__weak id<SCUpdateListener>>>;

struct vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>>;

struct vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>>;

struct vector<__weak id<SCUserSelectionListener>, std::__1::allocator<__weak id<SCUserSelectionListener>>>;

struct vector<__weak id<SCXBitmojiLayerModelProviderListener>, std::__1::allocator<__weak id<SCXBitmojiLayerModelProviderListener>>>;

struct vector<const char *, std::__1::allocator<const char *>> {
    char **_field1;
    char **_field2;
    struct __compressed_pair<const char **, std::__1::allocator<const char *>> {
        char **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>>;

struct vector<flatbuffers::FlatBufferBuilder::FieldLoc, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> {
    struct FieldLoc *__begin_;
    struct FieldLoc *__end_;
    struct __compressed_pair<flatbuffers::FlatBufferBuilder::FieldLoc *, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> {
        struct FieldLoc *__value_;
    } __end_cap_;
};

struct vector<flatbuffers::Offset<Snapchat::Canvas>, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
    struct Offset<Snapchat::Canvas> *_field1;
    struct Offset<Snapchat::Canvas> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Canvas>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
        struct Offset<Snapchat::Canvas> *_field1;
    } _field3;
};

struct vector<flatbuffers::Offset<Snapchat::Embeddable>, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
    struct Offset<Snapchat::Embeddable> *_field1;
    struct Offset<Snapchat::Embeddable> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Embeddable>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
        struct Offset<Snapchat::Embeddable> *_field1;
    } _field3;
};

struct vector<flatbuffers::Offset<Snapchat::GenericAsset>, std::__1::allocator<flatbuffers::Offset<Snapchat::GenericAsset>>> {
    struct Offset<Snapchat::GenericAsset> *_field1;
    struct Offset<Snapchat::GenericAsset> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::GenericAsset>*, std::__1::allocator<flatbuffers::Offset<Snapchat::GenericAsset>>> {
        struct Offset<Snapchat::GenericAsset> *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<mapbox::geometry::value, std::__1::allocator<mapbox::geometry::value>> {
    struct value *_field1;
    struct value *_field2;
    struct __compressed_pair<mapbox::geometry::value *, std::__1::allocator<mapbox::geometry::value>> {
        struct value *_field1;
    } _field3;
};

struct vector<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
    variant_fb0212ef *_field1;
    variant_fb0212ef *_field2;
    struct __compressed_pair<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>*, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
        variant_fb0212ef *_field1;
    } _field3;
};

struct vector<mbgl::FeatureType, std::__1::allocator<mbgl::FeatureType>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<mbgl::FeatureType *, std::__1::allocator<mbgl::FeatureType>> {
        unsigned char *_field1;
    } _field3;
};

struct vector<mbgl::style::Filter, std::__1::allocator<mbgl::style::Filter>> {
    struct Filter *_field1;
    struct Filter *_field2;
    struct __compressed_pair<mbgl::style::Filter *, std::__1::allocator<mbgl::style::Filter>> {
        struct Filter *_field1;
    } _field3;
};

struct vector<net::HashValue, std::__1::allocator<net::HashValue>> {
    struct HashValue *_field1;
    struct HashValue *_field2;
    struct __compressed_pair<net::HashValue *, std::__1::allocator<net::HashValue>> {
        struct HashValue *_field1;
    } _field3;
};

struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
    struct HeaderKeyValuePair *_field1;
    struct HeaderKeyValuePair *_field2;
    struct __compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
        struct HeaderKeyValuePair *_field1;
    } _field3;
};

struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
    struct SignedCertificateTimestampAndStatus *_field1;
    struct SignedCertificateTimestampAndStatus *_field2;
    struct __compressed_pair<net::SignedCertificateTimestampAndStatus *, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
        struct SignedCertificateTimestampAndStatus *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<std::__1::pair<LS::Rect<float>, LS::TouchType>, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> {
    struct pair<LS::Rect<float>, LS::TouchType> *__begin_;
    struct pair<LS::Rect<float>, LS::TouchType> *__end_;
    struct __compressed_pair<std::__1::pair<LS::Rect<float>, LS::TouchType>*, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> {
        struct pair<LS::Rect<float>, LS::TouchType> *__value_;
    } __end_cap_;
};

struct vector<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>, std::__1::allocator<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>>> {
    struct unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>> *_field1;
    struct unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>*, std::__1::allocator<std::__1::unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>>>> {
        struct unique_ptr<cronet::URLRequestContextConfig::Pkp, std::__1::default_delete<cronet::URLRequestContextConfig::Pkp>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>*, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
        struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    vector_f9ed6fc8 *_field1;
    vector_f9ed6fc8 *_field2;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        vector_f9ed6fc8 *_field1;
    } _field3;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector_downward {
    struct Allocator *allocator_;
    _Bool own_allocator_;
    unsigned long long initial_size_;
    unsigned long long reserved_;
    char *buf_;
    char *cur_;
};

struct vtable_type;

struct weak_ptr<Composer::ViewNode> {
    struct ViewNode *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<LS::Audio::ISpeakerOutputFactory> {
    struct ISpeakerOutputFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct DepthFrame _field3;
    struct DepthFrame _field4;
} TrackerData_f4bd6ab9;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} CDStruct_f6649601;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long width;
    unsigned long long height;
    unsigned long long depth;
} CDStruct_da2e99ad;

typedef struct {
    unsigned long long width;
    unsigned long long height;
} CDStruct_5e758c1a;

typedef struct {
    unsigned long long state;
    id *itemsPtr;
    unsigned long long *mutationsPtr;
    unsigned long long extra[5];
} CDStruct_58648341;

typedef struct {
    unsigned long long _field1;
} CDStruct_69d7cc99;

typedef struct {
    float lastBlobIntensity[187];
    float *blobs[187];
    float *intensity[187];
    int shapeType;
} CDStruct_54ed90eb;

typedef struct {
    MISSING_TYPE *_field1[4];
} CDStruct_f1db2b5e;

typedef struct {
    unsigned short _field1[7];
} CDStruct_177a585b;

typedef struct {
    unsigned short _field1[8];
} CDStruct_135e654f;

typedef struct {
    void *reserved[8];
} CDStruct_d7a492ad;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    unsigned int reserved:3;
    unsigned int x:20;
    unsigned int y:20;
    unsigned int z:20;
    unsigned int g:1;
} CDStruct_bac8f6e9;

typedef struct {
    double _field1;
    _Bool _field2;
    long long _field3;
    long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
} CDStruct_cb8b52ca;

typedef struct {
    double cameraRingDiameter;
    double cameraRingCutoutDiameter;
    double cameraRingOpacity;
    double spinnerDiameter;
    double spinnerThickness;
    double ringOutlineOpacity;
} CDStruct_c528e9ca;

typedef struct {
    double currentValue;
    double targetValue;
    double diffValue;
    double fadingDuration;
    double fadingStartTime;
} CDStruct_b28b1787;

typedef struct {
    double _min;
    double _max;
    double _total;
    int _samples;
} CDStruct_2d9a0da2;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    float _field1;
    double _field2;
    long long _field3;
} CDStruct_488ba8aa;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    long long _field1;
    unsigned long long _field2;
} CDStruct_1dee9796;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    _Bool _field2;
    _Bool _field3;
    long long _field4;
    CDStruct_f6649601 _field5;
} CDStruct_369cfc16;

typedef struct {
    unsigned long long count;
    unsigned long long capacity;
    struct grpc_metadata *metadata;
} CDStruct_6f820e53;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct CGPoint pts[5];
} CDStruct_4ff31f5f;

typedef struct {
    CDStruct_da2e99ad _field1;
    CDStruct_da2e99ad _field2;
} CDStruct_caaed6bc;

typedef struct {
    CDStruct_f1db2b5e _field1;
    double _field2;
} CDStruct_ff938fbd;

typedef struct {
    CDStruct_1b6d18a9 startTime;
    CDStruct_1b6d18a9 endTime;
    CDStruct_1b6d18a9 duration;
    unsigned int sessionId;
} CDStruct_4565c1ff;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
} CDStruct_f9662865;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
} CDStruct_1d686a6f;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
} CDStruct_f2cdc660;

typedef struct {
    unsigned short _field1;
    union {
        CDStruct_177a585b _field1;
        struct {
            unsigned short _field1[2];
            short _field2;
            float _field3[2];
        } _field2;
        CDStruct_177a585b _field3;
    } _field2;
} CDStruct_5074f54c;

typedef struct {
    CDStruct_e83c9415 _field1;
    CDStruct_e83c9415 _field2;
} CDStruct_3800d160;

// Template types
typedef struct CFRefHolder<__CVBuffer *> {
    struct __CVBuffer *_field1;
} CFRefHolder_b549d14f;

typedef struct CFRefHolder<opaqueCMSampleBuffer *> {
    struct opaqueCMSampleBuffer *_field1;
} CFRefHolder_41721aff;

typedef struct Image<mbgl::ImageAlphaMode::Premultiplied> {
    struct Size _field1;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field2;
} Image_4008407b;

typedef struct LSAObjCppPtrWrapper<LS::ImageProcessingConfig> {
    struct ImageProcessingConfig *_field1;
} LSAObjCppPtrWrapper_dcbd9e45;

typedef struct LSAObjCppPtrWrapper<LS::TrackingData> {
    struct TrackingData *_field1;
} LSAObjCppPtrWrapper_5f63bb26;

typedef struct LSAObjCppPtrWrapper<const LS::ImageObjC> {
    struct ImageObjC *_field1;
} LSAObjCppPtrWrapper_f94b3356;

typedef struct LSAObjCppPtrWrapper<const LS::TrackingParameters> {
    struct TrackingParameters *_field1;
} LSAObjCppPtrWrapper_f7213403;

typedef struct LabsCVObjCppReferenceWrapper<LabsCV::Core::CameraData> {
    struct CameraData *_field1;
} LabsCVObjCppReferenceWrapper_e8af6c78;

typedef struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::AccelerometerFrameDataRaw> {
    struct AccelerometerFrameDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_ecc42883;

typedef struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::GyroFrameDataRaw> {
    struct GyroFrameDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_4d5c3081;

typedef struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::ImuDataRaw> {
    struct ImuDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_b514864f;

typedef struct LabsCVObjCppReferenceWrapper<LabsCV::ImuSensorFusion::VideoTimestampsDataRaw> {
    struct VideoTimestampsDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_029e125f;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::AlignmentFrameData> {
    struct AlignmentFrameData *_field1;
} LabsCVObjCppReferenceWrapper_a247e599;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::CameraData> {
    struct CameraData *_field1;
} LabsCVObjCppReferenceWrapper_43bb6941;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::SixdofFrameData> {
    struct SixdofFrameData *_field1;
} LabsCVObjCppReferenceWrapper_9ee7b43a;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::Core::StabilizerFrameData> {
    struct StabilizerFrameData *_field1;
} LabsCVObjCppReferenceWrapper_bf7f86ad;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::Depth::CalibrationData> {
    struct CalibrationData *_field1;
} LabsCVObjCppReferenceWrapper_16776c1b;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::DepthFrameData> {
    struct DepthFrameData *_field1;
} LabsCVObjCppReferenceWrapper_dd24d974;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::ImuSensorFusion::AccelerometerFrameDataRaw> {
    struct AccelerometerFrameDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_c4e596eb;

typedef struct LabsCVObjCppReferenceWrapper<const LabsCV::ImuSensorFusion::GyroFrameDataRaw> {
    struct GyroFrameDataRaw *_field1;
} LabsCVObjCppReferenceWrapper_c71cc8ae;

typedef struct LabsCVObjCppReferenceWrapper<const cv::Mat> {
    struct Mat *_field1;
} LabsCVObjCppReferenceWrapper_d43f08b3;

typedef struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::AlignmentFrameData, std::__1::allocator<LabsCV::Core::AlignmentFrameData>>> {
    struct vector<LabsCV::Core::AlignmentFrameData, std::__1::allocator<LabsCV::Core::AlignmentFrameData>> *_field1;
} LabsCVObjCppReferenceWrapper_21f99fb9;

typedef struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::SixdofFrameData, std::__1::allocator<LabsCV::Core::SixdofFrameData>>> {
    struct vector<LabsCV::Core::SixdofFrameData, std::__1::allocator<LabsCV::Core::SixdofFrameData>> *_field1;
} LabsCVObjCppReferenceWrapper_3b712ee0;

typedef struct LabsCVObjCppReferenceWrapper<const std::__1::vector<LabsCV::Core::StabilizerFrameData, std::__1::allocator<LabsCV::Core::StabilizerFrameData>>> {
    struct vector<LabsCV::Core::StabilizerFrameData, std::__1::allocator<LabsCV::Core::StabilizerFrameData>> *_field1;
} LabsCVObjCppReferenceWrapper_88a40394;

typedef struct LabsCVObjCppReferenceWrapper<const std::__1::vector<double, std::__1::allocator<double>>> {
    struct vector<double, std::__1::allocator<double>> *_field1;
} LabsCVObjCppReferenceWrapper_e48dfc07;

typedef struct ObjCppPtrWrapper<Composer::JavaScriptRuntime> {
    struct JavaScriptRuntime *o;
} ObjCppPtrWrapper_6fbac7df;

typedef struct PropertyValue<mbgl::Color> {
    struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> _field1;
} PropertyValue_57078898;

typedef struct Rect_<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} Rect__ef479948;

typedef struct RepeatedPtrField<Composer::Action> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
} RepeatedPtrField_a3f87753;

typedef struct RepeatingCallback<void (bool, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>&)> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
} RepeatingCallback_f9343488;

typedef struct Size_<int> {
    int _field1;
    int _field2;
} Size__dedc3bbb;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct array<float, 2> {
    float _field1[2];
} array_9f98b67a;

typedef struct array<float, 3> {
    float _field1[3];
} array_859211e7;

typedef struct array<float, 4> {
    float _field1[4];
} array_4d684532;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct function<mapbox::geometry::point<double>(const mbgl::LatLng &)> {
    struct type __buf_;
    struct __base<mapbox::geometry::point<double>(const mbgl::LatLng &)> *__f_;
} function_4a3d9bf5;

typedef struct function<void (const adl::netio::HttpResult &)> {
    struct type __buf_;
    struct __base<void (const adl::netio::HttpResult &)> *__f_;
} function_1dcf92b8;

typedef struct geometry<double> {
    unsigned long long _field1;
    struct type _field2;
} geometry_0b6042fd;

typedef struct line_string<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
} line_string_a102dafb;

typedef struct linear_ring<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
} linear_ring_cd7ceeaf;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_20bec4f3;

typedef struct multi_polygon<double, std::vector> {
    polygon_f143bbb5 *_field1;
    polygon_f143bbb5 *_field2;
    struct __compressed_pair<mapbox::geometry::polygon<double, std::vector>*, std::__1::allocator<mapbox::geometry::polygon<double, std::vector>>> {
        polygon_f143bbb5 *_field1;
    } _field3;
} multi_polygon_951adcca;

typedef struct polygon<double, std::vector> {
    linear_ring_cd7ceeaf *_field1;
    linear_ring_cd7ceeaf *_field2;
    struct __compressed_pair<mapbox::geometry::linear_ring<double, std::vector>*, std::__1::allocator<mapbox::geometry::linear_ring<double, std::vector>>> {
        linear_ring_cd7ceeaf *_field1;
    } _field3;
} polygon_f143bbb5;

typedef struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
} scoped_refptr_81e0d7bb;

typedef struct shared_ptr<Composer::ShadowNodeTree> {
    struct ShadowNodeTree *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f6d7a31c;

typedef struct shared_ptr<Composer::ValueFunction> {
    struct ValueFunction *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6906cf6a;

typedef struct shared_ptr<Composer::ViewLoader> {
    struct ViewLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6d470f88;

typedef struct shared_ptr<LS::BaseFaceMesh> {
    struct BaseFaceMesh *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_cc71a7a2;

typedef struct shared_ptr<LS::ComplexEffect> {
    struct ComplexEffect *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_c23a9965;

typedef struct shared_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e078de4;

typedef struct shared_ptr<LS::ImageObjC> {
    struct ImageObjC *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6112f96f;

typedef struct shared_ptr<LS::TextureBase> {
    struct TextureBase *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a0cbdd2a;

typedef struct shared_ptr<LS::TextureWithTransform> {
    struct TextureWithTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_72f2ba33;

typedef struct shared_ptr<LabsCV::ImuSensorFusion::ImuDataRaw> {
    struct ImuDataRaw *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a744d978;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<SC::Query::BaseExpr<bool>> {
    struct BaseExpr<bool> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_163b3c25;

typedef struct shared_ptr<addlive::DecoderCallback> {
    struct DecoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5d6e4d93;

typedef struct shared_ptr<addlive::DirectRendererCallback> {
    struct DirectRendererCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fe59ffec;

typedef struct shared_ptr<addlive::EncoderCallback> {
    struct EncoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a3542306;

typedef struct shared_ptr<addlive::NumberResponder> {
    struct NumberResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b2984fc8;

typedef struct shared_ptr<addlive::Service> {
    struct Service *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_756dba43;

typedef struct shared_ptr<addlive::ServiceListener> {
    struct ServiceListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5fdff3df;

typedef struct shared_ptr<addlive::VoidResponder> {
    struct VoidResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c0f0acb2;

typedef struct shared_ptr<addlive::shared_state::Connection> {
    struct Connection *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f2074f89;

typedef struct shared_ptr<snap::composer::AttributesBindingContext> {
    struct AttributesBindingContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_201911dc;

typedef struct shared_ptr<snap::composer::DaemonClient> {
    struct DaemonClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b8d08add;

typedef struct shared_ptr<snap::composer::JSModule> {
    struct JSModule *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_512c62ba;

typedef struct shared_ptr<snap::composer::JSRuntime> {
    struct JSRuntime *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7811b5df;

typedef struct shared_ptr<snap::content_manager::BehaviorCallbackWriter> {
    struct BehaviorCallbackWriter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0ee39352;

typedef struct shared_ptr<snap::content_manager::BoltResult> {
    struct BoltResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f8490324;

typedef struct shared_ptr<snap::content_manager::ContentManager> {
    struct ContentManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7dbdcd2d;

typedef struct shared_ptr<snap::content_manager::ContentResult> {
    struct ContentResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_46ab9346;

typedef struct shared_ptr<snap::content_manager::GetUntrackedCachesCompletionCallback> {
    struct GetUntrackedCachesCompletionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dc12c033;

typedef struct shared_ptr<snap::content_manager::InterimObjectUnzipper> {
    struct InterimObjectUnzipper *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c6986be9;

typedef struct shared_ptr<snap::content_manager::InterimPayloadProcessor> {
    struct InterimPayloadProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e30a19a0;

typedef struct shared_ptr<snap::content_manager::ReadStream> {
    struct ReadStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ea4dd268;

typedef struct shared_ptr<snap::content_manager::TaskCompletionCallback> {
    struct TaskCompletionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ed83fba8;

typedef struct shared_ptr<snap::content_manager::WriteStream> {
    struct WriteStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5d299611;

typedef struct shared_ptr<snap::content_resolution::BoltNetworkRulesProviderCallback> {
    struct BoltNetworkRulesProviderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d8a22ac2;

typedef struct shared_ptr<snap::content_resolution::ContentResolver> {
    struct ContentResolver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9ebbd4c1;

typedef struct shared_ptr<snap::content_resolution::MossRankedMediaVariantsProviderCallback> {
    struct MossRankedMediaVariantsProviderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_83084b00;

typedef struct shared_ptr<snap::fidelius::FideliusHelper> {
    struct FideliusHelper *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_300df36a;

typedef struct shared_ptr<snap::file_manager::GetResult> {
    struct GetResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_82d95599;

typedef struct shared_ptr<snap::graphene::ClientMetricsProcessor> {
    struct ClientMetricsProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4a21a387;

typedef struct shared_ptr<snap::graphene::ConfigureClientMetrics> {
    struct ConfigureClientMetrics *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_636bbb41;

typedef struct shared_ptr<snap::grpc::AuthContextCallback> {
    struct AuthContextCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5167fecf;

typedef struct shared_ptr<snap::grpc::ClientAttestationCallback> {
    struct ClientAttestationCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4c6afddd;

typedef struct shared_ptr<snap::grpc::GrpcManager> {
    struct GrpcManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2268282f;

typedef struct shared_ptr<snap::hello::Hello> {
    struct Hello *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_91800b9e;

typedef struct shared_ptr<snap::messaging::ConversationManager> {
    struct ConversationManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_31e36e5f;

typedef struct shared_ptr<snap::messaging::FeedManager> {
    struct FeedManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fa577351;

typedef struct shared_ptr<snap::messaging::FetchUserDisplayNameCallback> {
    struct FetchUserDisplayNameCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_452a135d;

typedef struct shared_ptr<snap::messaging::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dbc838bb;

typedef struct shared_ptr<snap::messaging::StatelessSession> {
    struct StatelessSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_aefb32b8;

typedef struct shared_ptr<snap::messaging::UploadCallback> {
    struct UploadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7587cc48;

typedef struct shared_ptr<snap::network::NetworkManager> {
    struct NetworkManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9d534590;

typedef struct shared_ptr<snap::network_api::NetworkApi> {
    struct NetworkApi *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8a449218;

typedef struct shared_ptr<snap::network_manager::NetworkManager> {
    struct NetworkManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_02f6cfa8;

typedef struct shared_ptr<snap::network_manager::ProgressiveDownloadCallback> {
    struct ProgressiveDownloadCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c3a21101;

typedef struct shared_ptr<snap::network_manager::UrlRequest> {
    struct UrlRequest *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8cd80ded;

typedef struct shared_ptr<snap::network_manager::UrlRequestCallback> {
    struct UrlRequestCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_15c98029;

typedef struct shared_ptr<snap::network_manager::UrlResponseInfo> {
    struct UrlResponseInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_09551d79;

typedef struct shared_ptr<snap::network_types::BandwidthChangeListener> {
    struct BandwidthChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b51b7f3d;

typedef struct shared_ptr<snap::network_types::BandwidthChangeNotifier> {
    struct BandwidthChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_78c8ff1a;

typedef struct shared_ptr<snap::network_types::ConnectivityChangeListener> {
    struct ConnectivityChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_be644834;

typedef struct shared_ptr<snap::network_types::ConnectivityChangeNotifier> {
    struct ConnectivityChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_40099c5c;

typedef struct shared_ptr<snap::network_types::DataSaverModeChangeListener> {
    struct DataSaverModeChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_31334f9c;

typedef struct shared_ptr<snap::network_types::DataSaverModeChangeNotifier> {
    struct DataSaverModeChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ee9e20f5;

typedef struct shared_ptr<snap::network_types::HttpRequestAndInfo> {
    struct HttpRequestAndInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7dd28b8f;

typedef struct shared_ptr<snap::network_types::HttpRequestBuilder> {
    struct HttpRequestBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_11f5830e;

typedef struct shared_ptr<snap::network_types::HttpRequestCallback> {
    struct HttpRequestCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_afb36397;

typedef struct shared_ptr<snap::network_types::HttpRequestProgressiveCallback> {
    struct HttpRequestProgressiveCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_24c624cd;

typedef struct shared_ptr<snap::network_types::NetworkManagerNotifier> {
    struct NetworkManagerNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5b252241;

typedef struct shared_ptr<snap::network_types::RankerCallback> {
    struct RankerCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6022ac5d;

typedef struct shared_ptr<snap::network_types::Runnable> {
    struct Runnable *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_986fb840;

typedef struct shared_ptr<snap::network_types::UiPageChangeListener> {
    struct UiPageChangeListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3c8fe4b0;

typedef struct shared_ptr<snap::network_types::UiPageChangeNotifier> {
    struct UiPageChangeNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6feb1090;

typedef struct shared_ptr<snap::network_types::UploadDataProvider> {
    struct UploadDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1a7ce957;

typedef struct shared_ptr<snap::network_types::UserLogOutListener> {
    struct UserLogOutListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3832325f;

typedef struct shared_ptr<snap::network_types::UserLogOutNotifier> {
    struct UserLogOutNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d7aa1617;

typedef struct shared_ptr<snap::shims::DataProvider> {
    struct DataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bd03877a;

typedef struct shared_ptr<snap::shims::DispatchTask> {
    struct DispatchTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3431538a;

typedef struct shared_ptr<snap::shims::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_00467bdd;

typedef struct shared_ptr<snap::shims::Platform> {
    struct Platform *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_aabb657c;

typedef struct shared_ptr<talkcorev3::AsyncTask> {
    struct AsyncTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8537d7cf;

typedef struct shared_ptr<talkcorev3::CallingManager> {
    struct CallingManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_890eee60;

typedef struct shared_ptr<talkcorev3::CognacSession> {
    struct CognacSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_913ee57f;

typedef struct shared_ptr<talkcorev3::CognacSessionDelegate> {
    struct CognacSessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f42f8736;

typedef struct shared_ptr<talkcorev3::CompletionHandler> {
    struct CompletionHandler *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_acde51be;

typedef struct shared_ptr<talkcorev3::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c04af217;

typedef struct shared_ptr<talkcorev3::MetricsMetadataContainer> {
    struct MetricsMetadataContainer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e6ea19ac;

typedef struct shared_ptr<talkcorev3::MetricsReporter> {
    struct MetricsReporter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ecb86bd5;

typedef struct shared_ptr<talkcorev3::PresenceService> {
    struct PresenceService *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a98b9edb;

typedef struct shared_ptr<talkcorev3::PresenceServiceDelegate> {
    struct PresenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a60f1bfa;

typedef struct shared_ptr<talkcorev3::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_785f52f1;

typedef struct shared_ptr<talkcorev3::SessionDelegate> {
    struct SessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ba403e89;

typedef struct shared_ptr<talkcorev3::TalkCore> {
    struct TalkCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e98dd72;

typedef struct shared_ptr<talkcorev3::TalkCoreDelegate> {
    struct TalkCoreDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_49b51578;

typedef struct tuple<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
        unique_ptr_430f0bd3 _field1;
        shared_ptr_a0cbdd2a _field2;
        shared_ptr_a0cbdd2a _field3;
        shared_ptr_a0cbdd2a _field4;
        struct CGSize _field5;
    } _field1;
} tuple_3b4c9a89;

typedef struct unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>> {
    struct __compressed_pair<LS::ImageObjC *, std::__1::default_delete<LS::ImageObjC>> {
        struct ImageObjC *_field1;
    } _field1;
} unique_ptr_430f0bd3;

typedef struct unique_ptr<OE::BitmojiAvatarClassification::System, std::__1::default_delete<OE::BitmojiAvatarClassification::System>> {
    struct __compressed_pair<OE::BitmojiAvatarClassification::System *, std::__1::default_delete<OE::BitmojiAvatarClassification::System>> {
        struct System *__value_;
    } __ptr_;
} unique_ptr_667c9294;

typedef struct unique_ptr<SC::Query::BaseExpr<bool>, std::__1::default_delete<SC::Query::BaseExpr<bool>>> {
    struct __compressed_pair<SC::Query::BaseExpr<bool>*, std::__1::default_delete<SC::Query::BaseExpr<bool>>> {
        struct BaseExpr<bool> *_field1;
    } _field1;
} unique_ptr_8233b5dc;

typedef struct unique_ptr<mbgl::style::Image, std::__1::default_delete<mbgl::style::Image>> {
    struct __compressed_pair<mbgl::style::Image *, std::__1::default_delete<mbgl::style::Image>> {
        struct Image *_field1;
    } _field1;
} unique_ptr_490301f4;

typedef struct unique_ptr<mbgl::style::Layer, std::__1::default_delete<mbgl::style::Layer>> {
    struct __compressed_pair<mbgl::style::Layer *, std::__1::default_delete<mbgl::style::Layer>> {
        struct Layer *__value_;
    } __ptr_;
} unique_ptr_63a96b52;

typedef struct unique_ptr<mbgl::style::Source, std::__1::default_delete<mbgl::style::Source>> {
    struct __compressed_pair<mbgl::style::Source *, std::__1::default_delete<mbgl::style::Source>> {
        struct Source *__value_;
    } __ptr_;
} unique_ptr_b6920a88;

typedef struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> {
    struct __compressed_pair<net::CertVerifier *, std::__1::default_delete<net::CertVerifier>> {
        struct CertVerifier *_field1;
    } _field1;
} unique_ptr_33e8c17e;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_11220739;

typedef struct unordered_map<std::__1::basic_string<char>, mapbox::geometry::value, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mapbox::geometry::value>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_4ddb3e61;

typedef struct unordered_set<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
    struct __hash_table<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>, std::__1::allocator<std::__1::__hash_node<long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<long, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<long>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<long>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_30ae6e39;

typedef struct variant<mapbox::geometry::geometry<double>, mapbox::geometry::feature<double>, mapbox::geometry::feature_collection<double, std::vector>> {
    unsigned long long _field1;
    struct type _field2;
} variant_d69826d0;

typedef struct variant<mbgl::SymbolAnnotation, mbgl::LineAnnotation, mbgl::FillAnnotation> {
    unsigned long long _field1;
    struct type _field2;
} variant_9da3b8f0;

typedef struct variant<unsigned long long, long long, double, std::__1::basic_string<char>> {
    unsigned long long _field1;
    struct type _field2;
} variant_fb0212ef;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
} vector_896d67e1;

typedef struct vector<LS::DeviceMotionSample, std::__1::allocator<LS::DeviceMotionSample>> {
    struct DeviceMotionSample *__begin_;
    struct DeviceMotionSample *__end_;
    struct __compressed_pair<LS::DeviceMotionSample *, std::__1::allocator<LS::DeviceMotionSample>> {
        struct DeviceMotionSample *__value_;
    } __end_cap_;
} vector_92a8733f;

typedef struct vector<SCDocObject *, std::__1::allocator<SCDocObject *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCDocObject *__strong *, std::__1::allocator<SCDocObject *>> {
        id *__value_;
    } __end_cap_;
} vector_30c1d833;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_03b67401;

typedef struct vector<const char *, std::__1::allocator<const char *>> {
    char **_field1;
    char **_field2;
    struct __compressed_pair<const char **, std::__1::allocator<const char *>> {
        char **_field1;
    } _field3;
} vector_f96bb9f1;

typedef struct vector<flatbuffers::Offset<Snapchat::Canvas>, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
    struct Offset<Snapchat::Canvas> *_field1;
    struct Offset<Snapchat::Canvas> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Canvas>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
        struct Offset<Snapchat::Canvas> *_field1;
    } _field3;
} vector_3a8de40f;

typedef struct vector<flatbuffers::Offset<Snapchat::Embeddable>, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
    struct Offset<Snapchat::Embeddable> *_field1;
    struct Offset<Snapchat::Embeddable> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Embeddable>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
        struct Offset<Snapchat::Embeddable> *_field1;
    } _field3;
} vector_1393feb2;

typedef struct vector<flatbuffers::Offset<Snapchat::GenericAsset>, std::__1::allocator<flatbuffers::Offset<Snapchat::GenericAsset>>> {
    struct Offset<Snapchat::GenericAsset> *_field1;
    struct Offset<Snapchat::GenericAsset> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::GenericAsset>*, std::__1::allocator<flatbuffers::Offset<Snapchat::GenericAsset>>> {
        struct Offset<Snapchat::GenericAsset> *_field1;
    } _field3;
} vector_79ffdc15;

typedef struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
} vector_f9ed6fc8;

typedef struct vector<mapbox::geometry::value, std::__1::allocator<mapbox::geometry::value>> {
    struct value *_field1;
    struct value *_field2;
    struct __compressed_pair<mapbox::geometry::value *, std::__1::allocator<mapbox::geometry::value>> {
        struct value *_field1;
    } _field3;
} vector_d365565e;

typedef struct vector<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
    variant_fb0212ef *_field1;
    variant_fb0212ef *_field2;
    struct __compressed_pair<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>*, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
        variant_fb0212ef *_field1;
    } _field3;
} vector_00c9b367;

typedef struct vector<mbgl::FeatureType, std::__1::allocator<mbgl::FeatureType>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<mbgl::FeatureType *, std::__1::allocator<mbgl::FeatureType>> {
        unsigned char *_field1;
    } _field3;
} vector_ef172a5e;

typedef struct vector<mbgl::style::Filter, std::__1::allocator<mbgl::style::Filter>> {
    struct Filter *_field1;
    struct Filter *_field2;
    struct __compressed_pair<mbgl::style::Filter *, std::__1::allocator<mbgl::style::Filter>> {
        struct Filter *_field1;
    } _field3;
} vector_aee46008;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
} vector_9492931a;

typedef struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
} vector_9c221dbc;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
} vector_12da65de;

typedef struct weak_ptr<LS::Audio::ISpeakerOutputFactory> {
    struct ISpeakerOutputFactory *_field1;
    struct __shared_weak_count *_field2;
} weak_ptr_6ca4656c;

typedef struct weak_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_ae78a97a;

#pragma mark Named Unions

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

union grpc_byte_buffer_data {
    CDStruct_d7a492ad _field1;
    struct grpc_compressed_buffer _field2;
};

union grpc_op_data {
    CDStruct_d7a492ad reserved;
    struct grpc_op_send_initial_metadata send_initial_metadata;
    struct grpc_op_send_message send_message;
    struct grpc_op_send_status_from_server send_status_from_server;
    struct grpc_op_recv_initial_metadata recv_initial_metadata;
    struct grpc_op_recv_message recv_message;
    struct grpc_op_recv_status_on_client recv_status_on_client;
    struct grpc_op_recv_close_on_server recv_close_on_server;
};

union grpc_slice_data {
    struct grpc_slice_refcounted refcounted;
    struct grpc_slice_inlined inlined;
};

union storage_union {
    void *_field1;
    struct type _field2;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

