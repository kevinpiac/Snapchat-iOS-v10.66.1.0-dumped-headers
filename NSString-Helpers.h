//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSString.h>

@interface NSString (Helpers)
+ (id)attibutesFromFont:(id)arg1 lineBreakMode:(long long)arg2;
+ (id)attibutesFromFont:(id)arg1 lineBreakMode:(long long)arg2 alignment:(long long)arg3;
+ (_Bool)captionContentValidation:(id)arg1;
+ (id)cleanPunctuationLowercase:(id)arg1;
+ (id)codePointForText:(id)arg1 atIndex:(unsigned long long)arg2;
+ (id)codePointForText:(id)arg1 atIndex:(unsigned long long)arg2 length:(long long *)arg3;
+ (_Bool)containsAlphabetCharactersOnly:(id)arg1;
+ (id)formatDate:(id)arg1 referenceDate:(id)arg2;
+ (id)formatDate:(id)arg1 referenceDate:(id)arg2 maxHours:(unsigned long long)arg3 capitalize:(_Bool)arg4;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 capitalize:(_Bool)arg3;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5 justNowThreshold:(double)arg6;
+ (id)formatDate:(id)arg1 showAgo:(_Bool)arg2 maxHours:(unsigned long long)arg3 showAbbrNow:(_Bool)arg4 capitalize:(_Bool)arg5 justNowThreshold:(double)arg6 useYesterdayText:(_Bool)arg7 useSimplified:(_Bool)arg8;
+ (id)formatNumber:(id)arg1;
+ (id)formatRelativeDate:(id)arg1 localizedTodayString:(id)arg2;
+ (id)formatRelativeDate:(id)arg1 localizedTodayString:(id)arg2 offsetByHours:(long long)arg3;
+ (id)formatTimeInterval:(double)arg1 showAbbrNow:(_Bool)arg2 capitalize:(_Bool)arg3 justNowThreshold:(double)arg4 roundingToClosest:(_Bool)arg5;
+ (id)generateRandomStringOfLength:(long long)arg1;
+ (id)getEmailDomain:(id)arg1;
+ (id)hexToData:(id)arg1;
+ (_Bool)isBlank:(id)arg1;
+ (_Bool)isEmojiCharacter:(id)arg1;
+ (_Bool)isEmojiCodePoint:(unsigned long long)arg1;
+ (_Bool)isEmojiJoiner:(unsigned long long)arg1;
+ (_Bool)isEmojiVariationSelector:(unsigned long long)arg1;
+ (_Bool)isNilOrEmpty:(id)arg1;
+ (_Bool)isNotBlank:(id)arg1;
+ (_Bool)isValidEmail:(id)arg1;
+ (id)longDateFromDate:(id)arg1;
+ (long long)maxFontSizeInWidthForText:(id)arg1 fontName:(id)arg2 withMinFontSize:(long long)arg3 withMaxFontSize:(long long)arg4 maxWidth:(double)arg5;
+ (id)mediumDateFromDate:(id)arg1;
+ (id)nilToEmpty:(id)arg1;
+ (id)numberFromString:(id)arg1;
+ (id)processForDisplay:(id)arg1;
+ (id)punctuationCharacters;
+ (id)shortDateFromDate:(id)arg1;
+ (id)sizeCache;
+ (id)stringByCombiningComponents:(id)arg1;
+ (id)stringByRemovingEmojis:(id)arg1;
+ (id)stringByRemovingPrefixEmojis:(id)arg1;
+ (id)stringWithBool:(_Bool)arg1;
+ (struct CGSize)text:(id)arg1 sizeWithFont:(id)arg2 constrainedToSize:(struct CGSize)arg3;
+ (id)timeFromDate:(id)arg1;
+ (long long)typeForCodePoint:(unsigned long long)arg1;
+ (id)urlDecodeString:(id)arg1;
+ (id)urlEncodeString:(id)arg1;
+ (double)widthSingleLineText:(id)arg1 forFont:(id)arg2;
- (_Bool)containsOnlyEmojis;
- (_Bool)doesMatchRegStringExp:(id)arg1;
- (_Bool)isValidUrlFormat;
- (id)jsonDecoded;
- (long long)lengthOfCharacterSequences;
- (unsigned long long)levenshtinDistanceWithString:(id)arg1;
- (_Bool)matches:(id)arg1;
- (unsigned long long)numberOfSubstringOccurrences:(id)arg1;
- (id)sc_commonSuffixWithString:(id)arg1 options:(unsigned long long)arg2;
- (id)sc_decodeBase64String:(id)arg1;
- (id)sc_encodeToBase64String:(id)arg1;
- (_Bool)sc_hasPrefix:(id)arg1 options:(unsigned long long)arg2;
- (id)sc_localizedFirstLetterCapitalizedString;
- (id)sc_localizedSentenceCapitalizedString;
- (id)sc_lowercaseString;
- (_Bool)sc_onlyContainsOccurrencesOfCharacter:(id)arg1;
- (id)sc_reversedString;
- (struct CGSize)sizeWithAttributes:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)sizeWithFont:(id)arg1;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3;
- (id)splitStringByNonAlphanumericCharacters:(id)arg1;
- (id)stringByTrimmingLeadingAndTrailingWhitespaces;
- (id)stringByTrimmingLeadingWhitespace;
- (id)substringToIndexByCharacterSequence:(unsigned long long)arg1;
@end

