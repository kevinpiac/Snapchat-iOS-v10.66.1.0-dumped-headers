//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AMPUploaderDelegate-Protocol.h"

@class AMPAppStateProvider, AMPEventConfigurer, AMPEventList, AMPEventListRepository, AMPExperimentProvider, AMPFailureInfo, AMPFailureInfoRepository, AMPJsonSerializer, AMPLogQueueConfigAdapter, AMPOverflowManager, AMPSequenceIdProvider, AMPSequenceIdRepository, AMPSingleScheduler, AMPUploader, NSString;
@protocol AMPEventLoggerPrefetching;

@interface AMPEventLogger : NSObject <AMPUploaderDelegate>
{
    _Bool _prefetchQueue;
    AMPUploader *_uploader;
    NSString *_logQueueName;
    NSString *_formattedLogQueueName;
    AMPJsonSerializer *_jsonSerializer;
    AMPEventList *_eventList;
    id <AMPEventLoggerPrefetching> _eventLoggerPrefetcher;
    AMPLogQueueConfigAdapter *_config;
    AMPEventConfigurer *_eventConfigurer;
    AMPFailureInfoRepository *_failureInfoRepo;
    AMPEventListRepository *_eventListRepo;
    CDUnknownBlockType _checkUserCreated;
    AMPSingleScheduler *_singleUploadScheduler;
    AMPOverflowManager *_overflowManager;
    AMPSequenceIdRepository *_sequenceIdRepo;
    AMPAppStateProvider *_appStateProvider;
    AMPFailureInfo *_failureInfo;
    AMPSequenceIdProvider *_sequenceIdProvider;
    AMPExperimentProvider *_experimentProvider;
}

- (void).cxx_destruct;
- (_Bool)_isAppBackgrounded;
- (_Bool)_isConnectedToNetwork;
- (_Bool)_isConnectedViaWifi;
- (_Bool)_isEventBlacklisted:(id)arg1;
- (_Bool)_isLoggingUploadDetailsEvent:(id)arg1;
- (long long)_lastSequenceIdInEvents:(id)arg1;
- (void)_logEvent:(id)arg1 uploadImmediately:(_Bool)arg2;
- (void)_logUploadGrapheneMetricsWithRequestWithInfo:(id)arg1 responseInfo:(id)arg2;
- (void)_prefetchQueueMaybeUploadWithTrigger:(unsigned long long)arg1;
- (void)_prefetchQueueUploadEventBatchWithTrigger:(unsigned long long)arg1;
- (void)_reportOverflownEventsAndCrash;
- (void)_saveEventListAndSequenceIdProvider;
- (_Bool)_shouldReportOverflownEvents;
- (_Bool)_shouldStartUpload;
- (_Bool)_shouldUploadBatchImmediately;
- (void)_uploadEventBatchWithTrigger:(unsigned long long)arg1;
- (void)ampSessionDidEnd;
- (void)ampSessionDidStart;
@property(readonly, nonatomic) AMPAppStateProvider *appStateProvider; // @synthesize appStateProvider=_appStateProvider;
@property(readonly, nonatomic) CDUnknownBlockType checkUserCreated; // @synthesize checkUserCreated=_checkUserCreated;
@property(readonly, nonatomic) AMPLogQueueConfigAdapter *config; // @synthesize config=_config;
- (id)description;
@property(readonly, nonatomic) AMPEventConfigurer *eventConfigurer; // @synthesize eventConfigurer=_eventConfigurer;
@property(readonly, nonatomic) AMPEventList *eventList; // @synthesize eventList=_eventList;
@property(readonly, nonatomic) AMPEventListRepository *eventListRepo; // @synthesize eventListRepo=_eventListRepo;
@property(nonatomic) __weak id <AMPEventLoggerPrefetching> eventLoggerPrefetcher; // @synthesize eventLoggerPrefetcher=_eventLoggerPrefetcher;
@property(readonly, nonatomic) AMPExperimentProvider *experimentProvider; // @synthesize experimentProvider=_experimentProvider;
@property(readonly, nonatomic) AMPFailureInfo *failureInfo; // @synthesize failureInfo=_failureInfo;
@property(readonly, nonatomic) AMPFailureInfoRepository *failureInfoRepo; // @synthesize failureInfoRepo=_failureInfoRepo;
@property(readonly, nonatomic) NSString *formattedLogQueueName; // @synthesize formattedLogQueueName=_formattedLogQueueName;
- (unsigned long long)hash;
- (id)initWithConfig:(id)arg1 eventListRepo:(id)arg2 sequenceIdRepo:(id)arg3 eventList:(id)arg4 userCheck:(CDUnknownBlockType)arg5 scheduler:(id)arg6 uploader:(id)arg7 overflowManager:(id)arg8 jsonSerializer:(id)arg9 appStateProvider:(id)arg10 logQueueName:(id)arg11 experimentProvider:(id)arg12;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToLogger:(id)arg1;
@property(readonly, nonatomic) AMPJsonSerializer *jsonSerializer; // @synthesize jsonSerializer=_jsonSerializer;
- (void)logEvent:(id)arg1 uploadImmediately:(_Bool)arg2;
@property(readonly, nonatomic) NSString *logQueueName; // @synthesize logQueueName=_logQueueName;
@property(readonly, nonatomic) AMPOverflowManager *overflowManager; // @synthesize overflowManager=_overflowManager;
@property(readonly, nonatomic) _Bool prefetchQueue; // @synthesize prefetchQueue=_prefetchQueue;
@property(readonly, nonatomic) unsigned long long queuePriority;
@property(readonly, nonatomic) AMPSequenceIdProvider *sequenceIdProvider; // @synthesize sequenceIdProvider=_sequenceIdProvider;
@property(readonly, nonatomic) AMPSequenceIdRepository *sequenceIdRepo; // @synthesize sequenceIdRepo=_sequenceIdRepo;
@property(readonly, nonatomic) AMPSingleScheduler *singleUploadScheduler; // @synthesize singleUploadScheduler=_singleUploadScheduler;
- (void)startBlizzardPrefetch;
- (void)uploadEventBatchScheduleOrStartImmediately:(_Bool)arg1 trigger:(unsigned long long)arg2;
- (void)uploadScheduledInLoggers:(id)arg1;
@property(readonly, nonatomic) AMPUploader *uploader; // @synthesize uploader=_uploader;
- (void)uploader:(id)arg1 didCompleteRequestWithInfo:(id)arg2 responseInfo:(id)arg3;

@end

