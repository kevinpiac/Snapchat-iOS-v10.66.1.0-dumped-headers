//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SCActionable-Protocol.h"
#import "SCHeaderDelegate-Protocol.h"
#import "SCLeftSwipeableDismissTransitionControllerDelegate-Protocol.h"
#import "SCSearchContentViewControlling-Protocol.h"
#import "SCSearchQueryResultControllerDelegate-Protocol.h"
#import "SCShakeToReportDelegate-Protocol.h"

@class NSObject, NSString, SCAddFriendsPullToDismissHandler, SCAddFriendsQuickAddLogger, SCAddFriendsScrollAnimatorDataCoordinator, SCLazy, SCLeftSwipeableTransitionProvider, SCSearchContentViewControllerContext, SCSearchQueryResultController, SCUserSession;
@protocol SCActionHandling, SCAddFriendsWorkflowDelegate, SCCurrentPageTracker, SCPageViewLogging, SCSearchQueryCoordinating, SCSearchSectionCreating;

@interface SCAddFriendsV2ViewController : UIViewController <SCHeaderDelegate, SCLeftSwipeableDismissTransitionControllerDelegate, SCShakeToReportDelegate, SCSearchQueryResultControllerDelegate, SCSearchContentViewControlling, SCActionable>
{
    SCLazy *_snapchattersDataFetcher;
    SCLazy *_userInfoProvider;
    SCLazy *_viewedIncomingFriendsTracker;
    SCUserSession *_userSession;
    id <SCPageViewLogging> _pageViewLogger;
    id <SCCurrentPageTracker> _currentPageTracker;
    id <SCSearchQueryCoordinating> _queryCoordinator;
    id <SCSearchSectionCreating> _sectionCreator;
    SCLazy *_contentView;
    SCAddFriendsScrollAnimatorDataCoordinator *_scrollAnimatorDataCoordinator;
    SCAddFriendsPullToDismissHandler *_pullToDismissHandler;
    SCSearchQueryResultController *_queryResultController;
    SCAddFriendsQuickAddLogger *_seenAndAddEventLogger;
    long long _previousStatusBarStyle;
    double _pageSessionStartTime;
    id <SCAddFriendsWorkflowDelegate> _addFriendsWorkflowDelegate;
    id <SCActionHandling> _actionHandler;
    SCSearchContentViewControllerContext *_searchContentViewControllerContext;
    SCLeftSwipeableTransitionProvider *_transitionProvider;
    NSObject *_cameraPresenter;
}

- (void).cxx_destruct;
- (id)_addSnapcodeSearchBarButton;
- (void)_addSnapcodeSearchBarButtonPressed:(id)arg1;
- (void)_dismissKeyboard;
- (void)_setupDismissKeyboardForScrollView;
@property(retain, nonatomic) id <SCActionHandling> actionHandler; // @synthesize actionHandler=_actionHandler;
@property(retain, nonatomic) NSObject *cameraPresenter; // @synthesize cameraPresenter=_cameraPresenter;
- (void)dealloc;
- (id)defaultProjectNameV2;
- (id)initWithSnapchattersDataFetcher:(id)arg1 viewedIncomingFriendsTracker:(id)arg2 userInfoProvider:(id)arg3 userSession:(id)arg4 pageViewLogger:(id)arg5 currentPageTracker:(id)arg6 queryCoordinator:(id)arg7 sectionCreator:(id)arg8 seenAndAddEventLogger:(id)arg9 addFriendsWorkflowDelegate:(id)arg10;
- (void)initiatePageDismissInteractive:(_Bool)arg1;
- (void)loadView;
- (id)presentingViewControllerForSearchQueryResultController:(id)arg1;
- (void)rightButtonPressed;
@property(retain, nonatomic) SCSearchContentViewControllerContext *searchContentViewControllerContext; // @synthesize searchContentViewControllerContext=_searchContentViewControllerContext;
- (void)searchControllerDidChangeToText:(id)arg1 byChangingCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)searchControllerDidTapClearButton;
- (_Bool)searchControllerShouldReturnWithSearchText:(id)arg1;
- (void)searchQueryResultController:(id)arg1 willUpdateResultForQuery:(id)arg2 fromQuery:(id)arg3;
- (void)searchQueryResultControllerDidUpdateQueryResult:(id)arg1;
@property(retain, nonatomic) SCLeftSwipeableTransitionProvider *transitionProvider; // @synthesize transitionProvider=_transitionProvider;
- (_Bool)shouldDismissViewControllerWhenEnterBackground;
- (_Bool)viewControllerPrefersSelfDismiss;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

