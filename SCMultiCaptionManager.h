//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCStylableCaptionDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSString, SCStylableCaption, UITapGestureRecognizer, UITextView, UIView, UIVisualEffectView;
@protocol SCMultiCaptionManagerDelegate;

@interface SCMultiCaptionManager : NSObject <SCStylableCaptionDelegate, UITextViewDelegate, UIGestureRecognizerDelegate>
{
    UIView *_contentView;
    NSMutableArray *_captions;
    UITextView *_textView;
    UIVisualEffectView *_editingBackgroundView;
    struct CGRect _lastFrame;
    double _lastScale;
    double _lastRotation;
    double _lastFontSize;
    struct CGPoint _lastTranslation;
    double keyboardAnimationDuration;
    unsigned long long keyboardAnimationCurve;
    UITapGestureRecognizer *_tapGesture;
    NSArray *_shadows;
    long long _textAlignment;
    long long _baselineAdjustment;
    _Bool _textViewAnimationEnabled;
    _Bool _addBufferToSizeOfCaptions;
    _Bool _editing;
    id <SCMultiCaptionManagerDelegate> _delegate;
    unsigned long long _editingMode;
    SCStylableCaption *_activeCaption;
    UIView *_inputAccessoryView;
}

- (void).cxx_destruct;
- (struct CGRect)_activeCaptionAnimationFrameEnd;
- (void)_applyBlockToShadowLayers:(CDUnknownBlockType)arg1;
- (void)_createShadowLayerWithShadow:(id)arg1;
- (struct UIEdgeInsets)_defaultTextViewEdgeInset;
- (void)_discardEditingAction;
- (void)_endEditingActiveCaption;
- (void)_hideBlurView;
- (void)_inputKeyboardWillChangeFrame:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_removeShadowLayers;
- (void)_showBlurView;
- (void)_tapped:(id)arg1;
- (struct CGPoint)_textViewContentOffsetAlignToBottom:(id)arg1;
- (void)_updateShadowLayerWithString:(id)arg1;
@property(retain, nonatomic) SCStylableCaption *activeCaption; // @synthesize activeCaption=_activeCaption;
- (void)addCaption;
- (void)addObservers;
- (void)captionPanning:(id)arg1;
- (void)captionPinching:(id)arg1;
- (void)captionRotating:(id)arg1;
- (void)captionTapped:(id)arg1;
@property(readonly, nonatomic) NSArray *captions;
- (void)createCaption:(id)arg1 font:(id)arg2 fontName:(id)arg3 fontUrl:(id)arg4 fontSize:(double)arg5 textColor:(id)arg6 origin:(struct CGPoint)arg7 width:(double)arg8 height:(double)arg9 rotation:(double)arg10 shadows:(id)arg11 animate:(_Bool)arg12;
- (id)createTextViewLayer;
- (void)dealloc;
@property(nonatomic) __weak id <SCMultiCaptionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)deleteActiveCaption;
@property(nonatomic) unsigned long long editingMode; // @synthesize editingMode=_editingMode;
- (void)endEditing;
- (struct CGRect)frameOfTextRange:(struct _NSRange)arg1 textView:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)initWithContentView:(id)arg1;
@property(retain, nonatomic) UIView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
- (void)presentInvalidTextAlertView;
- (void)resetCaptionManager;
- (void)setAddBufferToSizeOfCaptions:(_Bool)arg1;
- (void)setBaselineAdjustment:(long long)arg1;
- (void)setCaptionCenter:(struct CGPoint)arg1;
- (void)setCaptionOrigin:(struct CGPoint)arg1;
- (void)setCaptionRotation:(double)arg1;
- (void)setColor:(id)arg1;
- (void)setContentViewAlpha:(double)arg1;
- (void)setFont:(id)arg1 withName:(id)arg2 andUrl:(id)arg3;
- (void)setFontSize:(double)arg1;
- (void)setShadows:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextViewAnimationEnabled:(_Bool)arg1;
- (void)showCaptions:(_Bool)arg1;
- (void)startEditingActiveCaption;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

