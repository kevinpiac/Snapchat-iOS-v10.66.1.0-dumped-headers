//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCExperimentContext.h"

@interface SCDiscoverFeedRankingStoryIHExperimentContext : SCExperimentContext
{
    unsigned long long _storyIHLongImpressionCountThreshold;
    unsigned long long _storyIHTotalImpressionTimeThresholdSeconds;
    unsigned long long _storyIHExplorationStoryLongImpressionCountThreshold;
    unsigned long long _storyIHExplorationStoryTotalImpressionTimeThresholdSeconds;
    unsigned long long _storyIHCuratedHeroTileLongImpressionCountThreshold;
    unsigned long long _storyIHCuratedHeroTileTotalImpressionTimeThresholdSeconds;
}

- (id)experimentName;
- (void)setupParameters;
@property(readonly, nonatomic) unsigned long long storyIHCuratedHeroTileLongImpressionCountThreshold; // @synthesize storyIHCuratedHeroTileLongImpressionCountThreshold=_storyIHCuratedHeroTileLongImpressionCountThreshold;
@property(readonly, nonatomic) unsigned long long storyIHCuratedHeroTileTotalImpressionTimeThresholdSeconds; // @synthesize storyIHCuratedHeroTileTotalImpressionTimeThresholdSeconds=_storyIHCuratedHeroTileTotalImpressionTimeThresholdSeconds;
@property(readonly, nonatomic) unsigned long long storyIHExplorationStoryLongImpressionCountThreshold; // @synthesize storyIHExplorationStoryLongImpressionCountThreshold=_storyIHExplorationStoryLongImpressionCountThreshold;
@property(readonly, nonatomic) unsigned long long storyIHExplorationStoryTotalImpressionTimeThresholdSeconds; // @synthesize storyIHExplorationStoryTotalImpressionTimeThresholdSeconds=_storyIHExplorationStoryTotalImpressionTimeThresholdSeconds;
@property(readonly, nonatomic) unsigned long long storyIHLongImpressionCountThreshold; // @synthesize storyIHLongImpressionCountThreshold=_storyIHLongImpressionCountThreshold;
@property(readonly, nonatomic) unsigned long long storyIHTotalImpressionTimeThresholdSeconds; // @synthesize storyIHTotalImpressionTimeThresholdSeconds=_storyIHTotalImpressionTimeThresholdSeconds;

@end

