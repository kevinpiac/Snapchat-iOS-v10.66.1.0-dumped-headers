//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCRequestSchedulerDelegate-Protocol.h"
#import "SCRequestTaskRunDelegate-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class NSString, SCDownloadConsumptionRecorder, SCRequestManagerLogger, SCRequestScheduler;
@protocol SCNetworkManagerDelegate, SCPerforming;

@interface SCNetworkManager : NSObject <SCTraceEnabled, SCRequestSchedulerDelegate, SCRequestTaskRunDelegate>
{
    SCRequestScheduler *_requestScheduler;
    id <SCNetworkManagerDelegate> _delegate;
    SCRequestManagerLogger *_networkManagerLogger;
    SCDownloadConsumptionRecorder *_downloadConsumptionRecorder;
    id <SCPerforming> _queuePerformer;
    id <SCPerforming> _dummyQueuePerformer;
}

- (void).cxx_destruct;
- (void)_addObservers;
- (void)_logDummyDispatchLatency;
- (void)_networkReachabilityStatusDidChangeWithNotification:(id)arg1;
- (void)addContext:(id)arg1;
- (void)addContext:(id)arg1 toRequestWithKey:(id)arg2;
- (void)boostRequestWithKey:(id)arg1 toHigherConnectivity:(long long)arg2;
- (void)boostRequestWithKey:(id)arg1 toHigherPriority:(long long)arg2;
- (void)cancelQueuedRequestWithKey:(id)arg1;
- (void)cancelRequestWithKey:(id)arg1;
- (void)cancelRequestWithKey:(id)arg1 queue:(id)arg2 byProducingResumeData:(CDUnknownBlockType)arg3;
- (void)cancelRequestsWithContext:(id)arg1;
- (void)consumeContentWithKey:(id)arg1;
- (void)contextsDidChangeForRequestScheduler:(id)arg1;
- (void)contextsWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)criticalModeEnabled;
@property(nonatomic) __weak id <SCNetworkManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)disableCriticalMode;
@property(retain, nonatomic) SCDownloadConsumptionRecorder *downloadConsumptionRecorder; // @synthesize downloadConsumptionRecorder=_downloadConsumptionRecorder;
- (unsigned long long)downloadRequestConcurrency;
- (void)downloadStateForRequestWithKey:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) id <SCPerforming> dummyQueuePerformer; // @synthesize dummyQueuePerformer=_dummyQueuePerformer;
- (void)enableCriticalMode;
- (id)init;
- (unsigned long long)metadataRequestConcurrency;
- (id)networkInterceptors;
@property(retain, nonatomic) SCRequestManagerLogger *networkManagerLogger; // @synthesize networkManagerLogger=_networkManagerLogger;
- (id)nnmNetworkApi;
- (unsigned long long)numOfLargeDLTasks;
- (unsigned long long)numOfUploadTasks;
- (void)pauseAllRequestsWithReason:(id)arg1;
- (void)pauseBackgroundDownloads;
@property(retain, nonatomic) id <SCPerforming> queuePerformer; // @synthesize queuePerformer=_queuePerformer;
- (void)removeContext:(id)arg1;
- (void)removeContext:(id)arg1 disableContextOnlyModeIfRemoved:(_Bool)arg2;
- (void)removeContexts:(id)arg1;
- (void)reset;
- (void)resumeAllRequestsWithReason:(id)arg1;
- (void)resumeBackgroundDownloads;
- (void)runTask:(id)arg1 withCompletionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)setContexts:(id)arg1;
- (void)setContexts:(id)arg1 withRequestManagerMode:(long long)arg2;
- (void)setDataSaverProvider:(CDUnknownBlockType)arg1;
- (void)setIsUserBlocking:(_Bool)arg1;
- (void)setNetworkInterceptors:(id)arg1;
- (void)startToMonitorProgressWithRequestKey:(id)arg1 queue:(id)arg2 progressHandler:(CDUnknownBlockType)arg3;
- (void)stopToMonitorProgressWithRequestKey:(id)arg1;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 progressiveUpdateQueue:(id)arg3 progressiveUpdateBlock:(CDUnknownBlockType)arg4;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 successQueue:(id)arg3 failureQueue:(id)arg4 successBlock:(CDUnknownBlockType)arg5 failureBlock:(CDUnknownBlockType)arg6;
- (unsigned long long)totalRequestConcurrencyReceivingData;
- (void)updateUILayoutOrder:(id)arg1 rootContext:(id)arg2 mediaContextType:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

