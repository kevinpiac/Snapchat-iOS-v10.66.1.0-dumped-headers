//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SCAUserTrackedEvent.h"

@class NSNumber, NSString;

@interface SCAProfilingMetricsEvent : SCAUserTrackedEvent
{
    NSNumber *withRecordingOccuring;
    NSNumber *lensFrameTimeMs;
    NSNumber *lensFrameTimeWarmMs;
    NSNumber *lensTrackingTimeMs;
    NSNumber *lensEngineTimeMs;
    NSNumber *lensScriptTimeMs;
    NSNumber *lensBadFrames;
    NSNumber *lensFirstFrameMs;
    NSNumber *lensStartFrameRatio;
    NSNumber *lensLoadTimeMs;
    NSNumber *lensUnloadTimeMs;
    NSNumber *lensStdFrameTimeMs;
    NSNumber *lensStdFrameTimeWarmMs;
    NSNumber *lensGpuTimeMs;
    NSNumber *lensGpuTimeWarmMs;
    NSNumber *lensFps;
    NSNumber *lensFpsWarm;
    NSString *lensId;
}

- (void).cxx_destruct;
- (id)asDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)getEventName;
- (long long)getEventQoS;
- (double)getLensBadFrames;
- (double)getLensEngineTimeMs;
- (double)getLensFirstFrameMs;
- (double)getLensFps;
- (double)getLensFpsWarm;
- (double)getLensFrameTimeMs;
- (double)getLensFrameTimeWarmMs;
- (double)getLensGpuTimeMs;
- (double)getLensGpuTimeWarmMs;
- (id)getLensId;
- (double)getLensLoadTimeMs;
- (double)getLensScriptTimeMs;
- (double)getLensStartFrameRatio;
- (double)getLensStdFrameTimeMs;
- (double)getLensStdFrameTimeWarmMs;
- (double)getLensTrackingTimeMs;
- (double)getLensUnloadTimeMs;
- (double)getPerUserSamplingRate;
- (_Bool)getWithRecordingOccuring;
- (void)setLensBadFrames:(double)arg1;
- (void)setLensEngineTimeMs:(double)arg1;
- (void)setLensFirstFrameMs:(double)arg1;
- (void)setLensFps:(double)arg1;
- (void)setLensFpsWarm:(double)arg1;
- (void)setLensFrameTimeMs:(double)arg1;
- (void)setLensFrameTimeWarmMs:(double)arg1;
- (void)setLensGpuTimeMs:(double)arg1;
- (void)setLensGpuTimeWarmMs:(double)arg1;
- (void)setLensId:(id)arg1;
- (void)setLensLoadTimeMs:(double)arg1;
- (void)setLensScriptTimeMs:(double)arg1;
- (void)setLensStartFrameRatio:(double)arg1;
- (void)setLensStdFrameTimeMs:(double)arg1;
- (void)setLensStdFrameTimeWarmMs:(double)arg1;
- (void)setLensTrackingTimeMs:(double)arg1;
- (void)setLensUnloadTimeMs:(double)arg1;
- (void)setWithRecordingOccuring:(_Bool)arg1;

@end

