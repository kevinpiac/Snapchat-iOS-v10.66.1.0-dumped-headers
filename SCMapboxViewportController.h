//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct  2 2019 14:24:29).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCMGLMapViewListener-Protocol.h"
#import "SCMapViewport-Protocol.h"
#import "SCMapViewportTargetListener-Protocol.h"

@class NSString, SCMapViewportListenerAnnouncer, SCMapboxView;
@protocol SCMapGestures, SCMapViewportTarget;

@interface SCMapboxViewportController : NSObject <SCMGLMapViewListener, SCMapViewportTargetListener, SCMapViewport>
{
    SCMapboxView *_mapboxView;
    id <SCMapViewportTarget> _target;
    id <SCMapGestures> _gestureController;
    _Bool _isSettingTarget;
    SCMapViewportListenerAnnouncer *_viewportAnnouncer;
}

- (void).cxx_destruct;
- (void)_clearTargetIfNecessary;
- (id)acquirePerformantConversionCache;
- (id)camera;
- (id)cameraThatFitsCoordinateBounds:(struct SCMapCoordinateBounds)arg1 edgePadding:(struct UIEdgeInsets)arg2;
@property(nonatomic) struct CLLocationCoordinate2D centerCoordinate;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 withConversionCache:(id)arg2 toPointToView:(id)arg3;
- (struct CGRect)convertCoordinateBounds:(struct SCMapCoordinateBounds)arg1 toRectToView:(id)arg2;
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct SCMapCoordinateBounds)convertRect:(struct CGRect)arg1 toCoordinateBoundsFromView:(id)arg2;
@property(nonatomic) double direction;
- (void)flyToCamera:(id)arg1 withDuration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)flyToCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 pitch:(double)arg3 duration:(double)arg4 edgePadding:(struct UIEdgeInsets)arg5 completion:(CDUnknownBlockType)arg6;
- (id)initWithMapboxView:(id)arg1 mapboxListenerAnnouncer:(id)arg2 gestureController:(id)arg3;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)mapViewRegionIsChanging:(id)arg1;
- (void)mapViewportTarget:(id)arg1 didUpdateCamera:(id)arg2 withTransition:(id)arg3;
- (void)releasePerformantConversionCache:(id)arg1;
- (void)setCamera:(id)arg1;
- (void)setCamera:(id)arg1 withDuration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCamera:(id)arg1 withTransition:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(_Bool)arg2;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;
- (void)setDirection:(double)arg1 animated:(_Bool)arg2;
- (void)setPitch:(double)arg1;
@property(retain, nonatomic) id <SCMapViewportTarget> target;
- (void)setTarget:(id)arg1 transition:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) SCMapViewportListenerAnnouncer *viewportAnnouncer; // @synthesize viewportAnnouncer=_viewportAnnouncer;
@property(nonatomic) struct SCMapCoordinateBounds visibleCoordinateBounds;
- (void)setVisibleCoordinateBounds:(struct SCMapCoordinateBounds)arg1 animated:(_Bool)arg2;
@property(nonatomic) double zoomLevel;
- (void)setZoomLevel:(double)arg1 animated:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

